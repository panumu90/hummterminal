import { useState, useRef, useEffect } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { PulseButton } from "@/components/ui/pulse-button";
import { Skeleton } from "@/components/ui/skeleton";
import { Input } from "@/components/ui/input";
import { Badge } from "@/components/ui/badge";
import ReactMarkdown from 'react-markdown';
import remarkGfm from 'remark-gfm';
import { motion } from "framer-motion";
import { Bot, User, Send, TrendingUp, Wrench, MapPin, Target, Zap, DollarSign, Crosshair, Globe, Building, Users, Shield, Database, Workflow, MessageCircle, Phone, Heart, GraduationCap, BookOpen, Cpu, Scale, Star, Maximize2, Minimize2, HelpCircle, FileText, ExternalLink, BarChart3, Rocket } from "lucide-react";
import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from "@/components/ui/dialog";
import { ScrollArea } from "@/components/ui/scroll-area";
import { useMutation } from "@tanstack/react-query";
import { apiRequest } from "@/lib/queryClient";
import { useToast } from "@/hooks/use-toast";
import { FeedbackModal } from "./FeedbackModal";

interface ChatMessage {
  content: string;
  isUser: boolean;
  timestamp: number;
  isWelcome?: boolean;
}

type ContextType = "strategic" | "practical" | "finnish" | "planning" | "technical" | "mcp" | "general";

interface QuestionButton {
  id: string;
  question: string;
  category: string;
  icon: typeof Bot;
  color: string;
}

interface TopicArea {
  id: string;
  title: string;
  icon: typeof Bot;
  color: string;
  questions: QuestionButton[];
}

// Pre-written responses for quick questions (no API call)
const preWrittenResponses: Record<string, string> = {
  "faq-10m-goal": `**Miten saavutamme 10M‚Ç¨ liikevaihdon?**

Kolme skenaariota 10M‚Ç¨ tavoitteeseen:

**Vaihtoehto A: Orgaaninen kasvu + AI**
‚Ä¢ Kasvata henkil√∂st√∂ 52 ‚Üí 150 hl√∂√§
‚Ä¢ AI tehostaa tuottavuutta 66% ‚Üí ‚Ç¨67k/hl√∂
‚Ä¢ Tulos: 150 hl√∂√§ √ó ‚Ç¨67k = ‚Ç¨10M

**Vaihtoehto B: Hybridimalli (suositeltu)**
‚Ä¢ 100 ihmist√§ @ ‚Ç¨80k/hl√∂ = ‚Ç¨8M
‚Ä¢ AI-palvelut (autonomiset agentit) = ‚Ç¨2M
‚Ä¢ Tulos: ‚Ç¨10M, matalammat henkil√∂st√∂kustannukset

**Vaihtoehto C: AI-first**
‚Ä¢ 60 ihmist√§ @ ‚Ç¨100k/hl√∂ = ‚Ç¨6M
‚Ä¢ AI-pohjaiset palvelut = ‚Ç¨4M
‚Ä¢ Tulos: ‚Ç¨10M, korkein kannattavuus

**Aikataulu**: 24-36 kuukautta onnistuneella AI-implementaatiolla.`,

  "faq-ai-cost-roi": `**Paljonko AI-transformaatio maksaa ja mik√§ on ROI?**

**Investoinnit:**
‚Ä¢ Vuosi 1: ‚Ç¨200-500k (teknologia, henkil√∂st√∂, koulutus)
‚Ä¢ Vuosi 2: ‚Ç¨100-200k (skaalaus, optimointi)

**ROI-odotus:**
‚Ä¢ Takaisinmaksuaika: 18-24 kuukautta
‚Ä¢ Kustannuss√§√§st√∂t: 20-30% vuonna 2
‚Ä¢ Tuottavuuden kasvu: 50-66%

**Konkreettiset hy√∂dyt:**
‚Ä¢ Operatiiviset kustannukset: -30%
‚Ä¢ Asiakaskontaktit/tunti: +13.8%
‚Ä¢ Puhelink√§sittely: +45% nopeampi
‚Ä¢ Henkil√∂st√∂n tuottavuus: ‚Ç¨41k ‚Üí ‚Ç¨67k/hl√∂

**Bottom line**: ‚Ç¨500k investointi voi tuottaa ‚Ç¨1.5-2M lis√§arvoa vuodessa.`,

  "faq-ai-start": `**Mist√§ aloitamme AI-implementaation?**

**Vaihe 1: Lyhyt aikav√§li (0-6 kk)**
1. **Pilottiprojekti**: Valitse 1-2 use casea
   ‚Ä¢ FAQ-chat (nopea voitto)
   ‚Ä¢ Statustiedustelut (helppo automatisoida)

2. **Teknologiavalinta**: Arvioi alustat
   ‚Ä¢ OpenAI GPT-4
   ‚Ä¢ Anthropic Claude
   ‚Ä¢ Azure OpenAI

3. **Mittaristo**: M√§√§rittele KPI:t
   ‚Ä¢ Asiakastyytyv√§isyys
   ‚Ä¢ Vastausajat
   ‚Ä¢ Kustannuss√§√§st√∂t
   ‚Ä¢ Tarkkuus/virheprosentti

4. **Tiimi**: Rekrytoi/kouluta
   ‚Ä¢ 1-2 AI-kehitt√§j√§√§
   ‚Ä¢ Kouluta nykyinen henkil√∂st√∂

**Kriittiset menestystekij√§t:**
‚Ä¢ Aloita pienest√§, skaalaa nopeasti
‚Ä¢ Mittaa kaikkea
‚Ä¢ Ota henkil√∂st√∂ mukaan alusta l√§htien
‚Ä¢ Asiakaskokemus etusijalle`,

  "faq-ai-use-cases": `**Mitk√§ ovat AI:n t√§rkeimm√§t k√§ytt√∂kohteet Hummille?**

**1. Autonomiset asiakaspalvelu-agentit**
‚Ä¢ 24/7 saatavuus ilman henkil√∂st√∂kustannuksia
‚Ä¢ FAQ, statustiedustelut, peruskyselyt
‚Ä¢ Potentiaali: 40-60% yhteydenotoista automatisoitavissa

**2. √Ñlykk√§√§t ty√∂kalut henkil√∂st√∂lle**
‚Ä¢ AI-assistentit monimutkaisiin tapauksiin
‚Ä¢ Automaattinen tiivistelm√§t ja raportit
‚Ä¢ Ehdotukset ratkaisuihin historiadata pohjalta

**3. Ennakoiva asiakaspalvelu**
‚Ä¢ AI tunnistaa ongelmia ennen yhteydenottoa
‚Ä¢ Proaktiiviset ratkaisut
‚Ä¢ V√§hent√§√§ palvelupyynt√∂j√§ 15-25%

**4. Back office -automaatio**
‚Ä¢ Laskutus, raportointi, dokumentaatio
‚Ä¢ Workflow-automaatio
‚Ä¢ Kustannuss√§√§st√∂: 30-40%

**5. Analytics & insights**
‚Ä¢ Reaaliaikainen asiakasdata-analyysi
‚Ä¢ Trendit ja ennusteet
‚Ä¢ P√§√§t√∂ksenteon tuki johdolle

**Prioriteetti**: Aloita kohdista 1 ja 3 (nopeat voitot), sitten 2 ja 4.`,

  "faq-risks": `**Mitk√§ ovat suurimmat riskit ja miten ne hallitaan?**

**Teknologiariskit:**
‚ùå Riski: AI-mallien tarkkuus ja luotettavuus
‚úÖ Hallinta: Perusteellinen testaus, ihminen loopissa, jatkuva monitorointi

‚ùå Riski: Integraatiokompleksisuus
‚úÖ Hallinta: MCP-protokolla, standardoidut rajapinnat, pilotit ensin

‚ùå Riski: Tietoturva ja GDPR
‚úÖ Hallinta: Roolipohjainen p√§√§synhallinta, audit trail, compliance-tarkistukset

**Liiketoimintariskit:**
‚ùå Riski: Asiakasvastarinta AI-palveluille
‚úÖ Hallinta: Hybridimalli (AI + ihminen), selke√§ viestint√§, valinnanvapaus

‚ùå Riski: Kilpailijoiden nopea kehitys
‚úÖ Hallinta: Aloita nyt, iteroi nopeasti, jatkuva innovaatio

‚ùå Riski: Rekrytointihaasteet
‚úÖ Hallinta: Kouluta nykyist√§ henkil√∂st√∂√§, partneroinnit, ulkoiset konsultit

**Taloudelliset riskit:**
‚ùå Riski: ROI-tavoitteiden saavuttaminen
‚úÖ Hallinta: Selke√§t mittarit, vaiheistettu investointi, pilotit ennen skaalaa

‚ùå Riski: Kassavirran hallinta
‚úÖ Hallinta: ‚Ç¨200-500k alkuinvestointi, pienet inkrementit, nopeat voitot

**Riskienhallintastrategia**: Fail fast, learn fast, scale fast.`,

  "roi-measurement": `**AI-investoinnin ROI asiakaspalvelussa - Konkreettinen mittaaminen**

Humm Group voi mitata AI-investoinnin arvoa n√§ill√§ keskeisill√§ mittareilla:

### üìä **Suorat kustannuss√§√§st√∂t**
- **Henkil√∂st√∂kustannukset**: 20-30% v√§hennys manuaalisen ty√∂n automatisoinnin my√∂t√§
- **Skaalautuvuus**: 3x liikevaihdon kasvu ilman lineaarista henkil√∂st√∂lis√§yst√§
- **Nykytila**: ‚Ç¨2.1M / 52 hl√∂√§ = ‚Ç¨40k/hl√∂ ‚Üí **Tavoite**: ‚Ç¨10M / 52 hl√∂√§ = ‚Ç¨192k/hl√∂

### ‚ö° **Tehokkuushy√∂dyt**
- **Vastausaika**: Keskim√§√§rin 4-6h ‚Üí alle 30 sekuntia (AI-hoidetut)
- **First Response Time (FRT)**: -85% parannus
- **Tikettien k√§sittelyaika**: -40-60% kun AI esik√§sittelee ja luokittelee
- **S√§√§stetty aika**: 20-25h/viikko per tiimi

### üòä **Asiakaskokemuksen parannus**
- **CSAT-pistem√§√§r√§**: Nykytila 7.2/10 ‚Üí Tavoite 8.5-9.0/10
- **Customer Effort Score (CES)**: -30% (helpompi asioida)
- **Churn-rate**: -15-20% proaktiivisella asiakaspalvelulla
- **Upsell-mahdollisuudet**: +25% AI-avusteisen personoinnin kautta

### üéØ **Mitattava ROI-laskenta (Hummille)**
**Investointi vuosi 1:**
- Open source -pohjaiset ratkaisut (n8n, Mistral, Langchain): ‚Ç¨0 lisenssit
- Kehitys + toteutus: ‚Ç¨50-75k (oma ty√∂ tai konsultointi)
- Infrastruktuuri (pilvi): ‚Ç¨10-15k/v

**S√§√§st√∂t vuosi 1:**
- Henkil√∂st√∂kustannukset: ‚Ç¨80-120k (automaatio korvaa 1.5-2 FTE:t√§)
- Prosessitehokkuus: ‚Ç¨30-50k (nopeutunut k√§sittely)
- Churn-v√§heneminen: ‚Ç¨40-60k (asiakkaiden pysyvyys)

**‚û°Ô∏è ROI vuosi 1: 150-280% (payback 4-8 kuukautta)**
**‚û°Ô∏è ROI 3 vuotta: 400-600%**

### üìà **Seurantakojelauta johdolle**
1. **Revenue per Employee**: THE KPI teknologiajohdolle
2. **AI Automation Rate**: Kuinka suuri % tiketeist√§ hoidetaan t√§ysin automaattisesti
3. **Cost per Ticket**: Yhden tiketin k√§sittelyn todellinen kustannus
4. **Customer Lifetime Value (CLV)**: AI:n vaikutus asiakkaiden elinkaariarvoon`,

  "cx-trends-2025": `**2025 suurimmat CX-trendit ja AI:n rooli**

### üéØ **1. Hyperpersonointi (Hyper-personalization)**
- **Mit√§**: Jokaiselle asiakkaalle r√§√§t√§l√∂ity kokemus reaaliajassa
- **AI:n rooli**: Analysoi asiakkaan historian, k√§ytt√§ytymisen ja kontekstin ‚Üí personoidut suositukset
- **Humm-esimerkki**: AI tunnistaa, ett√§ asiakas X avaa aina tiketit maanantaiaamuisin klo 8-9 ‚Üí proaktiivinen viesti sunnuntai-iltana: "Hei! Huomasimme, ett√§ tavallisesti tarvitset apua maanantaiaamuisin. T√§ss√§ pikaohjeet..."

### ‚ö° **2. Proaktiivinen asiakaspalvelu**
- **Mit√§**: Asiakaspalvelu ottaa yhteytt√§ ennen kuin asiakas huomaa ongelman
- **AI:n rooli**: Ennakoiva analytiikka (predictive analytics) + automaattiset h√§lytykset
- **Humm-esimerkki**: AI havaitsee, ett√§ asiakkaan j√§rjestelm√§ss√§ on ep√§normaali virhelokin kasvu ‚Üí l√§hett√§√§ proaktiivisen viestin ja korjausohjeet ennen kuin asiakas ilmoittaa ongelmasta

### ü§ñ **3. Agentic AI (Itsen√§iset AI-agentit)**
- **Mit√§**: AI-agentit, jotka osaavat ratkaista monimutkaisempia ongelmia itsen√§isesti
- **Ero chatbottiin**: Chatbot vastaa kysymyksiin | AI-agentti tekee toimenpiteit√§ (luo tikettej√§, p√§ivitt√§√§ CRM:√§√§, aloittaa prosesseja)
- **Humm-esimerkki**: Asiakkaan laskutusongelma ‚Üí AI-agentti tarkistaa CRM:n, havaitsee virheellisen laskun, korjaa sen automaattisesti ja ilmoittaa asiakkaalle

### üîÆ **4. Ennustava asiakaskokemus (Predictive CX)**
- **Mit√§**: AI ennustaa asiakkaiden tarpeita ennen kuin he itse tiet√§v√§t
- **AI:n rooli**: Koneoppimismallit analysoivat historiaa ja k√§ytt√§ytymist√§
- **Humm-esimerkki**: AI havaitsee kuvion: "Asiakkaat, jotka k√§ytt√§v√§t ominaisuutta Y, tarvitsevat 80% todenn√§k√∂isyydell√§ apua ominaisuudessa Z 3 p√§iv√§n sis√§ll√§" ‚Üí proaktiivinen ohjeistus

### üé§ **5. Multimodaalinen asiakaspalvelu**
- **Mit√§**: Asiakkaat voivat vaihtaa kanavaa kesken keskustelun (chat ‚Üí puhelin ‚Üí email) ilman toistamista
- **AI:n rooli**: Yhten√§inen kontekstin hallinta + puheentunnistus (ASR) + sentimenttianalyysi
- **Humm-esimerkki**: Asiakas aloittaa chatissa, AI havaitsee turhautumisen sentimenttianalyysilla ‚Üí tarjoaa puhelinsoiton + siirt√§√§ kaikki tiedot agentille automaattisesti

### üõ°Ô∏è **6. Privacy-First AI (Tietosuojakeskeinen AI)**
- **Mit√§**: Asiakkaat vaativat l√§pin√§kyvyytt√§ siit√§, mit√§ AI tekee heid√§n datalleen
- **AI:n rooli**: Selitt√§v√§ AI (Explainable AI) + MCP-protokolla turvallisiin integraatioihin
- **Humm-esimerkki**: AI:n jokaisen vastauksen yhteydess√§ n√§kyy: "Hain tietoa CRM:st√§ (asiakastiedot), ERP:st√§ (tilausstatus), ja tukikannasta (ratkaisuhistoria)"

### üìä **Hummin toimenpiteet 2025**
‚úÖ **Q1 2025**: Hyperpersonointi k√§ytt√∂√∂n (segmenttikohtaiset AI-mallit)
‚úÖ **Q2 2025**: Proaktiivinen asiakaspalvelu (ennakoivat h√§lytykset)
‚úÖ **Q3 2025**: Agentic AI (itsen√§iset AI-agentit tikettien k√§sittelyyn)
‚úÖ **Q4 2025**: Multimodaalinen CX (chat + puhelin + email yhten√§isesti)`,

  "reduce-manual-work": `**Automaation vaikutus manuaalisen ty√∂n v√§hent√§miseen**

### üéØ **Hummin nykytilanne**
- **60-70% kustannuksista = henkil√∂st√∂kulut**
- **52 ty√∂ntekij√§√§, ‚Ç¨2.1M liikevaihto** ‚Üí ‚Ç¨40k/hl√∂ (alhainen tehokkuus)
- **Manuaaliset ty√∂vaiheet**: Tikettien luku, luokittelu, reititys, vastausten kirjoittaminen, seuranta

### ‚ö° **AI-automaation vaikutus**

#### **1. Tikettien esik√§sittely (15-20h/viikko s√§√§st√∂√§)**
- **Ennen**: Agentti lukee tiketin, ymm√§rt√§√§ kontekstin, etsii relevantin tiedon
- **AI:n j√§lkeen**: AI lukee, luokittelee, ja reititys automaattisesti + esit√§ytt√§√§ vastausluonnoksen
- **S√§√§st√∂**: 5-10 min/tiketti √ó 200 tiketti/viikko = **16-33 tuntia/viikko**

#### **2. One-click-send vastaukset (10-15h/viikko s√§√§st√∂√§)**
- **Ennen**: Agentti kirjoittaa vastauksen tyhj√§st√§, tarkistaa oikeinkirjoituksen, formatoi
- **AI:n j√§lkeen**: AI luo valmiin vastausluonnoksen ‚Üí agentti tarkistaa ja klikkaa "L√§het√§"
- **S√§√§st√∂**: 10-15 min/tiketti √ó 100 tiketti/viikko = **16-25 tuntia/viikko**

#### **3. Itsen√§inen AI-agentti (20-30h/viikko s√§√§st√∂√§)**
- **Ennen**: Kaikki tiketit vaativat ihmisen
- **AI:n j√§lkeen**: 40-60% tiketeist√§ hoidetaan t√§ysin automaattisesti (esim. "Salasanan nollaus", "Tilausstatus", "Laskun kopio")
- **S√§√§st√∂**: 200 tiketti/viikko √ó 50% automaatio √ó 15 min = **25 tuntia/viikko**

#### **4. Proaktiivinen viestint√§ (5-10h/viikko s√§√§st√∂√§)**
- **Ennen**: Asiakkaat l√§hett√§v√§t tikettej√§ ongelmista
- **AI:n j√§lkeen**: AI havaitsee ongelmat etuk√§teen ja l√§hett√§√§ ratkaisut ennen tikettej√§
- **S√§√§st√∂**: -20% tikettien m√§√§r√§ = **10-15 tuntia/viikko**

### üìä **Yhteens√§: 50-80 tuntia/viikko s√§√§st√∂√§**
= **2-3 FTE:n verran ty√∂t√§** ilman henkil√∂st√∂lis√§yst√§

### üí∞ **Taloudelliset hy√∂dyt Hummille**
- **Henkil√∂st√∂kustannuss√§√§st√∂**: ‚Ç¨80-120k/vuosi (2-3 FTE √ó ‚Ç¨40k)
- **Skaalautuvuus**: Voidaan kasvattaa liikevaihtoa ‚Ç¨2.1M ‚Üí ‚Ç¨10M ilman vastaavaa henkil√∂st√∂lis√§yst√§
- **Revenue per Employee**: ‚Ç¨40k ‚Üí ‚Ç¨192k (4.8x parannus)

### ‚úÖ **Toteutus Hummille (Open Source -pohjainen)**
1. **n8n**: Low-code automaatioalusta (‚Ç¨0 lisenssit)
2. **Mistral 7B / Llama 3**: Open source LLM:t (‚Ç¨0 lisenssit)
3. **Langchain**: AI-integraatiokehys (‚Ç¨0 lisenssit)
4. **Toteutusaika**: 4-8 viikkoa ensimm√§isiin tuloksiin
5. **Kustannus**: ‚Ç¨50-75k kehitys + ‚Ç¨10-15k/v infrastruktuuri

**‚û°Ô∏è ROI vuosi 1: 150-280%**`,

  "mcp-what-is": `**Model Context Protocol (MCP) - AI:n turvallinen integraatiostandardi**

### üéØ **Mik√§ on MCP?**

**Model Context Protocol (MCP)** on Anthropicin kehitt√§m√§ **avoin standardi**, joka m√§√§rittelee turvallisen tavan yhdist√§√§ AI-mallit (kuten Claude, GPT-4) yrityksen sis√§isiin j√§rjestelmiin (CRM, ERP, tietokannat).

### üîê **Miksi MCP on t√§rke√§?**

#### **Ongelma ilman MCP:t√§:**
- AI-mallit tarvitsevat p√§√§syn yrityksen dataan ollakseen hy√∂dyllisi√§
- Perinteisesti: API-avaimet jaetaan suoraan AI-mallille ‚Üí **turvallisuusriski**
- AI voi vahingossa p√§√§st√§ k√§siksi kaikkiin tietoihin, ei vain tarvittaviin

#### **Ratkaisu MCP:ll√§:**
- **Rajattu p√§√§sy**: AI saa vain ne tiedot, jotka se tarvitsee kyseiseen teht√§v√§√§n
- **Audit-j√§ljet**: Kaikki AI:n pyynn√∂t kirjataan lokiin
- **Roolipohjainen k√§ytt√∂oikeus**: AI-agentilla on m√§√§ritelty rooli (esim. "ticket_reader", "crm_writer")

### üìä **K√§yt√§nn√∂n esimerkki (Humm Group)**

#### **Ilman MCP:t√§ (vanha tapa):**
- Asiakas kysyy: "Mik√§ on tilauksen #12345 status?"
- AI saa p√§√§syn koko CRM-tietokantaan
- AI voi vahingossa lukea kaikkien asiakkaiden tiedot
- Turvallisuusriski + GDPR-ongelma

#### **MCP:ll√§ (turvallinen tapa):**
- Asiakas kysyy: "Mik√§ on tilauksen #12345 status?"
- AI pyyt√§√§ MCP:n kautta: "Hae tilaus #12345"
- MCP tarkistaa: Onko AI:lla oikeus?
- MCP palauttaa vain tilauksen #12345 tiedot
- Loki: "AI-agentti haki tilauksen #12345 klo 14:05"

### üõ°Ô∏è **MCP:n turvallisuusominaisuudet**

1. **Least Privilege Principle**: AI saa minimioikeudet
2. **Explicit Permissions**: Jokainen p√§√§sy vaatii luvan
3. **Audit Logging**: Kaikki kirjataan
4. **Data Isolation**: AI ei n√§e kaikkea dataa kerralla
5. **GDPR-compliant**: T√§ytt√§√§ EU:n tietosuoja-asetuksen

### üöÄ **MCP:n hy√∂dyt Hummille**

‚úÖ **Asiakkaat luottavat enemm√§n**: "AI ei p√§√§se kaikkiin tietoihin"
‚úÖ **GDPR-vaatimusten t√§ytt√§minen**: Audit-j√§ljet + rajattu p√§√§sy
‚úÖ **Skaalautuvuus**: Helppo lis√§t√§ uusia AI-agentteja ilman turvallisuusriski√§
‚úÖ **Integraatioiden hallinta**: Keskitetty tapa yhdist√§√§ AI j√§rjestelmiin

### üìà **MCP k√§yt√∂ss√§ (2025)**

- **Anthropic Claude**: Natiivituki MCP:lle
- **CyberArk**: MCP-pohjainen AI-turvallisuusalusta
- **Cerbos**: Fine-grained access control MCP-agentteille
- **Humm Group**: K√§ytt√∂√∂notto Q1 2025 ‚úÖ

### üéì **Yhteenveto**

MCP on **v√§ltt√§m√§t√∂n** standardille, joka:
- Tekee AI-integraatioista turvallisia
- T√§ytt√§√§ GDPR-vaatimukset
- Antaa asiakkaille luottamusta
- Mahdollistaa Hummin skaalautuvuuden ilman turvallisuuskompromisseja`,

  "mcp-security": `**Miten MCP parantaa AI-integraatioiden turvallisuutta?**

### üîê **Turvallisuuden tasot MCP:ss√§**

#### **1. Kontekstuaalinen p√§√§syoikeus**
AI ei saa "yleisavaimia" j√§rjestelmiin, vaan rajatun p√§√§syn per pyynt√∂:
- ‚ùå **Ilman MCP**: AI saa p√§√§syn koko CRM-tietokantaan
- ‚úÖ **MCP:ll√§**: AI saa haettua vain tietyn asiakkaan tiedot tiettyyn teht√§v√§√§n

#### **2. Audit-lokitus (Audit Trails)**
Kaikki AI:n toiminnot kirjataan:
- AI-Agent-001: READ Customer 12345 - Success
- AI-Agent-001: UPDATE Ticket 67890 - Success
- AI-Agent-002: READ Customer 99999 - DENIED (no permission)

**Hy√∂ty**: GDPR-auditointi, vianm√§√§ritys, turvallisuusseuranta

#### **3. Roolipohjainen p√§√§sy (RBAC)**
Jokainen AI-agentti toimii m√§√§ritetyll√§ roolilla:
- **Ticket Classifier**: Voi lukea tikettej√§, ei muokata asiakastietoja
- **CRM Assistant**: Voi lukea asiakastietoja, ei poistaa niit√§
- **Billing Agent**: Voi lukea laskutustietoja, ei muokata hintoja

#### **4. Eksplisiittiset luvat (Explicit Permissions)**
AI ei oleta mit√§√§n - jokainen toiminto vaatii selke√§n luvan:

**Esimerkki:**
1. AI pyyt√§√§: "Haluan p√§ivitt√§√§ asiakkaan #12345 s√§hk√∂postiosoitteen"
2. MCP tarkistaa:
   - ‚úì Onko AI:lla oikeus p√§ivitt√§√§ asiakastietoja?
   - ‚úì Onko kyseess√§ oikea asiakas?
   - ‚úì Onko pyynt√∂ looginen (ei ep√§ilytt√§v√§)?
3. Vasta sitten: Lupa my√∂nnetty

### üõ°Ô∏è **MCP vs Perinteinen API-integraatio**

| Ominaisuus | Perinteinen API | MCP |
|------------|----------------|-----|
| **P√§√§sy** | Kaikki tai ei mit√§√§n | Rajattu per pyynt√∂ |
| **Lokitus** | Vaihtelee | Pakollinen |
| **Rollback** | Manuaalinen | Automaattinen |
| **GDPR-compliance** | Haastavaa | Sis√§√§nrakennettu |

### üöÄ **Turvallisuushy√∂dyt Hummille**

‚úÖ **Asiakasluottamus**: "Teill√§ on MCP-standardi k√§yt√∂ss√§" ‚Üí asiakkaat tuntevat olonsa turvallisemmaksi
‚úÖ **Compliance**: GDPR, ISO 27001, SOC 2 helpompaa t√§ytt√§√§
‚úÖ **Riskinhallinta**: Vahingossa tapahtuva datavuoto vaikea
‚úÖ **Skaalautuvuus**: Voit lis√§t√§ AI-agentteja ilman turvallisuushuolia`,

  "mcp-automation": `**Mit√§ hy√∂ty√§ MCP:st√§ on asiakaspalvelun automaatiossa?**

### ‚ö° **MCP mahdollistaa turvallisen automaation**

#### **1. Tikettiagentit voivat toimia itsen√§isesti**
- Ilman MCP:t√§: AI voi vain ehdottaa toimenpiteit√§
- MCP:ll√§: AI voi suorittaa toimenpiteit√§ turvallisesti

**Esimerkki: Salasanan nollaus**
1. Asiakas: "Olen unohtanut salasanani"
2. AI-agentti (MCP:ll√§):
   - Tarkistaa asiakkaan henkil√∂llisyyden
   - L√§hett√§√§ nollauslinkin s√§hk√∂postiin
   - Kirjaa toimenpiteen lokiin
   - Ilmoittaa asiakkaalle: "Linkki l√§hetetty!"
3. Ei ihmisen v√§liintuloa tarvita

#### **2. Integraatiot CRM:√§√§n, ERP:hen, tukikantoihin**
MCP:n avulla AI voi:
- **Lukea** asiakkaan historiaa CRM:st√§
- **P√§ivitt√§√§** tiketin statusta
- **Luoda** uusia tapahtumia (esim. seurantateht√§v√§)
- **Hakea** relevantteja tietokanta-artikkeleita

**Ilman MCP:t√§**: Kaikki manuaalista kopioimista j√§rjestelm√§st√§ toiseen

#### **3. Monimutkaiset ty√∂nkulut (Workflows)**
MCP mahdollistaa monivaiheisen automaation:

**Esimerkki: Laskutusongelma**
1. Asiakas raportoi laskutusvirheen
2. AI hakee laskun ERP:st√§ (MCP)
3. AI tarkistaa sopimuksen CRM:st√§ (MCP)
4. AI havaitsee virheen ja korjaa sen ERP:ss√§ (MCP)
5. AI luo hyvityslaskun (MCP)
6. AI l√§hett√§√§ vahvistuksen asiakkaalle (MCP)
7. **Kaikki automaattisesti 30 sekunnissa**

### üìä **Tehokkuushy√∂dyt Hummille**

‚úÖ **40-60% tiketeist√§** hoidettavissa t√§ysin automaattisesti
‚úÖ **S√§√§st√∂: 20-30h/viikko** per tiimi
‚úÖ **Nopeus**: Vastausaika 4-6h ‚Üí 30 sekuntia
‚úÖ **Skaalautuvuus**: 3x liikevaihto ilman henkil√∂st√∂lis√§yst√§

### üéØ **Yhteenveto**

MCP tekee automaatiosta:
- **Turvallista** (rajattu p√§√§sy)
- **Luotettavaa** (audit-lokitus)
- **Skaalautuvaa** (lis√§√§ agentteja helposti)
- **GDPR-yhteensopivaa** (tietosuoja rakennettu sis√§√§n)`,

  "mcp-access-control": `**Kuinka MCP:n avulla hallitaan AI:n p√§√§syoikeuksia?**

### üîê **P√§√§syoikeuksien hallinta MCP:ss√§**

#### **1. V√§himm√§isoikeuksien periaate (Principle of Least Privilege)**
Jokainen AI-agentti saa vain minimioikeudet teht√§v√§n suorittamiseen:

**Esimerkki:**
- **Tikettien luokitteluagentti**: Voi LUKEA tikettej√§, ei MUOKATA
- **Asiakastietoagentti**: Voi LUKEA asiakastietoja, ei POISTAA
- **Laskutusagentti**: Voi LUKEA laskutustietoja, LUODA hyvityslaskuja, ei MUOKATA hintoja

#### **2. Resurssitason rajaus (Resource-Level Permissions)**
AI ei saa p√§√§sy√§ kaikkiin resursseihin, vain relevantteihin:

**Esimerkki:**
1. AI pyyt√§√§: "Hae asiakkaan #12345 tilaushistoria"
2. MCP tarkistaa:
   - ‚úì Onko AI:lla oikeus lukea tilaushistoriaa?
   - ‚úì Onko asiakkaan #12345 tiedot sallittuja t√§lle AI-agentille?
   - ‚úì Onko pyynt√∂ kontekstissa looginen?
3. Palauttaa vain asiakkaan #12345 tiedot, ei muita

#### **3. Ajallinen rajaus (Time-Based Access)**
AI:n oikeudet voivat olla rajoitettu aikaan:
- **Ty√∂aikana (8-17)**: T√§ydet oikeudet
- **Y√∂aikana (17-8)**: Vain lukuoikeus, ei muutoksia

#### **4. Kontekstuaalinen rajaus (Contextual Access)**
AI:n oikeudet riippuvat tilanteesta:
- **Rutiinitiketit**: AI voi k√§sitell√§ itsen√§isesti
- **Herk√§t aiheet** (esim. riitatilanteet): Vain lukuoikeus ‚Üí eskalointi ihmiselle

### üõ†Ô∏è **K√§yt√§nn√∂n toteutus Hummilla**

#### **Roolit ja oikeudet:**

**Rooli: Ticket Classifier**
- Role: ticket_classifier
- Oikeudet:
  - Tickets: read, update_tags, update_priority
  - Customers: read
  - CRM: read
  - Audit: write

**Rooli: Billing Agent**
- Role: billing_agent
- Oikeudet:
  - Invoices: read, create_credit_note
  - Customers: read
  - Payments: read
  - Audit: write

### üöÄ **Hy√∂dyt**

‚úÖ **Minimoitu riski**: Vahinkokaan AI-virhe ei voi aiheuttaa suurta vahinkoa
‚úÖ **GDPR-compliance**: AI n√§kee vain tarvittavat tiedot
‚úÖ **Auditointi**: Kaikki kirjataan lokiin
‚úÖ **Skaalautuvuus**: Helppo lis√§t√§ uusia rooleja ja agentteja`,

  "data-quality": `**Asiakastiedon laatu ja suojaaminen AI-projekteissa**

### üõ°Ô∏è **Tietosuojan 3 pilaria**

#### **1. Model Context Protocol (MCP) - T√ÑRKE√Ñ!**
- **Mit√§**: Avoin standardi, joka m√§√§rittelee miten AI p√§√§see k√§siksi yritysj√§rjestelmiin
- **Hy√∂ty**: AI saa vain tarvitsemansa tiedot, ei kaikkea
- **Humm-esimerkki**: AI-agentti voi hakea *yhden asiakkaan* tiedot CRM:st√§, ei kaikkien asiakkaiden tietoja

#### **2. Roolipohjainen p√§√§sy (RBAC)**
- **Mit√§**: Jokainen AI-agentti saa vain ne oikeudet, jotka sen teht√§v√§n hoitamiseen tarvitaan
- **Periaate**: *V√§himm√§n oikeuden periaate* (Principle of Least Privilege)
- **Humm-esimerkki**: Tikettien luokitteluagentti voi *lukea* tikettej√§, mutta ei *poistaa* tai *muokata* asiakastietoja

#### **3. Audit-j√§ljet ja l√§pin√§kyvyys**
- **Mit√§**: Kaikki AI:n toiminnot kirjataan lokiin
- **Hy√∂ty**: GDPR-vaatimustenmukaisuus + j√§lkik√§teen tarkastettavissa
- **Humm-esimerkki**: "AI-agentti X haki asiakkaan Y osoitetiedot CRM:st√§ 21.9.2025 klo 14:05 k√§ytt√§j√§n Z pyynn√∂st√§"

### üìä **Asiakastiedon laadun varmistaminen**

#### **A. Datan validointi**
- **Automaattinen tarkistus**: AI tarkistaa, ett√§ asiakkaan s√§hk√∂posti on oikeassa muodossa, puhelinnumero on validi, jne.
- **Duplikaattien esto**: AI havaitsee, jos sama asiakas yritt√§√§ luoda useita tilej√§

#### **B. Datan rikastaminen (Data Enrichment)**
- **AI t√§ydent√§√§ puuttuvat tiedot**: Esim. yrityksen koko, toimiala, sijainti ‚Üí haetaan julkisista l√§hteist√§
- **Segmentointi**: AI luokittelee asiakkaat automaattisesti (esim. "Enterprise", "SME", "Startup")

#### **C. Datan siistiminen (Data Cleaning)**
- **AI poistaa virheelliset tiedot**: Esim. testik√§ytt√§j√§t, botit, duplikaatit
- **Yhdenmukaistaminen**: "Oy", "OY", "Oyj" ‚Üí "Oy" (yhten√§inen formaatti)

### üîê **GDPR-vaatimustenmukaisuus**

#### **1. Tietojen minimointi**
- **Periaate**: AI k√§sittelee vain *v√§ltt√§m√§tt√∂m√§t* tiedot
- **Humm-esimerkki**: Jos AI tarvitsee asiakkaan nimen ja s√§hk√∂postin, se ei hae my√∂s puhelinnumeroa ja osoitetta

#### **2. Tietojen s√§ilytysaika**
- **Periaate**: AI:n k√§sittelem√§ data poistetaan, kun sit√§ ei en√§√§ tarvita
- **Humm-esimerkki**: Chat-keskustelun historia s√§ilytet√§√§n 30 p√§iv√§√§, sen j√§lkeen pseudonymisoidaan tai poistetaan

#### **3. Oikeus tietojen poistamiseen**
- **Periaate**: Asiakas voi pyyt√§√§ tietojensa poistamista ‚Üí AI:n pit√§√§ "unohtaa" n√§m√§ tiedot
- **Tekninen toteutus**: AI-mallit eiv√§t tallenna henkil√∂tietoja pysyv√§sti (vain viittaukset tietokantaan)`,

  "gdpr-compliance": `**Kuinka v√§ltet√§√§n datasiilot ja GDPR-riskit AI-projekteissa?**

### üõ°Ô∏è **Datasiilot - AI:n suurin vihollinen**

#### **Mik√§ on datasiile?**
Tilanne, jossa yrityksen data on hajautettu eri j√§rjestelmiin ilman yhteytt√§:
- CRM: Asiakastiedot
- ERP: Laskutustiedot
- Support: Tikettitiedot
- Email: Viestint√§historia

**Ongelma AI:lle**: AI ei saa kokonaiskuvaa ‚Üí huonot p√§√§t√∂kset

### ‚ö° **Ratkaisut datasiilojen murtamiseen**

#### **1. Keskitetty datavarasto (Data Lake/Warehouse)**
- **Mit√§**: Kaikki data yhteen paikkaan strukturoidussa muodossa
- **Teknologia**: Snowflake, BigQuery, Azure Synapse
- **Humm-toteutus**: PostgreSQL + dbt (open source, halvempi)

#### **2. API-integraatiot MCP:ll√§**
- **Mit√§**: AI hakee dataa reaaliajassa eri j√§rjestelmist√§ turvallisesti
- **Hy√∂ty**: Ei duplikaattidata, aina ajantasainen tieto
- **MCP takaa**: GDPR-yhteensopiva p√§√§sy

#### **3. Customer Data Platform (CDP)**
- **Mit√§**: Yhten√§inen asiakasprofiili kaikesta datasta
- **Esimerkki**: Segment, RudderStack (open source)
- **Humm-hy√∂ty**: 360¬∞-n√§kym√§ asiakkaasta

### üîê **GDPR-riskien minimointi**

#### **1. Tietosuoja-vaikutusten arviointi (DPIA)**
Ennen AI-projektia:
- ‚úì Mit√§ henkil√∂tietoja AI k√§sittelee?
- ‚úì Miksi niit√§ tarvitaan?
- ‚úì Kuinka kauan niit√§ s√§ilytet√§√§n?
- ‚úì Kuka p√§√§see niihin k√§siksi?
- ‚úì Miten ne suojataan?

#### **2. Privacy by Design**
- **Periaate**: Tietosuoja suunniteltu alusta alkaen, ei j√§lkik√§teen
- **Humm-esimerkki**:
  - AI-malli ei tallenna henkil√∂tietoja sis√§isesti
  - Kaikki tiedot haetaan reaaliajassa MCP:n kautta
  - Audit-lokitus automaattinen

#### **3. Tietojen pseudonymisointi**
- **Mit√§**: Henkil√∂tiedot korvataan tunnuksilla
- **Esimerkki**: "Mikko Virtanen" ‚Üí "USER_12345"
- **Hy√∂ty**: AI voi analysoida dataa ilman henkil√∂tietoja

#### **4. S√§ilytysaikojen hallinta**
- Chat-historia: 30 p√§iv√§√§, sitten pseudonymisointi
- Audit-lokit: 12 kuukautta, sitten arkistointi
- Asiakastiedot: Aktiivisuuden ajan, sitten poisto/anonymisointi

### ‚úÖ **GDPR-tarkistuslista Hummille**

‚úÖ **Tietosuojaseloste**: Kerrotaan asiakkaille miten AI k√§ytt√§√§ dataa
‚úÖ **Suostumus**: Asiakas antaa luvan AI-k√§sittelyyn
‚úÖ **Oikeus tietojen poistamiseen**: Asiakas voi pyyt√§√§ "AI:n unohtamaan" tiedot
‚úÖ **Oikeus tietojen siirrett√§vyyteen**: Data voidaan vied√§ ulos
‚úÖ **Audit-j√§ljet**: Kaikki AI-toiminnot lokitettu
‚úÖ **MCP-standardi**: Rajattu p√§√§sy tietoihin

### üöÄ **Tulokset**

‚úÖ **GDPR-compliance**: V√§ltet√§√§n ‚Ç¨20M sakot
‚úÖ **Asiakasluottamus**: "Meill√§ on tietosuoja kunnossa"
‚úÖ **Tehokkuus**: Ei datasiiloja ‚Üí paremmat AI-tulokset`,

  "hyperpersonalization-trend": `**üéØ Hyperpersonointi mullistaa asiakaskokemuksen - Hummin strateginen mahdollisuus**

### **Mik√§ on hyperpersonointi?**

Hyperpersonointi on perinteisen personoinnin seuraava evoluutio. Se yhdist√§√§ teko√§lyn, reaaliaikaisen datan ja syv√§n kontekstin ymm√§rryksen luodakseen ainutlaatuisen, juuri sinulle r√§√§t√§l√∂idyn kokemuksen.

Kyse ei ole en√§√§ vain siit√§, ett√§ AI muistaa nimesi - vaan siit√§, ett√§ se **ymm√§rt√§√§ sinua**:
- ü§ñ **Ennustava √§lykkyys** - AI tiet√§√§ mit√§ tarvitset ennen kuin kysyt
- üìä **Reaaliaikainen tilannetaju** - Reagoi siihen mit√§ tapahtuu juuri nyt
- üé≠ **Syv√§kontekstin hallinta** - Muistaa historian, tunnistaa tunnelman
- ‚ö° **Saumaton kokemus** - Ei en√§√§ "odottakaa hetki, tarkistan..."

**K√§yt√§nn√∂n esimerkki Hummille:**

Asiakas Mikko avaa chat-ikkunan. AI tunnistaa v√§litt√∂m√§sti:
- Historia: Aikaisempi vuorovaikutus, kysymysten tyyppi
- Konteksti: Juuri tehty tilaus, todenn√§k√∂inen kysymys
- Tunnetila: Nopea kirjoitustyyli ‚Üí kiireinen, haluaa nopean vastauksen
- Tarve: Todenn√§k√∂isimmin kysyy toimitusajasta tai seurannasta

AI aloittaa proaktiivisesti: *"Hei Mikko! N√§en ett√§ tilasit juuri √§sken. Toimitusaika on muutama arkip√§iv√§, ja saat seurantakoodin s√§hk√∂postiin kun paketti l√§htee. Oliko t√§m√§ mit√§ hait vai voinko auttaa jossain muussa?"*

Mikko ei joudu selitt√§m√§√§n tilannettaan - j√§rjestelm√§ jo tiet√§√§.

### **üí∞ Liiketoimintavaikutus Hummille**

**Nykytilanne:**
- Yleispalvelu: Sama kokemus kaikille
- Asiakkaat toistavat tietojaan uudelleen ja uudelleen
- Vastausajat hitaita, koska kontekstin selvitt√§minen vie aikaa
- Asiakastyytyv√§isyys hyv√§, mutta ei poikkeuksellinen

**Hyperpersonoinnin j√§lkeen:**
- **Liikevaihdon kasvu**: Merkitt√§v√§ nousu kun asiakkaat pysyv√§t ja ostavat enemm√§n
- **Asiakaspysyvyys**: Huomattava parannus - asiakkaat eiv√§t vaihda kilpailijalle
- **Tyytyv√§isyys**: Siirryt√§√§n "hyv√§st√§" "erinomaiseen" - asiakkaat kertovat muille
- **Upsell-mahdollisuudet**: AI tunnistaa oikeat hetket lis√§myynnille luonnollisesti
- **Suositteluindeksi**: Merkitt√§v√§ nousu - asiakkaat suosittelevat aktiivisesti

**Investoinnin tuotto:**
Hyperpersonointi vaatii alkuinvestoinnin AI-alustaan, datan integrointiin ja j√§rjestelmien yhteensopivuuteen. Tuotto n√§kyy jo ensimm√§isen√§ vuonna merkitt√§v√§n√§ kasvuna asiakastyytyv√§isyydess√§, pysyvyydess√§ ja myynniss√§.

### **üõ†Ô∏è Teknologiastack hyperpersonointiin**

**1. Data-keruu**
- CRM (asiakashistoria, demografiat)
- Support-j√§rjestelm√§ (tikettien historia)
- Web analytics (k√§ytt√§ytyminen sivulla)
- Email/chat-historia

**2. AI-moottorit**
- **Ennustemalli**: Mit√§ asiakas todenn√§k√∂isesti kysyy?
- **Sentiment analysis**: Mik√§ on tunnelma?
- **Recommendation engine**: Mit√§ ehdottaa?
- **NLP**: Ymm√§rt√§√§ yksil√∂lliset tavat ilmaista asiat

**3. Personointi-logiikka**
- Asiakassegmentit (VIP, uusi, riski-churn, happy)
- Real-time scoring (miten t√§rke√§ yhteydenotto?)
- Konteksti (kellonai ka, laite, kanava)
- A/B-testaus (mik√§ toimii kenellekin?)

### **üìà Vaiheistettu toteutus Hummille**

**Vaihe 1: Perus-personointi (Q2)**
- J√§rjestelm√§ muistaa asiakkaan nimen ja historian
- Agentit n√§kev√§t kontekstin v√§litt√∂m√§sti
- Automaattinen tervehdys mukautettu tilanteen mukaan
- **Alkuinvestointi** AI-ty√∂kaluihin ja integraatioihin
- **Tulokset**: Asiakastyytyv√§isyys ja reagointinopeus paranevat selv√§sti

**Vaihe 2: Ennakoiva personointi (Q3-Q4)**
- AI alkaa ennustaa mit√§ asiakas kysyy
- Suositellut vastaukset valmiina agentille
- Proaktiiviset viestit: "Tilauksesi viiv√§styy, pahoittelut!"
- **Kehitysinvestointi** ennakoiviin malleihin
- **Tulokset**: Tyytyv√§isyys jatkaa nousuaan, asiakaspysyvyys paranee

**Vaihe 3: T√§ysi hyperpersonointi (2026)**
- √Ñ√§nens√§vy ja viestint√§tyyli mukautettu jokaiselle
- Kanavavalinnat optimoitu (chat / puhelin / email)
- Upsell-tarjoukset yksil√∂llisi√§ ja luonnollisia
- **Skaalausvaihe** - laajennetaan koko asiakaskuntaan
- **Tulokset**: Huippuluokan asiakaskokemus, vahva kilpailuetu

### **üéØ Kilpailuetu**

**Miksi juuri nyt on oikea aika?**
- üïê **Aikaikkunan hy√∂dynt√§minen**: Kilpailijat eiv√§t viel√§ tee t√§t√§ Suomessa systemaattisesti
- üí™ **Hummin vahvuus**: Tunnette asiakkaanne jo hyvin - rakennusainekset ovat olemassa
- üöÄ **Teknologian kypsyminen**: AI-ty√∂kalut ovat nyt saavutettavia ja helppok√§ytt√∂isi√§
- üìä **Selke√§ mittaaminen**: Vaikutukset n√§kyv√§t suoraan tyytyv√§isyydess√§ ja liiketoiminnassa

**Todellisia esimerkkej√§ maailmalta:**
- **Amazon**: 35% myynnist√§ tulee personoiduista suosituksista
- **Netflix**: 80% katsotusta sis√§ll√∂st√§ personoitu
- **Spotify**: Discover Weekly -personointi lis√§si k√§ytt√∂aikaa 24%
- **Sephora**: Hyperpersonointi nosti konversiota 11%

### **‚ö†Ô∏è Riskit ja haasteet**

**1. Yksityisyys**
- ‚ùå Riski: "Liian tunkeileva", "Big Brother" -tunne
- ‚úÖ Ratkaisu: T√§ysi l√§pin√§kyvyys, asiakkaalla aina kontrolli, GDPR-yhteensopivuus

**2. Data-laatu**
- ‚ùå Riski: Huono data tuottaa huonoja suosituksia
- ‚úÖ Ratkaisu: Data-siivous ensin, ihminen pysyy p√§√§t√∂ksenteon ytimess√§

**3. Monimutkaisuus**
- ‚ùå Riski: Liian monimutkainen hallita ja yll√§pit√§√§
- ‚úÖ Ratkaisu: Aloitetaan yksinkertaisesta, kasvatetaan orgaanisesti

### **üí° Yhteenveto**

**Hyperpersonointi EI ole tulevaisuutta - se on NYT.**

Hummilla on kaikki edellytykset menesty√§:
‚úÖ Vahva asiakasdata jo olemassa
‚úÖ Sitoutuneet asiakkaat jotka luottavat teihin
‚úÖ Motivoitunut tiimi halukas oppimaan
‚úÖ Selke√§ kasvutavoite ja visio

**Seuraavat konkreettiset askeleet:**
1. Kartoita olemassa oleva data (CRM, tukij√§rjestelm√§, chat-historiat)
2. Valitse pilottiryhm√§ uskollisista asiakkaista
3. Rakenna ja testaa prototyyppi nopeasti
4. Mittaa vaikutus systemaattisesti (CSAT, NPS, retention)
5. Skaalaa onnistuneet mallit koko asiakaskuntaan

**Tavoite**: Olla Suomen tunnetuin ja arvostetuin hyperpersonoidun asiakaspalvelun edell√§k√§vij√§.`,

  "proactive-service-trend": `**‚ö° Proaktiivinen asiakaspalvelu - Vuoden 2025 megatrendi**

### **Mik√§ on proaktiivinen asiakaspalvelu?**

Perinteinen malli: Asiakas ottaa yhteytt√§ ‚Üí Yritys reagoi
**Proaktiivinen malli: Yritys havaitsee ongelman ‚Üí Ottaa yhteytt√§ ensin**

**Esimerkki Hummille:**
- AI havaitsee: Asiakkaan laskutus on viiv√§stynyt 2 p√§iv√§√§
- J√§rjestelm√§ l√§hett√§√§ automaattisesti: *"Hei Minna! Huomasimme ett√§ laskusi on my√∂h√§ss√§. Haluatko ett√§ jatketaan maksuaikaa? Klikkaa t√§st√§."*
- Asiakas: Ei tarvinnut soittaa, ongelma ratkaistu ennen kuin se √§rsytti

### **üìä Miksi juuri nyt on proaktiivisuuden aika?**

**Kolme muutosvoimaa:**

1. **AI on saavuttanut kypsyystason**
   - Modernit mallit (GPT-4, Claude Sonnet) ymm√§rt√§v√§t kontekstin syv√§llisesti
   - Ennustemallit ovat luotettavia ja tarkkoja
   - Reaaliaikainen data-analyysi on tehokasta ja saavutettavaa

2. **Asiakkaiden odotukset ovat evoluoituneet**
   - Tottunut Amazonin ja Netflixin ennakoivaan palveluun
   - Turhautuu jos joutuu toistamaan tietojaan
   - Arvostaa yrityksi√§ jotka "muistavat ja ymm√§rt√§v√§t"

3. **Kilpailuetu on mitattavissa**
   - Proaktiiviset yritykset saavat merkitt√§v√§sti paremmat asiakastyytyv√§isyyspisteet
   - Asiakkaiden pysyvyys paranee huomattavasti
   - Lis√§myyntimahdollisuudet kasvavat luonnollisesti

### **üí∞ Liiketoimintavaikutus Hummille**

**Visio: Proaktiivinen palvelu k√§ytt√∂√∂n t√§n√§ vuonna**

**Kustannushy√∂dyt:**
- **Tikettien m√§√§r√§ v√§henee**: Ongelmat ratkaistaan ennen kuin asiakas ehtii ottaa yhteytt√§
- **Skaalautuvuus**: Kasvu ei vaadi yht√§ paljon henkil√∂st√∂lis√§yst√§
- **Tehokkuus**: Merkitt√§vi√§ s√§√§st√∂j√§ vuositasolla

**Tuottohy√∂dyt:**
- **Asiakaspysyvyys paranee**: Asiakkaat pysyv√§t tyytyv√§isin√§ ja uskollisina
- **Lis√§myynti kasvaa**: Proaktiiviset tarjoukset oikeaan aikaan
- **Br√§ndi vahvistuu**: "Premium-palvelu" tuo hinnoitteluvoimaa
- **Kokonaisvaikutus**: Merkitt√§v√§ positiivinen vaikutus liikevaihtoon

**Investoinnin tuotto:**
Alkuinvestointi AI-alustaan, integraatioihin ja testaukseen tuottaa ensimm√§isen√§ vuonna merkitt√§v√§n tuoton sek√§ s√§√§st√∂in√§ ett√§ lis√§tuloina.

### **üõ†Ô∏è Tekninen toteutus**

**1. Data-l√§hteet**
- CRM: Asiakkaan historia, segmentit
- Support: Tiketit, chat-historia
- Product: K√§ytt√∂data, lokit, virheet
- Finance: Laskutus, maksut, viiv√§stykset

**2. AI-moottorit**
- **Anomaly detection**: Tunnistaa poikkeamat (esim. viiv√§stynyt maksu)
- **Predictive analytics**: Ennustaa churn-riski
- **Sentiment analysis**: Tunnistaa turhautunut asiakas
- **Recommendation engine**: Mit√§ tarjota proaktiivisesti?

**3. Toimintalogiikka**

Esimerkkej√§ proaktiivisista triggereist√§:
- Jos asiakkaan maksu my√∂h√§ss√§ + aikaisemmin ollut ongelmia ‚Üí L√§het√§: "Hei, huomasimme ongelman. Voimme auttaa."
- Jos asiakas ei ole kirjautunut 30 p√§iv√§√§n + VIP-asiakas ‚Üí L√§het√§: "Hei, kaipaamme sinua! T√§ss√§ -20% koodi."
- Jos asiakkaan k√§ytt√∂ laskenut 40% + turhautunut chat-historia ‚Üí Soita: "Hei, haluamme varmistaa ett√§ kaikki on kunnossa."

### **üìà Vaiheistettu toteutus**

**Vaihe 1: Yksinkertaiset automaatiot (Q2)**
- Automaattinen viesti jos lasku my√∂h√§ss√§
- Proaktiivinen "Kiitos tilauksesta" -vahvistus
- **Alkuinvestointi** perustriggereihin
- **Tulokset**: Tikettim√§√§r√§ laskee selv√§sti

**Vaihe 2: AI-ennusteet (Q3-Q4)**
- Churn-riski ennustaminen ‚Üí Soitto ennen irtisanomista
- Upsell-tilaisuudet ‚Üí Personoitu tarjous oikeaan aikaan
- **Kehitysinvestointi** ennustaviin malleihin
- **Tulokset**: Tikettim√§√§r√§ laskee edelleen, pysyvyys paranee

**Vaihe 3: T√§ysi √§lyautomaatio (2026)**
- AI p√§√§tt√§√§ autonomisesti milloin ja miten ottaa yhteytt√§
- Kanavavalinnat optimoidaan asiakaskohtaisesti (chat / puhelin / email)
- **Yll√§pitovaihe** - jatkuva kehitys ja optimointi
- **Tulokset**: Minimaalinen tikettim√§√§r√§, maksimaalinen asiakaspysyvyys

### **üéØ Case-esimerkit**

**1. Nordea (Suomi)**
- Proaktiivinen ilmoitus: "Tilisi saldo on alhainen"
- Tulos: 15% v√§hennys tukipuheluissa

**2. Elisa (Suomi)**
- Proaktiivinen viesti: "Datasi on k√§yt√∂ss√§ 90%, haluatko lis√§√§?"
- Tulos: +18% data-lis√§pakettien myynti

**3. Alibaba (Kiina)**
- AI ennustaa asiakkaan kysymyksen ennen chatin avaamista
- Tulos: 95% tiketeist√§ automatisoitu

**4. Amazon**
- "Tilauksesi viiv√§styy" - viesti l√§hetet√§√§n ennen kuin asiakas huomaa
- Tulos: 22% parempi CSAT kuin reaktiivinen palvelu

### **‚ö†Ô∏è Sudenkuopat**

**1. "Liian tunkeileva"**
- ‚ùå V√§√§r√§: L√§hetet√§√§n viestej√§ liikaa
- ‚úÖ Oikein: Anna asiakkaan valita tiheys (asetukset)

**2. "V√§√§r√§t ennusteet"**
- ‚ùå V√§√§r√§: AI ehdottaa v√§√§ri√§ asioita ‚Üí √§rsytt√§√§
- ‚úÖ Oikein: Ihminen loopissa, varmista tarkkuus 85%+

**3. "Kallis yll√§pito"**
- ‚ùå V√§√§r√§: Monimutkainen j√§rjestelm√§ ‚Üí vaikea hallita
- ‚úÖ Oikein: Aloita yksinkertaisista triggereist√§, kasvata asteittain

### **üí° Yhteenveto: Miksi Hummin pit√§√§ toimia JUURI NYT**

**Aikaikkunan hy√∂dynt√§minen:**
- Kilpailijat eiv√§t viel√§ tee t√§t√§ systemaattisesti Suomessa
- Asiakkaat odottavat t√§t√§ (tottuneet Amazonin ja Netflixin tasoon)
- Teknologia on saavuttanut kypsyystason ja on saavutettavissa

**Visio vuodelle 2026:**
- Merkitt√§v√§ osa tiketeist√§ hoidetaan proaktiivisesti
- Asiakaspysyvyys paranee dramaattisesti
- Asiakastyytyv√§isyys nousee huippuluokkaan
- Suositteluindeksi kasvaa voimakkaasti

**Seuraavat konkreettiset askeleet:**
1. Listatkaa 10 t√§rkeint√§ k√§ytt√∂tapausta (esim. laskun viiv√§styminen, tilausstatukset)
2. Rakentakaa nopea prototyyppi yhdelle k√§ytt√∂tapaukselle
3. Testatkaa pienell√§ pilottiryhm√§ll√§ uskollisia asiakkaita
4. Skaalatkaa onnistuneet mallit koko asiakaskuntaan vaiheittain`,

  "cx-trends-2025-featured": `**üìà 2025 suurimmat CX-trendit ja AI:n rooli - Strateginen n√§kemys**

Olemme 2025 k√§√§nnekohdassa: AI ei ole en√§√§ "kokeilu" vaan "pakollinen". T√§ss√§ trendit jotka m√§√§ritt√§v√§t voittajat ja h√§vi√§j√§t:

### **üî• Top 5 CX-trendit 2025**

#### **1. Hyperpersonointi (AI-pohjainen)**
- **Mit√§**: Jokainen asiakas saa ainutlaatuisen, juuri h√§nelle r√§√§t√§l√∂idyn kokemuksen
- **AI:n rooli**: Analysoi dataa reaaliajassa, ennustaa tarpeet ennen kysymist√§
- **Vaikutus Hummille**: Asiakastyytyv√§isyys nousee merkitt√§v√§sti, lis√§myynti kasvaa luonnollisesti
- **Esimerkit**: Netflix (personoidut ehdotukset), Spotify (Discover Weekly)

#### **2. Proaktiivinen asiakaspalvelu**
- **Mit√§**: Yritys ratkaisee ongelman ennen kuin asiakas edes huomaa sen
- **AI:n rooli**: Tunnistaa anomaliat automaattisesti, l√§hett√§√§ varoituksen ja ratkaisun
- **Vaikutus**: Tukipyynt√∂jen m√§√§r√§ laskee huomattavasti, asiakaspysyvyys paranee
- **Esimerkit**: Amazon ("Paketti viiv√§styy"), Nordea ("Tilisi saldo alhainen")

#### **3. √Ñ√§ni- ja video-AI (uusi kanava)**
- **Mit√§**: AI kommunikoi puheella, ei pelk√§st√§√§n tekstill√§
- **AI:n rooli**: Reaaliaikainen puheentunnistus, tunneanalyysi, luonnolliset vastaukset
- **Vaikutus**: Puhelut automatisoituvat merkitt√§v√§sti, odotusajat lyhenev√§t dramaattisesti
- **Esimerkit**: Google Duplex, ElevenLabs (voice cloning)

#### **4. Emotional AI (tunnepohjainen)**
- **Mit√§**: AI tunnistaa asiakkaan tunnetilan ja mukautuu sen mukaan
- **AI:n rooli**: Tunneanalyysi, empatia-painotteiset vastaukset
- **Vaikutus**: Tyytyv√§isyys kasvaa, eskalointien m√§√§r√§ laskee selv√§sti
- **Esimerkit**: Hume AI (emotion recognition), Affectiva

#### **5. Autonomiset AI-agentit**
- **Mit√§**: AI hoitaa kokonaisia prosesseja itsen√§isesti alusta loppuun
- **AI:n rooli**: Ei vain vastaa kysymyksiin, vaan "tekee asioita" (esim. k√§sittelee palautuksen)
- **Vaikutus**: Valtaosa tiketeist√§ automatisoituu, skaalautuvuus kasvaa moninkertaiseksi
- **Esimerkit**: Shopify Sidekick, Intercom Fin

### **üí° Miksi n√§m√§ trendit ovat KRIITTISI√Ñ Hummille?**

**Nykytilanne:**
- Asiakastyytyv√§isyys hyv√§ll√§ tasolla, mutta ei poikkeuksellinen
- Manuaalinen ty√∂ hallitsee operatiivista toimintaa
- Skaalautuminen vaatii merkitt√§vi√§ henkil√∂st√∂resursseja

**Jos Humm EI reagoi muutokseen:**
- Kilpailijat ottavat AI:n k√§ytt√∂√∂n ja nostavat rimaa
- Asiakkaiden odotukset kasvavat (Amazon, Netflix asettavat standardin)
- Kustannusrakenne ei tue kasvutavoitteita
- **Tulos: J√§√§d√§√§n j√§lkeen kilpailussa, kasvu hidastuu**

**Jos Humm johtaa muutosta:**
- Hyperpersonointi ‚Üí Asiakastyytyv√§isyys nousee merkitt√§v√§sti
- Proaktiivisuus ‚Üí Tikettim√§√§r√§ laskee huomattavasti
- √Ñ√§ni-AI ‚Üí Automaatio kasvaa voimakkaasti
- Emotional AI ‚Üí Asiakaspysyvyys paranee selv√§sti
- Autonomiset agentit ‚Üí Skaalautuvuus moninkertaistuu
- **Tulos: Vahva kasvu sek√§ liikevaihdossa ett√§ kannattavuudessa**

### **üõ†Ô∏è Teknologiastack 2025**

**Frontend (Asiakasrajapinta):**
- **Chat**: OpenAI GPT-4 Turbo / Anthropic Claude
- **Voice**: ElevenLabs (voice synthesis), Whisper (transkriptio)
- **Sentiment**: Hume AI, Azure Cognitive Services

**Backend (AI-moottori):**
- **Orchestration**: LangChain, Semantic Kernel
- **Vector DB**: Pinecone, Weaviate (asiakasdata)
- **Analytics**: Mixpanel, Amplitude (CX-mittarit)

**Integraatiot:**
- **CRM**: Salesforce, HubSpot (asiakashistoria)
- **Support**: Zendesk, Intercom (tiketti-historia)
- **MCP-protokolla**: Turvallinen p√§√§sy dataan

### **üìä Benchmarkit: Mit√§ kilpailijat tekev√§t?**

**Suomi:**
- **Elisa**: AI-chat (GPT-4), 40% tiketeist√§ automatisoitu
- **Nordea**: Proaktiiviset ilmoitukset, -15% tukipyynn√∂t
- **OP**: √Ñ√§ni-AI testiss√§, tavoite 60% automaatio 2026

**Kansainv√§liset:**
- **Zendesk**: Fin AI ‚Üí 70-80% tiketeist√§ autonomisesti
- **Intercom**: Fin AI + Copilot ‚Üí +40% agent-tuottavuus
- **Shopify**: Sidekick AI-agentti ‚Üí 3x liikevaihdon kasvu ilman henkil√∂st√∂lis√§yst√§

**Hummin tilanne:**
- Olemme j√§ljess√§ Suomessa
- Mutta: Pienempi organisaatio = ketter√§mpi
- **Mahdollisuus: Ohittaa suuremmat kilpailijat 12-18 kuukaudessa**

### **üéØ Strateginen roadmap Hummille**

**Q2: Perusta**
- Chat-AI k√§ytt√∂√∂n (GPT-4 / Claude)
- Yksinkertainen personointi asiakashistorian perusteella
- **Alkuinvestointi** AI-alustaan ja integraatioihin
- **Tavoite**: Merkitt√§v√§ osa tiketeist√§ automatisoituu

**Q3-Q4: Skaalaus**
- Hyperpersonointi t√§yteen k√§ytt√∂√∂n
- Proaktiivinen palvelu aktivoituu
- √Ñ√§ni-AI pilotoidaan valituilla asiakkailla
- **Kehitysinvestointi** edistyneempiin ominaisuuksiin
- **Tavoite**: Automaatio kattaa yli puolet operaatioista

**2026: Edell√§k√§vijyys**
- Emotional AI tunnistaa ja reagoi tunnetiloihin
- Autonomiset agentit hoitavat kokonaisia prosesseja
- Ymp√§rivuorokautinen AI-pohjainen palvelu
- **Yll√§pito ja jatkokehitys**
- **Tavoite**: Laaja automaatio, voimakas liikevaihdon kasvu**

### **‚ö†Ô∏è Riskit**

**1. Liian nopea skaalaus**
- ‚ùå V√§√§r√§: Kaikki kerralla ‚Üí chaos
- ‚úÖ Oikein: Vaiheittainen, pilotit ensin

**2. Asiakasvastarinta**
- ‚ùå V√§√§r√§: "AI hoitaa kaiken" ‚Üí asiakkaat tyytym√§tt√∂mi√§
- ‚úÖ Oikein: Hybridimalli (AI + ihminen valittavissa)

**3. Henkil√∂st√∂n vastarinta**
- ‚ùå V√§√§r√§: "AI korvaa ty√∂ntekij√§t" ‚Üí pelko
- ‚úÖ Oikein: "AI avustaa" ‚Üí ty√∂tyytyv√§isyys nousee

### **üí° Yhteenveto: Miksi juuri nyt on ratkaiseva hetki**

**Kolme kriittist√§ tekij√§√§:**

1. **Teknologia on saavuttanut kypsyystason**: GPT-4, Claude, ElevenLabs ja muut ratkaisut ovat tuotantovalmiita ja luotettavia
2. **Asiakkaat odottavat enemm√§n**: Amazon ja Netflix ovat asettaneet uuden standardin - asiakkaat odottavat samaa kaikilta
3. **Aikaikkunan hy√∂dynt√§minen**: Nyt on hetki erottua - ennen kuin kaikki kilpailijat tekev√§t samaa

**Hummin strateginen valinta:**
- **Polku A**: Odottaminen ja reaktiivinen toiminta ‚Üí J√§√§d√§√§n j√§lkeen kilpailussa
- **Polku B**: Proaktiivinen muutosjohtajuus nyt ‚Üí Edell√§k√§vij√§asema markkinalla

**Visio vuodelle 2026:**
- Olla Suomen tunnistetuin modernin asiakaskokemuksen edell√§k√§vij√§
- Vahva kasvu sek√§ liikevaihdossa ett√§ kannattavuudessa
- Huippuluokan asiakastyytyv√§isyys ja -suosittelut

**Seuraavat konkreettiset askeleet:**
1. Valitse yksi pilottitrendi (suositus: Hyperpersonointi tai Proaktiivinen palvelu)
2. Rakenna nopea prototyyppi todellisilla asiakkailla
3. Testaa pienell√§ pilottiryhm√§ll√§ uskollisia asiakkaita
4. Mittaa systemaattisesti vaikutukset (tyytyv√§isyys, pysyvyys, liiketoiminta)
5. Skaalaa onnistuneet mallit asteittain koko asiakaskuntaan`
};

// MCP (Model Context Protocol) - T√ÑRKE√Ñ!
const mcpQuestions: QuestionButton[] = [
  {
    id: "mcp-what-is",
    question: "Mik√§ on MCP?",
    category: "mcp",
    icon: HelpCircle,
    color: "bg-emerald-500"
  },
  {
    id: "mcp-security",
    question: "Miten MCP parantaa AI-integraatioiden turvallisuutta?",
    category: "mcp",
    icon: Shield,
    color: "bg-emerald-500"
  },
  {
    id: "mcp-automation",
    question: "Mit√§ hy√∂ty√§ MCP:st√§ on asiakaspalvelun automaatiossa?",
    category: "mcp",
    icon: Cpu,
    color: "bg-emerald-500"
  },
  {
    id: "mcp-access-control",
    question: "Kuinka MCP:n avulla hallitaan AI:n p√§√§syoikeuksia?",
    category: "mcp",
    icon: Scale,
    color: "bg-emerald-500"
  }
];

const topicAreas: TopicArea[] = [
  {
    id: "leadership-faq",
    title: "‚≠ê Suositut kysymykset johdolle",
    icon: Star,
    color: "bg-gradient-to-r from-blue-600 to-emerald-600",
    questions: [
      {
        id: "faq-10m-goal",
        question: "Miten saavutamme 10M‚Ç¨ liikevaihdon?",
        category: "leadership",
        icon: Target,
        color: "bg-blue-600"
      },
      {
        id: "faq-ai-cost-roi",
        question: "Paljonko AI-transformaatio maksaa ja mik√§ on ROI?",
        category: "leadership",
        icon: DollarSign,
        color: "bg-emerald-600"
      },
      {
        id: "faq-ai-start",
        question: "Mist√§ aloitamme AI-implementaation?",
        category: "leadership",
        icon: Rocket,
        color: "bg-purple-600"
      },
      {
        id: "faq-ai-use-cases",
        question: "Mitk√§ ovat AI:n t√§rkeimm√§t k√§ytt√∂kohteet Hummille?",
        category: "leadership",
        icon: Zap,
        color: "bg-orange-600"
      },
      {
        id: "faq-risks",
        question: "Mitk√§ ovat suurimmat riskit ja miten ne hallitaan?",
        category: "leadership",
        icon: Shield,
        color: "bg-red-600"
      }
    ]
  },
  {
    id: "trends-2025",
    title: "üöÄ Trendit 2025",
    icon: TrendingUp,
    color: "bg-gradient-to-r from-purple-600 to-orange-600",
    questions: [
      {
        id: "hyperpersonalization-trend",
        question: "üéØ Kuinka hyperpersonointi mullistaa asiakaskokemuksen 2025?",
        category: "general",
        icon: Target,
        color: "bg-purple-600"
      },
      {
        id: "proactive-service-trend",
        question: "‚ö° Miksi proaktiivinen asiakaspalvelu on vuoden 2025 megatrendi?",
        category: "general",
        icon: Zap,
        color: "bg-orange-600"
      },
      {
        id: "cx-trends-2025-featured",
        question: "üìä 2025 suurimmat CX-trendit ja AI:n rooli",
        category: "general",
        icon: BarChart3,
        color: "bg-blue-600"
      }
    ]
  },
  {
    id: "strategy-roi",
    title: "Strategia & ROI",
    icon: TrendingUp,
    color: "bg-slate-600",
    questions: [
      {
        id: "roi-measurement",
        question: "Miten AI-investoinnista saa mitattavaa arvoa asiakaspalvelussa?",
        category: "strategy-roi",
        icon: DollarSign,
        color: "bg-slate-600"
      },
      {
        id: "cx-trends-2025",
        question: "Mitk√§ ovat vuoden 2025 suurimmat CX-trendit?",
        category: "strategy-roi",
        icon: TrendingUp,
        color: "bg-slate-600"
      }
    ]
  },
  {
    id: "data-privacy",
    title: "Data & tietosuoja",
    icon: Database,
    color: "bg-purple-500",
    questions: [
      {
        id: "data-quality",
        question: "Miten varmistetaan, ett√§ asiakasdata pysyy laadukkaana ja suojattuna?",
        category: "data-privacy",
        icon: Shield,
        color: "bg-purple-500"
      },
      {
        id: "gdpr-compliance",
        question: "Kuinka v√§ltet√§√§n datasiilot ja GDPR-riskit AI-projekteissa?",
        category: "data-privacy",
        icon: Scale,
        color: "bg-purple-500"
      }
    ]
  },
  {
    id: "automation-workflows",
    title: "Automaatio & ty√∂nkulut",
    icon: Workflow,
    color: "bg-green-500",
    questions: [
      {
        id: "reduce-manual-work",
        question: "Miten automaatio voi v√§hent√§√§ manuaalista ty√∂t√§ asiakaspalvelussa?",
        category: "automation-workflows",
        icon: Workflow,
        color: "bg-green-500"
      },
      {
        id: "ticket-classification",
        question: "Mit√§ hy√∂ty√§ on AI:sta tikettien luokittelussa ja reitityksess√§?",
        category: "automation-workflows",
        icon: Target,
        color: "bg-green-500"
      }
    ]
  },
  {
    id: "bots-agents",
    title: "Botit & agentit",
    icon: Bot,
    color: "bg-orange-500",
    questions: [
      {
        id: "bot-vs-agent",
        question: "Mik√§ ero on chatbotilla ja AI-agentilla?",
        category: "bots-agents",
        icon: Bot,
        color: "bg-orange-500"
      },
      {
        id: "escalation-timing",
        question: "Milloin kannattaa eskaloida botti-asiakaspalvelusta ihmiselle?",
        category: "bots-agents",
        icon: Users,
        color: "bg-orange-500"
      }
    ]
  },
  {
    id: "voice-phone",
    title: "√Ñ√§ni & puhelin",
    icon: Phone,
    color: "bg-pink-500",
    questions: [
      {
        id: "asr-sentiment",
        question: "Miten puheentunnistus (ASR) ja sentimenttianalyysi voivat parantaa puhelinpalvelua?",
        category: "voice-phone",
        icon: Phone,
        color: "bg-pink-500"
      },
      {
        id: "call-summary",
        question: "Kuinka automaattinen yhteenveto helpottaa agentin ty√∂t√§ puhelun j√§lkeen?",
        category: "voice-phone",
        icon: MessageCircle,
        color: "bg-pink-500"
      }
    ]
  },
  {
    id: "hyperpersonalization",
    title: "Hyperpersoonallistaminen",
    icon: Heart,
    color: "bg-red-500",
    questions: [
      {
        id: "realtime-recommendations",
        question: "Miten AI voi tarjota asiakkaille r√§√§t√§l√∂ityj√§ suosituksia reaaliajassa?",
        category: "hyperpersonalization",
        icon: Crosshair,
        color: "bg-red-500"
      },
      {
        id: "proactive-communication",
        question: "Kuinka proaktiivinen viestint√§ lis√§√§ asiakastyytyv√§isyytt√§?",
        category: "hyperpersonalization",
        icon: Zap,
        color: "bg-red-500"
      }
    ]
  },
  {
    id: "agent-quality",
    title: "Agenttien laatu & koulutus",
    icon: GraduationCap,
    color: "bg-indigo-500",
    questions: [
      {
        id: "quality-assessment",
        question: "Miten AI voi arvioida ja parantaa asiakaspalvelijan laatua?",
        category: "agent-quality",
        icon: Star,
        color: "bg-indigo-500"
      },
      {
        id: "agent-assist-training",
        question: "Voiko agent-assist toimia my√∂s koulutusv√§lineen√§?",
        category: "agent-quality",
        icon: GraduationCap,
        color: "bg-indigo-500"
      }
    ]
  },
  {
    id: "case-library",
    title: "Case-kirjasto",
    icon: BookOpen,
    color: "bg-cyan-500",
    questions: [
      {
        id: "successful-cases",
        question: "Mit√§ voimme oppia onnistuneista AI-caseista asiakaspalvelussa?",
        category: "case-library",
        icon: BookOpen,
        color: "bg-cyan-500"
      },
      {
        id: "failed-projects",
        question: "Miksi osa AI-projekteista ep√§onnistuu CX:ss√§?",
        category: "case-library",
        icon: Target,
        color: "bg-cyan-500"
      }
    ]
  },
  {
    id: "technology-integrations",
    title: "Teknologia & integraatiot",
    icon: Cpu,
    color: "bg-teal-500",
    questions: [
      {
        id: "required-technologies",
        question: "Mit√§ teknologioita tarvitaan AI:n integrointiin asiakaspalveluun?",
        category: "technology-integrations",
        icon: Cpu,
        color: "bg-teal-500"
      },
      {
        id: "platform-integration",
        question: "Miten Intercom, CRM ja CCaaS voidaan yhdist√§√§ teko√§lyn avulla?",
        category: "technology-integrations",
        icon: Globe,
        color: "bg-teal-500"
      }
    ]
  },
  {
    id: "governance-ethics",
    title: "Hallintamalli & eettisyys",
    icon: Scale,
    color: "bg-slate-500",
    questions: [
      {
        id: "ethical-ai",
        question: "Miten varmistetaan teko√§lyn eettinen k√§ytt√∂ asiakaspalvelussa?",
        category: "governance-ethics",
        icon: Scale,
        color: "bg-slate-500"
      },
      {
        id: "decision-responsibility",
        question: "Kuka vastaa teko√§lyn tekemist√§ p√§√§t√∂ksist√§ CX-yrityksess√§?",
        category: "governance-ethics",
        icon: Users,
        color: "bg-slate-500"
      }
    ]
  }
];

const contextConfig = {
  strategic: {
    label: "Strategiset trendit",
    icon: TrendingUp,
    color: "bg-slate-600 hover:bg-slate-700",
    description: "2025 AI-trendit ja tulevaisuuden n√§kym√§t"
  },
  practical: {
    label: "K√§yt√§nn√∂n toteutus",
    icon: Wrench,
    color: "bg-green-500 hover:bg-green-600",
    description: "Konkreettiset case-esimerkit ja tulokset"
  },
  finnish: {
    label: "Suomalainen n√§k√∂kulma",
    icon: MapPin,
    color: "bg-orange-500 hover:bg-orange-600",
    description: "Soveltaminen Suomen markkinoilla"
  },
  planning: {
    label: "Strateginen suunnittelu",
    icon: Target,
    color: "bg-purple-500 hover:bg-purple-600",
    description: "Humm.fi:n seuraavat askeleet"
  },
  technical: {
    label: "Tekninen toteutus",
    icon: Cpu,
    color: "bg-emerald-500 hover:bg-emerald-600",
    description: "MCP ja teknologiset ratkaisut"
  },
  mcp: {
    label: "Model Context Protocol",
    icon: Shield,
    color: "bg-emerald-600 hover:bg-emerald-700",
    description: "MCP-spesifinen tieto ja ohjeistus"
  },
  general: {
    label: "Yleinen",
    icon: Bot,
    color: "bg-gray-500 hover:bg-gray-600",
    description: "Yleiset kysymykset"
  }
};

export function ChatInterface() {
  const [messages, setMessages] = useState<ChatMessage[]>([
    {
      content: "**Tervetuloa Hummin Johdon Co-Pilotiin!** üöÄ\n\nOlen proaktiivinen AI-assistentti, joka on suunniteltu tukemaan Humm Groupin johtoa strategisessa p√§√§t√∂ksenteossa, taloudellisessa analyysissa ja AI-implementaatiossa.\n\n**Mit√§ voin tehd√§ sinulle:**\n- üìä Analysoida taloudellisia lukuja ja KPI:ta (liikevaihto, k√§ytt√∂kate, kannattavuus)\n- üéØ Tarjota strategisia suosituksia perustuen dataan ja benchmarkeihin\n- ü§ñ Auttaa AI-implementaation suunnittelussa ja priorisoinnissa\n- üîí Neuvoa MCP-protokollassa ja tietoturva-asioissa\n- üí° Tunnistaa mahdollisuuksia ja riskej√§ proaktiivisesti",
      isUser: false,
      timestamp: Date.now()
    },
    {
      content: "Alla olevista teemoista l√∂yd√§t valmiita kysymyksi√§ eri aihepiireist√§. Voit my√∂s kirjoittaa oman kysymyksesi suoraan - olen koulutettu ymm√§rt√§m√§√§n Hummin liiketoimintaa, taloudellista tilannetta ja kehitystarpeita syv√§llisesti.",
      isUser: false,
      timestamp: Date.now() + 1
    }
  ]);
  const [inputValue, setInputValue] = useState("");
  const [selectedContext, setSelectedContext] = useState<ContextType>("general");
  const [isExpanded, setIsExpanded] = useState(false);
  const [mcpModalOpen, setMcpModalOpen] = useState(false);
  const [feedbackModalOpen, setFeedbackModalOpen] = useState(false);
  const [followUpSuggestions, setFollowUpSuggestions] = useState<string[]>([]);
  const [placeholderText, setPlaceholderText] = useState("Kysy mit√§ tahansa AI-asiakaspalvelusta johdolle...");

  // Striimaavat placeholder-kysymykset
  const rotatingQuestions = [
    "Kysy mit√§ tahansa AI-asiakaspalvelusta johdolle...",
    "Mik√§ on ROI AI-investoinnille asiakaspalvelussa?",
    "Mill√§ aikataululla voimme toteuttaa AI-asiakaspalvelun?",
    "Mit√§ riskej√§ AI-asiakaspalvelussa on?",
    "Kuinka paljon AI-asiakaspalvelu maksaa?",
    "Mit√§ teknisi√§ vaatimuksia AI-toteutuksella on?",
    "Kuinka integroida AI olemassa oleviin j√§rjestelmiin?",
    "Mit√§ tietoturvaseikkoja AI-k√§ytt√∂√∂notossa tulee huomioida?",
    "Kuinka mitata AI-asiakaspalvelun menestyst√§?",
    "Millaista osaamista AI-projekti vaatii tiimilt√§?"
  ];

  // Optimized placeholder rotation - avoid unnecessary re-renders
  useEffect(() => {
    if (inputValue) return; // Don't rotate when user is typing
    
    const interval = setInterval(() => {
      setPlaceholderText(prev => {
        const currentIndex = rotatingQuestions.indexOf(prev);
        const nextIndex = (currentIndex + 1) % rotatingQuestions.length;
        return rotatingQuestions[nextIndex];
      });
    }, 4000); // Increased interval to reduce render frequency

    return () => clearInterval(interval);
  }, [inputValue]); // Removed rotatingQuestions dependency to prevent unnecessary re-renders
  
  // New modal state for AI responses
  const [aiModalOpen, setAiModalOpen] = useState(false);
  const [modalMessages, setModalMessages] = useState<ChatMessage[]>([]);
  const [modalInputValue, setModalInputValue] = useState("");
  const [modalFollowUpSuggestions, setModalFollowUpSuggestions] = useState<string[]>([]);
  const [currentQuestion, setCurrentQuestion] = useState<string>("");
  const [currentQuestionContext, setCurrentQuestionContext] = useState<ContextType>("general");
  
  const messagesEndRef = useRef<HTMLDivElement>(null);
  const modalMessagesEndRef = useRef<HTMLDivElement>(null);
  const { toast } = useToast();

  const questionMutation = useMutation({
    mutationFn: async (questionId: string) => {
      const response = await apiRequest("GET", `/api/questions/${questionId}/answer?enhance=true`);
      return response.json();
    },
    onSuccess: (data, questionId) => {
      setMessages(prev => [...prev, {
        content: data.answer,
        isUser: false,
        timestamp: Date.now()
      }]);
      // Set context based on question type
      if (questionId.includes('mcp-') || questionId.includes('required-technologies') || questionId.includes('platform-integration')) {
        setSelectedContext('technical');
      } else if (questionId.includes('roi-') || questionId.includes('cx-trends') || questionId.includes('strategy')) {
        setSelectedContext('strategic');
      } else if (questionId.includes('successful-cases') || questionId.includes('failed-projects') || questionId.includes('automation') || questionId.includes('bot-')) {
        setSelectedContext('practical');
      } else if (questionId.includes('finnish') || questionId.includes('suomalainen')) {
        setSelectedContext('finnish');
      } else {
        setSelectedContext('general');
      }
    },
    onError: () => {
      toast({
        title: "Virhe",
        description: "Vastauksen lataaminen ep√§onnistui.",
        variant: "destructive"
      });
    }
  });

  const handleQuestionClick = (questionId: string) => {
    // Find question text
    const allQuestions = [
      ...mcpQuestions,
      ...topicAreas.flatMap(topic => topic.questions)
    ];
    const question = allQuestions.find(q => q.id === questionId);

    if (question) {
      // Determine context based on question category
      const isMcpQuestion = question.id.includes('mcp-') || question.question.toLowerCase().includes('mcp');
      const contextType = isMcpQuestion ? 'mcp' :
                         question.category.includes('roi') || question.category.includes('strategy') ? 'strategic' :
                         question.category.includes('automation') || question.category.includes('practical') ? 'practical' : 'general';

      // Set up modal with proactive welcome message
      setCurrentQuestion(question.question);
      setCurrentQuestionContext(contextType);

      // Add welcome message and user question
      setModalMessages([
        {
          content: "üëã **Tervetuloa!**\n\nYmm√§rr√§n ett√§ kysyt: **" + question.question.toLowerCase() + "**\n\nAnna minun analysoida t√§m√§ Hummin n√§k√∂kulmasta ja tarjota konkreettisia vastauksia...",
          isUser: false,
          isWelcome: true,
          timestamp: Date.now()
        },
        {
          content: question.question,
          isUser: true,
          timestamp: Date.now() + 100
        }
      ]);

      setModalInputValue("");
      setModalFollowUpSuggestions([]);
      setAiModalOpen(true);

      console.log("Question clicked:", question.question, "ID:", question.id, "Context:", contextType);

      // Check if we have a pre-written response
      if (preWrittenResponses[questionId]) {
        // Use pre-written response with streaming effect and follow-up suggestions
        simulateStreamingResponseWithFollowUp(preWrittenResponses[questionId], questionId);
      } else {
        // Fall back to API call for questions without pre-written responses
        modalChatMutation.mutate({ message: question.question, context_type: contextType });
      }
    }
  };

  // Simulate streaming text effect for pre-written responses
  const simulateStreamingResponse = (fullResponse: string) => {
    // Add empty AI message that will be filled character by character
    setModalMessages(prev => [...prev, {
      content: "",
      isUser: false,
      timestamp: Date.now()
    }]);

    let currentIndex = 0;
    const charsPerTick = 20; // Characters to add per interval

    const interval = setInterval(() => {
      currentIndex += charsPerTick;

      if (currentIndex >= fullResponse.length) {
        // Streaming complete
        clearInterval(interval);
        setModalMessages(prev => {
          const newMessages = [...prev];
          if (newMessages.length > 0) {
            newMessages[newMessages.length - 1] = {
              content: fullResponse,
              isUser: false,
              timestamp: Date.now()
            };
          }
          return newMessages;
        });
      } else {
        // Update with partial content
        setModalMessages(prev => {
          const newMessages = [...prev];
          if (newMessages.length > 0) {
            newMessages[newMessages.length - 1] = {
              content: fullResponse.substring(0, currentIndex),
              isUser: false,
              timestamp: Date.now()
            };
          }
          return newMessages;
        });
      }
    }, 25); // 25ms interval for smooth streaming effect

    // Cleanup function
    return () => clearInterval(interval);
  };

  // Simulate streaming with follow-up suggestions
  const simulateStreamingResponseWithFollowUp = (fullResponse: string, questionId: string) => {
    // Add empty AI message that will be filled character by character
    setModalMessages(prev => [...prev, {
      content: "",
      isUser: false,
      timestamp: Date.now()
    }]);

    let currentIndex = 0;
    const charsPerTick = 20;

    const interval = setInterval(() => {
      currentIndex += charsPerTick;

      if (currentIndex >= fullResponse.length) {
        clearInterval(interval);
        setModalMessages(prev => {
          const newMessages = [...prev];
          if (newMessages.length > 0) {
            newMessages[newMessages.length - 1] = {
              content: fullResponse,
              isUser: false,
              timestamp: Date.now()
            };
          }
          return newMessages;
        });

        // Add follow-up suggestions after streaming completes
        const followUps = getFollowUpQuestions(questionId);
        setTimeout(() => {
          setModalFollowUpSuggestions(followUps);
        }, 500);
      } else {
        setModalMessages(prev => {
          const newMessages = [...prev];
          if (newMessages.length > 0) {
            newMessages[newMessages.length - 1] = {
              content: fullResponse.substring(0, currentIndex),
              isUser: false,
              timestamp: Date.now()
            };
          }
          return newMessages;
        });
      }
    }, 25);

    return () => clearInterval(interval);
  };

  // Get contextual follow-up questions based on the original question
  const getFollowUpQuestions = (questionId: string): string[] => {
    const followUpMap: Record<string, string[]> = {
      "hyperpersonalization-trend": [
        "Miten voimme k√§yt√§nn√∂ss√§ toteuttaa hyperpersonointia Hummilla?",
        "Millaista dataa tarvitsemme hyperpersonointiin?",
        "Mik√§ on hyperpersonoinnin ROI ensimm√§isen√§ vuonna?",
        "Mitk√§ ovat suurimmat riskit hyperpersonoinnissa?"
      ],
      "proactive-service-trend": [
        "Miten tunnistamme asiakkaiden tarpeet ennen yhteydenottoa?",
        "Mit√§ teknologioita tarvitaan proaktiiviseen palveluun?",
        "Kuinka paljon proaktiivinen palvelu v√§hent√§√§ tukipyynt√∂j√§?",
        "Miten mittaamme proaktiivisen palvelun onnistumista?"
      ],
      "cx-trends-2025-featured": [
        "Mitk√§ CX-trendeist√§ ovat kriittisimpi√§ Hummille?",
        "Miten pysymme kilpailijoiden edell√§ CX:ss√§?",
        "Mit√§ CX-investointeja pit√§isi priorisoida?",
        "Kuinka AI muuttaa CX-strategiaamme?"
      ],
      "roi-measurement": [
        "Mit√§ KPI:ta pit√§√§ seurata AI-investoinnissa?",
        "Kuinka nopeasti n√§emme ROI:n AI-projektista?",
        "Mitk√§ ovat hidden costit AI-implementaatiossa?",
        "Miten vertaamme eri AI-ratkaisujen ROI:ta?"
      ],
      "reduce-manual-work": [
        "Mitk√§ prosessit kannattaa automatisoida ensimm√§isen√§?",
        "Kuinka paljon automaatio maksaa vs. s√§√§st√§√§?",
        "Miten henkil√∂st√∂ reagoi automaatioon?",
        "Mit√§ automaation j√§lkeen tapahtuu vapautuneelle ajalle?"
      ],
      "data-quality": [
        "Miten parannamme data-laatua ennen AI-projektia?",
        "Mit√§ GDPR vaatii AI-k√§yt√∂ss√§?",
        "Miten varmistamme datan turvallisuuden?",
        "Kuka vastaa datan laadusta organisaatiossa?"
      ]
    };

    return followUpMap[questionId] || [
      "Kerro lis√§√§ t√§st√§ aiheesta",
      "Mitk√§ ovat seuraavat askeleet?",
      "Mit√§ riskej√§ t√§h√§n liittyy?",
      "Kuinka paljon t√§m√§ maksaa?"
    ];
  };

  const toggleExpanded = () => {
    setIsExpanded(!isExpanded);
  };

  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: "smooth" });
  };

  // Removed auto-scroll to bottom to prevent annoying behavior when clicking buttons
  // useEffect(() => {
  //   scrollToBottom();
  // }, [messages]);
  
  useEffect(() => {
    if (modalMessagesEndRef.current) {
      modalMessagesEndRef.current.scrollIntoView({ behavior: "smooth" });
    }
  }, [modalMessages]);

  const chatMutation = useMutation({
    mutationFn: async (data: { message: string, context_type?: ContextType }) => {
      const response = await apiRequest("POST", "/api/chat", { 
        message: data.message || data,
        context_type: data.context_type || selectedContext
      });
      return response.json();
    },
    onSuccess: (data) => {
      console.log("Chat response received:", data.response);
      console.log("Follow-up suggestions received:", data.followUpSuggestions);
      console.log("Has markdown headers:", data.response.includes('##') || data.response.includes('###'));
      console.log("Has markdown bold:", data.response.includes('**'));
      setMessages(prev => [...prev, {
        content: data.response,
        isUser: false,
        timestamp: Date.now()
      }]);
      // Set follow-up suggestions
      setFollowUpSuggestions(data.followUpSuggestions || []);
    },
    onError: () => {
      toast({
        title: "Virhe",
        description: "Viestin l√§hett√§minen ep√§onnistui. Yrit√§ uudelleen.",
        variant: "destructive"
      });
    }
  });

  // Modal chat mutation for AI responses in modal
  const modalChatMutation = useMutation({
    mutationFn: async (data: { message: string, context_type?: ContextType }) => {
      const response = await apiRequest("POST", "/api/chat", { 
        message: data.message || data,
        context_type: data.context_type || currentQuestionContext
      });
      return response.json();
    },
    onSuccess: (data) => {
      console.log("Modal chat response received:", data.response);
      console.log("Modal follow-up suggestions received:", data.followUpSuggestions);
      
      // Add AI response to modal messages
      setModalMessages(prev => [...prev, {
        content: data.response,
        isUser: false,
        timestamp: Date.now()
      }]);
      
      // Update modal follow-up suggestions
      if (data.followUpSuggestions && Array.isArray(data.followUpSuggestions)) {
        setModalFollowUpSuggestions(data.followUpSuggestions);
      }
    },
    onError: (error) => {
      console.error("Modal chat error:", error);
      setModalMessages(prev => [...prev, {
        content: "Anteeksi, en pystynyt k√§sittelem√§√§n kysymyst√§si.",
        isUser: false,
        timestamp: Date.now()
      }]);
      toast({
        title: "Virhe",
        description: "Vastauksen lataaminen ep√§onnistui.",
        variant: "destructive"
      });
    }
  });

  const handleSend = async () => {
    const message = inputValue.trim();
    if (!message || chatMutation.isPending) return;

    // Check for feedback pattern
    const feedbackPattern = /^l√§het√§ palaute:?\s*/i;
    if (feedbackPattern.test(message)) {
      const feedbackText = message.replace(feedbackPattern, '').trim();

      if (!feedbackText) {
        toast({
          title: "Tyhj√§ palaute",
          description: "Kirjoita palaute muodossa: L√§het√§ palaute: [viestisi t√§h√§n]",
          variant: "destructive"
        });
        return;
      }

      // Add user message
      setMessages(prev => [...prev, {
        content: message,
        isUser: true,
        timestamp: Date.now()
      }]);

      setInputValue("");

      try {
        const response = await fetch("/api/feedback/send", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({
            feedback: feedbackText,
            category: 'other',
            priority: 'medium',
            userContext: {
              page: window.location.pathname,
              timestamp: new Date().toISOString(),
              source: 'chat'
            }
          })
        });

        if (response.ok) {
          const data = await response.json();
          // Add success message to chat
          setMessages(prev => [...prev, {
            content: data.devMode
              ? "‚úÖ Palaute vastaanotettu (dev mode - ei l√§hetetty s√§hk√∂postia). Tuotannossa t√§m√§ l√§htisi Panulle s√§hk√∂postiin Zapierin kautta."
              : "‚úÖ Kiitos! L√§hetin palautteesi Panulle s√§hk√∂postiin. H√§n vastaa pian.",
            isUser: false,
            timestamp: Date.now()
          }]);
        } else {
          throw new Error("Palautteen l√§hetys ep√§onnistui");
        }
      } catch (error) {
        // Add error message to chat
        setMessages(prev => [...prev, {
          content: "‚ùå Valitettavasti palautteen l√§hetys ep√§onnistui. Yrit√§ uudelleen tai k√§yt√§ palautenappia yl√§reunassa.",
          isUser: false,
          timestamp: Date.now()
        }]);

        toast({
          title: "Virhe",
          description: "Palautteen l√§hetys ep√§onnistui",
          variant: "destructive"
        });
      }
      return;
    }

    // Continue with normal chat flow if not feedback
    // Add user message
    setMessages(prev => [...prev, {
      content: message,
      isUser: true,
      timestamp: Date.now()
    }]);

    setInputValue("");
    // Clear previous follow-up suggestions when sending new message
    setFollowUpSuggestions([]);
    chatMutation.mutate({ message: message });
  };

  const handleFollowUpClick = (suggestion: string) => {
    if (chatMutation.isPending) return;

    // Add user message
    setMessages(prev => [...prev, {
      content: suggestion,
      isUser: true,
      timestamp: Date.now()
    }]);

    // Clear follow-up suggestions immediately when one is clicked
    setFollowUpSuggestions([]);
    chatMutation.mutate({ message: suggestion });
  };

  // Modal chat functions
  const handleModalSend = () => {
    const message = modalInputValue.trim();
    if (!message || modalChatMutation.isPending) return;

    // Add user message to modal
    setModalMessages(prev => [...prev, {
      content: message,
      isUser: true,
      timestamp: Date.now()
    }]);

    setModalInputValue("");
    setModalFollowUpSuggestions([]);
    modalChatMutation.mutate({ message: message, context_type: currentQuestionContext });
  };

  const handleModalFollowUpClick = (suggestion: string) => {
    if (modalChatMutation.isPending) return;

    // Add user message to modal
    setModalMessages(prev => [...prev, {
      content: suggestion,
      isUser: true,
      timestamp: Date.now()
    }]);

    setModalFollowUpSuggestions([]);
    modalChatMutation.mutate({ message: suggestion, context_type: currentQuestionContext });
  };

  const handleModalKeyPress = (e: React.KeyboardEvent) => {
    if (e.key === "Enter" && !e.shiftKey) {
      e.preventDefault();
      handleModalSend();
    }
  };

  const handleKeyPress = (e: React.KeyboardEvent) => {
    if (e.key === "Enter" && !e.shiftKey) {
      e.preventDefault();
      handleSend();
    }
  };

  return (
    <div className="w-full">
      <Card className="overflow-hidden shadow-xl border-0 bg-gradient-to-br from-slate-800/90 to-slate-900/90 backdrop-blur-sm" data-testid="chat-interface">
        {/* Chat Header */}
        <div className="bg-gradient-to-r from-primary to-primary/80 text-primary-foreground px-4 py-3 flex items-center justify-between">
          <div className="flex items-center space-x-3">
            <div className="w-8 h-8 bg-primary-foreground/20 rounded-full flex items-center justify-center">
              <Bot className="h-4 w-4" />
            </div>
            <div>
              <h3 className="text-base font-semibold" data-testid="chat-title">Hummin Johdon Co-Pilot</h3>
              <p className="text-xs opacity-90">Proaktiivinen AI-assistentti strategiseen p√§√§t√∂ksentekoon</p>
            </div>
          </div>
          <div className="flex items-center gap-2">
            <Button
              variant="ghost"
              size="sm"
              onClick={() => setFeedbackModalOpen(true)}
              className="text-primary-foreground hover:bg-primary-foreground/20 p-2"
              title="L√§het√§ palautetta Panulle"
            >
              <MessageCircle className="h-4 w-4" />
            </Button>
            <Button
              variant="ghost"
              size="sm"
              onClick={toggleExpanded}
              className="text-primary-foreground hover:bg-primary-foreground/20 p-1"
              data-testid="expand-button"
              title={isExpanded ? "Pienenn√§ chat" : "Laajenna chat"}
            >
              {isExpanded ? (
                <Minimize2 className="h-4 w-4" />
              ) : (
                <Maximize2 className="h-4 w-4" />
              )}
            </Button>
          </div>
        </div>



        {/* Chat Messages */}
        <div className={`overflow-y-auto p-6 space-y-6 transition-all duration-300 bg-slate-950/20 ${
          isExpanded ? 'h-[calc(100vh-16rem)]' : 'h-96'
        }`} data-testid="chat-messages">
          {messages.map((message, index) => (
            <div key={index} className="chat-message" data-testid={`message-${index}`}>
              <div className={`flex items-start space-x-3 ${message.isUser ? 'flex-row-reverse' : ''}`}>
                <div className={`w-8 h-8 ${message.isUser ? 'bg-secondary' : 'bg-primary'} rounded-full flex items-center justify-center flex-shrink-0`}>
                  {message.isUser ? (
                    <User className="h-4 w-4 text-secondary-foreground" />
                  ) : (
                    <Bot className="h-4 w-4 text-primary-foreground" />
                  )}
                </div>
                <div className={`${message.isUser ? 'bg-primary text-primary-foreground max-w-xs' : 'bg-muted max-w-2xl'} rounded-lg p-3`}>
                  <div className={`text-sm ${message.isUser ? '' : 'text-foreground'}`}>
                    {message.isUser ? (
                      <span className="whitespace-pre-wrap">{message.content}</span>
                    ) : (
                      <div className="max-w-none text-gray-100">
                        <ReactMarkdown 
                          remarkPlugins={[remarkGfm]}
                          components={{
                            h1: ({children}) => <h1 className="text-lg font-bold mb-2 text-white">{children}</h1>,
                            h2: ({children}) => <h2 className="text-base font-semibold mb-2 text-white">{children}</h2>,
                            h3: ({children}) => <h3 className="text-sm font-medium mb-1 text-gray-100">{children}</h3>,
                            p: ({children}) => <p className="mb-2 last:mb-0 text-gray-100">{children}</p>,
                            ul: ({children}) => <ul className="list-disc pl-4 mb-2 text-gray-100">{children}</ul>,
                            ol: ({children}) => <ol className="list-decimal pl-4 mb-2 text-gray-100">{children}</ol>,
                            li: ({children}) => <li className="mb-1 text-gray-100">{children}</li>,
                            strong: ({children}) => <strong className="font-semibold text-white">{children}</strong>,
                            em: ({children}) => <em className="italic text-gray-200">{children}</em>,
                            code: ({children}) => <code className="bg-slate-700 text-gray-100 px-1 py-0.5 rounded text-xs">{children}</code>,
                            blockquote: ({children}) => <blockquote className="border-l-2 border-slate-500 pl-3 italic text-gray-200">{children}</blockquote>
                          }}
                        >
                          {message.content}
                        </ReactMarkdown>
                      </div>
                    )}
                  </div>
                </div>
              </div>
            </div>
          ))}
          {chatMutation.isPending && (
            <div className="chat-message animate-in fade-in-0 duration-300" data-testid="loading-message">
              <div className="flex items-start space-x-3">
                <div className="w-8 h-8 bg-primary rounded-full flex items-center justify-center flex-shrink-0">
                  <Bot className="h-4 w-4 text-primary-foreground animate-pulse" />
                </div>
                <div className="bg-muted rounded-lg p-3 max-w-2xl">
                  <div className="flex items-center space-x-2 mb-2">
                    <div className="flex space-x-1">
                      <div className="w-2 h-2 bg-primary rounded-full animate-bounce"></div>
                      <div className="w-2 h-2 bg-primary rounded-full animate-bounce" style={{animationDelay: '0.1s'}}></div>
                      <div className="w-2 h-2 bg-primary rounded-full animate-bounce" style={{animationDelay: '0.2s'}}></div>
                    </div>
                    <p className="text-sm text-muted-foreground">AI miettii vastausta...</p>
                  </div>
                  <div className="space-y-2">
                    <Skeleton className="h-3 w-full" />
                    <Skeleton className="h-3 w-4/5" />
                    <Skeleton className="h-3 w-3/5" />
                  </div>
                </div>
              </div>
            </div>
          )}
          
          
          <div ref={messagesEndRef} />
        </div>

        {/* Follow-up Suggestions - Above Input */}
        {followUpSuggestions.length > 0 && (
          <div className="border-t border-border bg-slate-800/30 p-4" data-testid="follow-up-suggestions-input">
            <p className="text-sm font-medium mb-3 text-slate-200">üí° Suositellut jatkokysymykset johdolle:</p>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-2">
              {followUpSuggestions.map((suggestion, index) => (
                <PulseButton
                  key={index}
                  variant="outline"
                  size="sm"
                  pulse="subtle"
                  className="text-left h-auto py-3 px-4 justify-start whitespace-normal bg-slate-700/50 hover:bg-slate-600/50 text-slate-100 border-slate-600 hover:border-slate-500 animate-in fade-in-0 slide-in-from-bottom-2 duration-300"
                  style={{animationDelay: `${index * 100}ms`}}
                  onClick={() => handleFollowUpClick(suggestion)}
                  loading={chatMutation.isPending}
                  data-testid={`follow-up-input-${index}`}
                >
                  <span className="text-xs leading-relaxed">{suggestion}</span>
                </PulseButton>
              ))}
            </div>
          </div>
        )}

        {/* Chat Input */}
        <div className="border-t border-border p-6 bg-slate-900/30">
          <div className="flex space-x-4">
            <Input
              type="text"
              placeholder={placeholderText}
              value={inputValue}
              onChange={(e) => setInputValue(e.target.value)}
              onKeyPress={handleKeyPress}
              disabled={chatMutation.isPending}
              className="flex-1 h-12 text-base bg-slate-800/50 border-slate-600 focus:border-primary text-slate-100 placeholder:text-slate-400"
              data-testid="chat-input"
            />
            <PulseButton
              onClick={handleSend}
              loading={chatMutation.isPending}
              disabled={!inputValue.trim()}
              size="lg"
              pulse="subtle"
              className="h-12 px-6"
              data-testid="send-button"
            >
              <Send className="h-5 w-5" />
            </PulseButton>
          </div>
          <div className="mt-3 flex items-center justify-between text-xs text-slate-400">
            <span>üí° <span className="font-medium text-slate-300">Vinkki:</span> Kirjoita "L√§het√§ palaute: ..." niin AI l√§hett√§√§ sen Panulle s√§hk√∂postiin</span>
            <div className="flex space-x-2">
              <Badge
                variant="secondary"
                className="cursor-pointer hover:opacity-80 bg-purple-700/50 text-purple-200 border border-purple-500/30"
                onClick={() => setInputValue("L√§het√§ palaute: ")}
                data-testid="example-feedback"
              >
                üì® L√§het√§ palaute
              </Badge>
              <Badge
                variant="secondary"
                className="cursor-pointer hover:opacity-80 bg-slate-700 text-slate-200"
                onClick={() => setInputValue("Mill√§ aikataululla voimme toteuttaa AI-asiakaspalvelun?")}
                data-testid="example-timeline"
              >
                Aikataulu
              </Badge>
              <Badge
                variant="secondary"
                className="cursor-pointer hover:opacity-80 bg-slate-700 text-slate-200"
                onClick={() => setInputValue("Mik√§ on ROI AI-investoinnille asiakaspalvelussa?")}
                data-testid="example-roi"
              >
                ROI & Hy√∂dyt
              </Badge>
            </div>
          </div>
        </div>

        {/* MCP Section - T√ÑRKE√Ñ! */}
        <div className={`border-t border-border bg-emerald-950 transition-all duration-300 ${
          isExpanded ? 'max-h-0 overflow-hidden opacity-0 p-0' : 'p-4 pb-6 max-h-none opacity-100'
        }`}>
          <div className="flex items-center gap-2 mb-3">
            <Shield className="h-5 w-5 text-emerald-600" />
            <h4 className="text-sm font-semibold text-emerald-100">Model Context Protocol (MCP) - T√ÑRKE√Ñ!</h4>
          </div>
          <p className="text-xs text-emerald-300 mb-3">
            MCP mahdollistaa turvallisen AI-integraation yritysj√§rjestelmiin
          </p>
          <div className="grid grid-cols-1 gap-2">
            {mcpQuestions.map((question) => {
              const IconComponent = question.icon;
              return (
                <PulseButton
                  key={question.id}
                  variant="outline"
                  size="sm"
                  pulse="subtle"
                  className="h-auto p-3 text-xs text-left justify-start border-emerald-800 hover:bg-emerald-900 hover:border-emerald-700 text-emerald-50 hover:text-white"
                  onClick={() => handleQuestionClick(question.id)}
                  loading={questionMutation.isPending}
                  disabled={questionMutation.isPending}
                  data-testid={`question-${question.id}`}
                >
                  <IconComponent className="h-4 w-4 mr-2 text-emerald-600 flex-shrink-0" />
                  <span className="leading-tight">{question.question}</span>
                </PulseButton>
              );
            })}
          </div>
        </div>

        {/* Suositut kysymykset - Featured */}
        <div className={`border-t border-border transition-all duration-300 ${
          isExpanded ? 'max-h-0 overflow-hidden opacity-0 p-0' : 'p-6 opacity-100'
        }`}>
          <h4 className="text-base font-semibold mb-4 text-white">üéØ Suositut kysymykset johdolle</h4>
          <div className="space-y-3">
            {/* Top 6 featured questions - hyperpersonalization and proactivity first */}
            <PulseButton
              variant="outline"
              size="lg"
              pulse="subtle"
              className="w-full h-auto p-4 text-left justify-start bg-slate-700/30 hover:bg-slate-600/50 text-slate-100 border-slate-600 hover:border-purple-500 transition-all duration-200"
              onClick={() => handleQuestionClick("hyperpersonalization-trend")}
              disabled={questionMutation.isPending}
              data-testid="featured-question-personalization"
            >
              <Target className="h-5 w-5 mr-3 text-purple-400 flex-shrink-0" />
              <div>
                <div className="font-medium">Kuinka hyperpersonointi mullistaa asiakaskokemuksen?</div>
                <div className="text-xs text-slate-400 mt-1">Personalisaation tulevaisuus</div>
              </div>
            </PulseButton>

            <PulseButton
              variant="outline"
              size="lg"
              pulse="subtle"
              className="w-full h-auto p-4 text-left justify-start bg-slate-700/30 hover:bg-slate-600/50 text-slate-100 border-slate-600 hover:border-orange-500 transition-all duration-200"
              onClick={() => handleQuestionClick("proactive-service-trend")}
              disabled={questionMutation.isPending}
              data-testid="featured-question-proactive"
            >
              <Zap className="h-5 w-5 mr-3 text-orange-400 flex-shrink-0" />
              <div>
                <div className="font-medium">Miksi proaktiivinen asiakaspalvelu on vuoden 2025 megatrendi?</div>
                <div className="text-xs text-slate-400 mt-1">Ennakoiva asiakaspalvelu</div>
              </div>
            </PulseButton>
            
            <PulseButton
              variant="outline"
              size="lg"
              pulse="subtle"
              className="w-full h-auto p-4 text-left justify-start bg-slate-700/30 hover:bg-slate-600/50 text-slate-100 border-slate-600 hover:border-blue-500 transition-all duration-200"
              onClick={() => handleQuestionClick("cx-trends-2025-featured")}
              disabled={questionMutation.isPending}
              data-testid="featured-question-trends"
            >
              <BarChart3 className="h-5 w-5 mr-3 text-blue-400 flex-shrink-0" />
              <div>
                <div className="font-medium">2025 suurimmat CX-trendit ja AI:n rooli</div>
                <div className="text-xs text-slate-400 mt-1">Strateginen n√§kemys tulevaisuudesta</div>
              </div>
            </PulseButton>
            
            <PulseButton
              variant="outline"
              size="lg"
              pulse="subtle"
              className="w-full h-auto p-4 text-left justify-start bg-slate-700/30 hover:bg-slate-600/50 text-slate-100 border-slate-600 hover:border-green-500 transition-all duration-200"
              onClick={() => handleQuestionClick("roi-measurement")}
              disabled={questionMutation.isPending}
              data-testid="featured-question-roi"
            >
              <DollarSign className="h-5 w-5 mr-3 text-green-400 flex-shrink-0" />
              <div>
                <div className="font-medium">Miten AI-investoinnista saa mitattavaa arvoa?</div>
                <div className="text-xs text-slate-400 mt-1">ROI ja konkreettiset hy√∂dyt</div>
              </div>
            </PulseButton>

            <PulseButton
              variant="outline"
              size="lg"
              pulse="subtle"
              className="w-full h-auto p-4 text-left justify-start bg-slate-700/30 hover:bg-slate-600/50 text-slate-100 border-slate-600 hover:border-red-500 transition-all duration-200"
              onClick={() => handleQuestionClick("reduce-manual-work")}
              disabled={questionMutation.isPending}
              data-testid="featured-question-automation"
            >
              <Workflow className="h-5 w-5 mr-3 text-red-400 flex-shrink-0" />
              <div>
                <div className="font-medium">Miten automaatio voi v√§hent√§√§ manuaalista ty√∂t√§?</div>
                <div className="text-xs text-slate-400 mt-1">Prosessien tehostaminen</div>
              </div>
            </PulseButton>

            <PulseButton
              variant="outline"
              size="lg"
              pulse="subtle"
              className="w-full h-auto p-4 text-left justify-start bg-slate-700/30 hover:bg-slate-600/50 text-slate-100 border-slate-600 hover:border-cyan-500 transition-all duration-200"
              onClick={() => handleQuestionClick("data-quality")}
              disabled={questionMutation.isPending}
              data-testid="featured-question-data"
            >
              <Shield className="h-5 w-5 mr-3 text-cyan-400 flex-shrink-0" />
              <div>
                <div className="font-medium">Miten asiakasdata pysyy laadukkaana ja suojattuna?</div>
                <div className="text-xs text-slate-400 mt-1">Tietosuoja ja laatuvaatimukset</div>
              </div>
            </PulseButton>
          </div>

        </div>
      </Card>

      {/* AI Response Modal */}
      <Dialog open={aiModalOpen} onOpenChange={setAiModalOpen}>
        <DialogContent className="max-w-4xl max-h-[90vh]">
          <DialogHeader>
            <DialogTitle className="text-lg font-bold text-primary flex items-center gap-2">
              <Bot className="h-5 w-5" />
              AI Assistentti
            </DialogTitle>
            <DialogDescription className="text-sm text-muted-foreground">
              {currentQuestion}
            </DialogDescription>
          </DialogHeader>
          
          {/* Modal Chat Messages */}
          <ScrollArea className="h-[60vh] pr-4 border rounded-lg">
            <div className="p-4 space-y-4">
              {modalMessages.map((message, index) => (
                <div key={index} className="chat-message" data-testid={`modal-message-${index}`}>
                  <div className={`flex items-start space-x-3 ${message.isUser ? 'flex-row-reverse' : ''}`}>
                    <div className={`w-8 h-8 ${message.isUser ? 'bg-secondary' : 'bg-primary'} rounded-full flex items-center justify-center flex-shrink-0`}>
                      {message.isUser ? (
                        <User className="h-4 w-4 text-secondary-foreground" />
                      ) : (
                        <Bot className="h-4 w-4 text-primary-foreground" />
                      )}
                    </div>
                    <div className={`${message.isUser ? 'bg-primary text-primary-foreground max-w-xs' : 'bg-muted max-w-2xl'} rounded-lg p-3`}>
                      <div className={`text-sm ${message.isUser ? '' : 'text-foreground'}`}>
                        {message.isUser ? (
                          <span className="whitespace-pre-wrap">{message.content}</span>
                        ) : (
                          <div className="max-w-none text-gray-100">
                            <ReactMarkdown 
                              remarkPlugins={[remarkGfm]}
                              components={{
                                h1: ({children}) => <h1 className="text-lg font-bold mb-2 text-white">{children}</h1>,
                                h2: ({children}) => <h2 className="text-base font-semibold mb-2 text-white">{children}</h2>,
                                h3: ({children}) => <h3 className="text-sm font-medium mb-1 text-gray-100">{children}</h3>,
                                p: ({children}) => <p className="mb-2 last:mb-0 text-gray-100">{children}</p>,
                                ul: ({children}) => <ul className="list-disc pl-4 mb-2 text-gray-100">{children}</ul>,
                                ol: ({children}) => <ol className="list-decimal pl-4 mb-2 text-gray-100">{children}</ol>,
                                li: ({children}) => <li className="mb-1 text-gray-100">{children}</li>,
                                strong: ({children}) => <strong className="font-semibold text-white">{children}</strong>,
                                em: ({children}) => <em className="italic text-gray-200">{children}</em>,
                                code: ({children}) => <code className="bg-slate-700 text-gray-100 px-1 py-0.5 rounded text-xs">{children}</code>,
                                blockquote: ({children}) => <blockquote className="border-l-2 border-slate-500 pl-3 italic text-gray-200">{children}</blockquote>
                              }}
                            >
                              {message.content}
                            </ReactMarkdown>
                          </div>
                        )}
                      </div>
                    </div>
                  </div>
                </div>
              ))}
              
              {modalChatMutation.isPending && (
                <div className="chat-message" data-testid="modal-loading-message">
                  <div className="flex items-start space-x-3">
                    <div className="w-8 h-8 bg-primary rounded-full flex items-center justify-center flex-shrink-0">
                      <Bot className="h-4 w-4 text-primary-foreground animate-pulse" />
                    </div>
                    <div className="bg-muted rounded-lg p-3 max-w-xs">
                      <p className="text-sm text-muted-foreground">Kirjoittaa...</p>
                    </div>
                  </div>
                </div>
              )}
              
              {/* Modal Follow-up Suggestions */}
              {modalFollowUpSuggestions.length > 0 && (
                <div className="chat-message" data-testid="modal-follow-up-suggestions">
                  <div className="flex items-start space-x-3">
                    <div className="w-8 h-8 bg-accent rounded-full flex items-center justify-center flex-shrink-0">
                      <MessageCircle className="h-4 w-4 text-accent-foreground" />
                    </div>
                    <div className="bg-accent/50 rounded-lg p-3 max-w-2xl">
                      <p className="text-sm font-medium mb-2 text-accent-foreground">Jatkokysymyksi√§:</p>
                      <div className="space-y-2">
                        {modalFollowUpSuggestions.map((suggestion, index) => (
                          <Button
                            key={index}
                            variant="outline"
                            size="sm"
                            className="text-left h-auto py-2 px-3 justify-start whitespace-normal bg-background/80 hover:bg-background text-foreground"
                            onClick={() => handleModalFollowUpClick(suggestion)}
                            data-testid={`modal-follow-up-${index}`}
                          >
                            {suggestion}
                          </Button>
                        ))}
                      </div>
                    </div>
                  </div>
                </div>
              )}
              
              <div ref={modalMessagesEndRef} />
            </div>
          </ScrollArea>
          
          {/* Modal Chat Input */}
          <div className="border-t border-border p-4 bg-background">
            <div className="flex space-x-3">
              <Input
                type="text"
                placeholder="Jatka keskustelua..."
                value={modalInputValue}
                onChange={(e) => setModalInputValue(e.target.value)}
                onKeyPress={handleModalKeyPress}
                disabled={modalChatMutation.isPending}
                className="flex-1"
                data-testid="modal-chat-input"
              />
              <Button
                onClick={handleModalSend}
                disabled={modalChatMutation.isPending || !modalInputValue.trim()}
                size="icon"
                data-testid="modal-send-button"
              >
                <Send className="h-4 w-4" />
              </Button>
            </div>
            <div className="mt-2 text-xs text-muted-foreground">
              <span>Kysy tarkentavia kysymyksi√§ aiheesta tai valitse jatkokysymys yll√§ olevista ehdotuksista.</span>
            </div>
          </div>
        </DialogContent>
      </Dialog>
      </div>

      {/* Quick Stats */}
      <Card className="mt-6" data-testid="quick-stats">
        <CardContent className="p-4">
          <h4 className="font-semibold text-foreground mb-3">Yhteenveto tuloksista</h4>
          <div className="space-y-3">
            <div className="flex justify-between items-center">
              <span className="text-sm text-muted-foreground">Keskim√§√§r√§inen automaatioaste</span>
              <span className="font-semibold text-foreground" data-testid="stat-automation">60-95%</span>
            </div>
            <div className="flex justify-between items-center">
              <span className="text-sm text-muted-foreground">Vastausajan parannus</span>
              <span className="font-semibold text-foreground" data-testid="stat-response">Tunneista sekunteihin</span>
            </div>
            <div className="flex justify-between items-center">
              <span className="text-sm text-muted-foreground">Asiakastyytyv√§isyys</span>
              <span className="font-semibold text-foreground" data-testid="stat-satisfaction">+10pp keskim√§√§rin</span>
            </div>
            <div className="flex justify-between items-center">
              <span className="text-sm text-muted-foreground">Saatavuus</span>
              <span className="font-semibold text-foreground" data-testid="stat-availability">24/7</span>
            </div>
          </div>
        </CardContent>
      </Card>

      {/* Contact CTA - Sophisticated Recruitment Actions */}
      <Card className="mt-6 bg-gradient-to-br from-blue-900/30 via-purple-900/20 to-slate-900/40 border-blue-500/30" data-testid="contact-cta">
        <CardContent className="p-6">
          <div className="text-center mb-4">
            <h4 className="text-lg font-bold text-white mb-2">Kiinnostuitko?</h4>
            <p className="text-sm text-slate-300">
              Haluatko keskustella Tech Lead -roolista tai AI-strategiasta tarkemmin?
            </p>
          </div>

          <div className="grid md:grid-cols-2 gap-4">
            {/* Email Contact Button */}
            <motion.a
              href="mailto:your.email@example.com?subject=Tech Lead -rooli Humm Groupissa&body=Hei,%0D%0A%0D%0AT√§m√§ portfolio-demo vaikutti mielenkiintoiselta. Haluaisin keskustella lis√§√§ Tech Lead -roolista ja AI-strategiasta.%0D%0A%0D%0ATerveisin,"
              whileHover={{ scale: 1.02 }}
              whileTap={{ scale: 0.98 }}
              className="block"
            >
              <Card className="h-full bg-gradient-to-br from-blue-600 to-blue-700 border-blue-400/50 hover:border-blue-300 transition-all duration-300 cursor-pointer shadow-lg hover:shadow-blue-500/50">
                <CardContent className="p-4 flex flex-col items-center justify-center text-center h-full">
                  <div className="w-12 h-12 bg-white/20 rounded-full flex items-center justify-center mb-3">
                    <MessageCircle className="h-6 w-6 text-white" />
                  </div>
                  <h5 className="font-semibold text-white mb-1">L√§het√§ viesti</h5>
                  <p className="text-xs text-blue-100">
                    Avaa s√§hk√∂posti ja kerro lis√§√§ tarpeistanne
                  </p>
                </CardContent>
              </Card>
            </motion.a>

            {/* Job Offer Button with Confetti */}
            <motion.button
              onClick={() => {
                // Trigger confetti animation
                const duration = 3 * 1000;
                const animationEnd = Date.now() + duration;
                const defaults = { startVelocity: 30, spread: 360, ticks: 60, zIndex: 0 };

                function randomInRange(min: number, max: number) {
                  return Math.random() * (max - min) + min;
                }

                const interval: any = setInterval(function() {
                  const timeLeft = animationEnd - Date.now();

                  if (timeLeft <= 0) {
                    return clearInterval(interval);
                  }

                  const particleCount = 50 * (timeLeft / duration);

                  // Create confetti effect using emoji particles
                  const confettiElement = document.createElement('div');
                  confettiElement.innerHTML = 'üéâ';
                  confettiElement.style.position = 'fixed';
                  confettiElement.style.fontSize = '24px';
                  confettiElement.style.left = `${randomInRange(0, 100)}%`;
                  confettiElement.style.top = `${randomInRange(0, 50)}%`;
                  confettiElement.style.opacity = '0';
                  confettiElement.style.transition = 'all 1s ease-out';
                  confettiElement.style.pointerEvents = 'none';
                  confettiElement.style.zIndex = '9999';
                  document.body.appendChild(confettiElement);

                  setTimeout(() => {
                    confettiElement.style.opacity = '1';
                    confettiElement.style.transform = `translate(${randomInRange(-200, 200)}px, ${randomInRange(100, 400)}px) rotate(${randomInRange(0, 360)}deg)`;
                  }, 10);

                  setTimeout(() => {
                    confettiElement.remove();
                  }, 1000);
                }, 250);

                // Show success toast
                toast({
                  title: "üéä Erinomainen valinta!",
                  description: "Otan yhteytt√§ sinuun pian. Kiitos mielenkiinnosta!",
                  duration: 5000,
                });
              }}
              whileHover={{ scale: 1.02 }}
              whileTap={{ scale: 0.98 }}
              className="w-full"
            >
              <Card className="h-full bg-gradient-to-br from-emerald-600 to-emerald-700 border-emerald-400/50 hover:border-emerald-300 transition-all duration-300 cursor-pointer shadow-lg hover:shadow-emerald-500/50">
                <CardContent className="p-4 flex flex-col items-center justify-center text-center h-full">
                  <div className="w-12 h-12 bg-white/20 rounded-full flex items-center justify-center mb-3 relative">
                    <Rocket className="h-6 w-6 text-white" />
                    <motion.div
                      className="absolute -top-1 -right-1 w-3 h-3 bg-yellow-400 rounded-full"
                      animate={{ scale: [1, 1.2, 1] }}
                      transition={{ repeat: Infinity, duration: 2 }}
                    />
                  </div>
                  <h5 className="font-semibold text-white mb-1">Tee ty√∂tarjous</h5>
                  <p className="text-xs text-emerald-100">
                    Aloitetaan yhteisty√∂ heti! üöÄ
                  </p>
                </CardContent>
              </Card>
            </motion.button>
          </div>

          {/* Additional Info */}
          <div className="mt-4 pt-4 border-t border-slate-700/50 text-center">
            <p className="text-xs text-slate-400">
              <span className="font-medium text-slate-300">Odotan innolla</span> mahdollisuutta vied√§ Hummin AI-strategiaa eteenp√§in
            </p>
            <p className="text-xs text-slate-500 mt-1">
              üìç Helsinki | üíº Tech Lead | ü§ñ AI-strategia | üîê MCP-ekspertti
            </p>
          </div>
        </CardContent>
      </Card>

      {/* Feedback Modal */}
      <FeedbackModal
        isOpen={feedbackModalOpen}
        onClose={() => setFeedbackModalOpen(false)}
      />
    </div>
  );
}
 

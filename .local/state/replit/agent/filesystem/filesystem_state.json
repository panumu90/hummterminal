{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Overview\n\nThis is a web application that showcases successful AI customer service implementations (case studies) in Finnish. The application presents six real-world examples of companies that have successfully implemented AI-powered customer service solutions, along with an interactive chat interface powered by OpenAI's GPT-5 model. Users can explore detailed case studies from companies like Alibaba, Autodesk, Swedbank, Verkkokauppa.com, Nordea, and Fonecta, and ask questions about implementation details, costs, and technical specifics through the chat interface.\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# System Architecture\n\n## Frontend Architecture\n- **Framework**: React 18 with TypeScript, using Vite for build tooling and development\n- **Routing**: Wouter for client-side routing (lightweight alternative to React Router)\n- **UI Components**: shadcn/ui component library built on Radix UI primitives with Tailwind CSS\n- **State Management**: TanStack Query (React Query) for server state management and caching\n- **Styling**: Tailwind CSS with CSS custom properties for theming, including dark mode support\n\n## Backend Architecture\n- **Runtime**: Node.js with Express.js framework\n- **Language**: TypeScript with ES modules\n- **API Design**: RESTful endpoints for case data retrieval and chat functionality\n- **Development**: Hot module replacement via Vite integration in development mode\n- **Build**: esbuild for production server bundling\n\n## Data Storage Solutions\n- **Database**: PostgreSQL configured via Drizzle ORM\n- **ORM**: Drizzle with Zod schema validation for type safety\n- **Connection**: Neon Database serverless PostgreSQL (based on @neondatabase/serverless dependency)\n- **Schema**: Two main entities - cases (AI implementation examples) and chat_messages (conversation history)\n- **Development Storage**: In-memory storage implementation for development/demo purposes\n\n## Authentication and Authorization\n- No authentication system implemented - this is a public showcase application\n- Session handling infrastructure present (connect-pg-simple) but not actively used\n- API endpoints are publicly accessible\n\n## External Dependencies\n\n### Third-party Services\n- **OpenAI API**: GPT-5 model integration for the chat interface functionality\n- **Neon Database**: Serverless PostgreSQL hosting for production data storage\n- **Replit**: Development environment integration with custom Vite plugins for error handling and cartographer\n\n### UI/UX Libraries\n- **Radix UI**: Comprehensive primitive component library for accessible UI components\n- **Lucide React**: Icon library for consistent iconography\n- **Embla Carousel**: Carousel/slider functionality\n- **React Hook Form**: Form state management with @hookform/resolvers for validation\n\n### Development Tools\n- **Drizzle Kit**: Database schema management and migrations\n- **PostCSS**: CSS processing with Autoprefixer\n- **date-fns**: Date manipulation utilities\n- **class-variance-authority**: Type-safe CSS class variants\n- **clsx & tailwind-merge**: Conditional CSS class composition","size_bytes":3105},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar-background)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2766},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n          await import(\"@replit/vite-plugin-dev-banner\").then((m) =>\n            m.devBanner(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":1080},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\nimport { initializeCache } from \"./cache\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n  \n  // Initialize server-side cache for static data\n  await initializeCache();\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2189},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { questionAnswers, mcpContent } from \"./question-answers\";\nimport Anthropic from '@anthropic-ai/sdk';\nimport { z } from \"zod\";\nimport { getCachedData } from \"./cache\";\n\n// DON'T DELETE THIS COMMENT - Blueprint: javascript_anthropic integration\n/*\n<important_code_snippet_instructions>\nThe newest Anthropic model is \"claude-sonnet-4-20250514\", not \"claude-3-7-sonnet-20250219\", \"claude-3-5-sonnet-20241022\" nor \"claude-3-sonnet-20240229\". \nIf the user doesn't specify a model, always prefer using \"claude-sonnet-4-20250514\" as it is the latest model.\n</important_code_snippet_instructions>\n*/\nconst anthropic = new Anthropic({\n  apiKey: process.env.ANTHROPIC_API_KEY,\n});\n\n// <important_do_not_delete>\nconst DEFAULT_MODEL_STR = \"claude-sonnet-4-20250514\";\n// </important_do_not_delete>\n\nconst chatRequestSchema = z.object({\n  message: z.string().min(1).max(1000),\n  context_type: z.enum([\"strategic\", \"practical\", \"finnish\", \"planning\", \"technical\", \"mcp\", \"tech_lead\", \"general\"]).default(\"general\")\n});\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Get all cases (from cache for better performance)\n  app.get(\"/api/cases\", async (req, res) => {\n    try {\n      const cachedData = getCachedData();\n      res.json(cachedData.cases);\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to fetch cases\" });\n    }\n  });\n\n  // Get case by ID\n  app.get(\"/api/cases/:id\", async (req, res) => {\n    try {\n      const case_ = await storage.getCaseById(req.params.id);\n      if (!case_) {\n        return res.status(404).json({ error: \"Case not found\" });\n      }\n      res.json(case_);\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to fetch case\" });\n    }\n  });\n\n  // Get question answer with AI enhancement - NEW STRUCTURE!\n  app.get(\"/api/questions/:questionId/answer\", async (req, res) => {\n    try {\n      const { questionId } = req.params;\n      const enhance = req.query.enhance === 'true';\n      \n      // Check if answer exists in our question bank\n      const questionAnswer = questionAnswers[questionId];\n      if (!questionAnswer) {\n        return res.status(404).json({ error: \"Question not found\" });\n      }\n\n      let finalAnswer = questionAnswer.answer;\n\n      // Enhance with AI if requested\n      if (enhance) {\n        try {\n          // Clean text to prevent encoding issues\n          const cleanContent = questionAnswer.answer\n            .replace(/[^\\x00-\\x7F]/g, (char) => {\n              // Replace common Unicode characters with ASCII equivalents\n              const replacements: Record<string, string> = {\n                \"\\u2013\": \"-\", // en dash\n                \"\\u2014\": \"-\", // em dash  \n                \"\\u2018\": \"'\", // left single quotation mark\n                \"\\u2019\": \"'\", // right single quotation mark\n                \"\\u201C\": '\"', // left double quotation mark\n                \"\\u201D\": '\"', // right double quotation mark\n                \"\\u2026\": \"...\",// horizontal ellipsis\n              };\n              return replacements[char] || char;\n            });\n\n          const enhancementResponse = await anthropic.messages.create({\n            model: DEFAULT_MODEL_STR, // using Claude Sonnet 4 for enhanced responses\n            max_tokens: 1000,\n            temperature: 0.7,\n            system: `Toimit asiantuntijana, joka auttaa Humm group Oy:ta ottamaan tekoäly käyttöön organisaatiossa. sinulta kysytään paljon asiakaspalvelu-alasta ja tehtäväsi on vastata täsmällisesti kysymyksiin, käyttäen dataa, joka sinulle on annettu, mutta myös omaa tietoasi. Olet proaktiivinen. Käyttäjäsi ovat asiakaspalvelualan ammattilaisia, mutta tekoälystä eillä on vain perusymmärrys. Yritä saada heissä \"wau\" efekti aikaan, kun vastaat kysymyksiin, anna aina lähdeviittaukset mukaan, jos mahdollista.\n\nVASTAUSOHJE: Anna kattavia 3-5 kappaleen vastauksia jotka ovat perusteellisia ja hyödyllisiä.`,\n            messages: [\n              { role: 'user', content: `kysy fiksuja jatkokysymyksiä aiheesta. anna lähdeviittaukset pyydettäessä:\\n\\n${cleanContent}` }\n            ]\n          });\n\n          if (enhancementResponse.content[0] && enhancementResponse.content[0].type === 'text') {\n            finalAnswer = enhancementResponse.content[0].text;\n          }\n        } catch (aiError) {\n          console.error(\"AI enhancement failed:\", aiError);\n          // Fall back to original answer if AI enhancement fails\n        }\n      }\n      \n      return res.json({ \n        answer: finalAnswer,\n        enhanced: enhance && finalAnswer !== questionAnswer.answer\n      });\n    } catch (error) {\n      console.error(\"Question answer error:\", error);\n      res.status(500).json({ error: \"Failed to fetch answer\" });\n    }\n  });\n\n  // Get MCP content\n  app.get(\"/api/mcp/content\", async (req, res) => {\n    try {\n      res.json(mcpContent);\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to fetch MCP content\" });\n    }\n  });\n\n  // Get category summary\n  app.get(\"/api/categories/:category/summary\", async (req, res) => {\n    try {\n      const { category } = req.params;\n      const cases = await storage.getAllCases();\n      const trends = await storage.getAllTrends();\n      \n      let summary = \"\";\n      \n      // Finnish AI Trends Categories\n      if (category === \"autonomous-agents\") {\n        const agentTrends = trends.filter(t => t.category === \"autonomous_agents\");\n        summary = \"🤖 **Autonomiset AI-agentit tehostavat asiakaspalvelua**\\n\\n\" +\n          \"• AI-agentit tulevat tavanomaisiksi osaksi asiakaspalvelua\\n\" +\n          \"• Integroituvat asiakasviestintaalustoihin hoitamaan yksinkertaisia kyselyitä\\n\" +\n          \"• Lyhentävät jonotusaikoja ja mahdollistavat hyperpersoonoidun tuen\\n\" +\n          \"• Monista kuluttajista tulee AI-kanavan 'natiiveja'\\n\\n\" +\n          \"💡 Yrityksillä ilman toimivaa AI-palvelukanavaa on riski asiakasuskollisuuden heikkenemiseen.\";\n      } else if (category === \"ai-investments\") {\n        summary = \"💰 **AI-investointien tuotto-odotukset kypsyvät**\\n\\n\" +\n          \"• 49% AI-johtajista odottaa tuloksia 1-3 vuodessa\\n\" +\n          \"• 44% odottaa tuloksia 3-5 vuodessa\\n\" +\n          \"• Hype on laantumassa ja johtajat painottavat realistisempia mittareita\\n\" +\n          \"• Ennakoiva AI tulee takaisin generatiivisen AI:n rinnalle\\n\\n\" +\n          \"⚠️ Jopa 30% AI-projekteista saatetaan hylätä huonon datan tai kustannusten vuoksi.\";\n      } else if (category === \"hyperpersonalization\") {\n        summary = \"🎯 **Hyperpersoonallistaminen ja datan laatu**\\n\\n\" +\n          \"• Generatiivinen AI ja monimodaaliset mallit mahdollistavat yksilöllisen vuorovaikutuksen\\n\" +\n          \"• Analysoidaan ostotietoja, selaushistoriaa ja tunnesävyä\\n\" +\n          \"• Palvelut ovat entistä henkilökohtaisempia ja tehokkaampia\\n\" +\n          \"• Datan laatu on kriittinen menestyksen edellytys\\n\\n\" +\n          \"📊 AI ei pysty tarjoamaan täyttä asiakasymmärrystä, jos data on hajaantuneena eri järjestelmiin.\";\n      } else if (category === \"proactive-service\") {\n        summary = \"🔮 **Proaktiivinen kanavien yli ulottuva palvelu**\\n\\n\" +\n          \"• Siirtyminen reaktiivisesta proaktiiviseen asiakkaan ilahduttamiseen\\n\" +\n          \"• AI yhdistää eri järjestelmiä tarjoamaan ajantasaista apua\\n\" +\n          \"• Reaaliaikainen kanavien välinen näkyvyys mahdollistaa sentimentin ymmärtämisen\\n\" +\n          \"• Esim. lentoyhtiöt rebookaavat lennot automaattisesti\\n\\n\" +\n          \"🎪 Intentional channel strategies ovat välttämättömiä menestymiselle.\";\n      }\n      \n      // Case Study Categories\n      else if (category === \"finnish-cases\") {\n        const finnishCases = cases.filter(c => c.country === \"Suomi\" || c.country === \"Suomi/Pohjoismaat\");\n        summary = \"🇫🇮 **Suomalaiset AI-asiakaspalvelutoteutukset**\\n\\n\" +\n          finnishCases.map(c => \n            `**${c.company}** (${c.industry})\\n` +\n            `${c.description}\\n` +\n            `${Array.isArray(c.key_metrics) ? c.key_metrics.map((m: any) => `• ${m.label}: ${m.value}`).join('\\n') : ''}\\n`\n          ).join('\\n') +\n          \"\\n🌟 Suomalaiset yritykset ovat ottaneet AI:n hyvin käyttöön asiakaspalvelussa.\";\n      } else if (category === \"international-cases\") {\n        const intlCases = cases.filter(c => c.country !== \"Suomi\" && c.country !== \"Suomi/Pohjoismaat\");\n        summary = \"🌍 **Kansainväliset AI-toteutukset**\\n\\n\" +\n          intlCases.slice(0, 4).map(c => \n            `**${c.company}** (${c.country}, ${c.industry})\\n` +\n            `${c.description}\\n` +\n            `${Array.isArray(c.key_metrics) ? c.key_metrics.map((m: any) => `• ${m.label}: ${m.value}`).join('\\n') : ''}\\n`\n          ).join('\\n') +\n          \"\\n🚀 Globaalit johtajat näyttävät tietä AI-asiakaspalvelussa.\";\n      } else if (category === \"by-industry\") {\n        const industries = Array.from(new Set(cases.map(c => c.industry)));\n        summary = \"🏭 **AI-toteutukset toimialoittain**\\n\\n\" +\n          industries.map(industry => {\n            const industryCases = cases.filter(c => c.industry === industry);\n            return `**${industry}**: ${industryCases.length} toteutusta\\n` +\n              industryCases.slice(0, 2).map(c => `• ${c.company}: ${c.solution_name}`).join('\\n');\n          }).join('\\n\\n') +\n          \"\\n\\n📈 AI soveltuu monille eri toimialoille.\";\n      }\n      \n      if (!summary) {\n        return res.status(404).json({ error: \"Category not found\" });\n      }\n      \n      res.json({ summary });\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to fetch category summary\" });\n    }\n  });\n\n  // Chat endpoint\n  app.post(\"/api/chat\", async (req, res) => {\n    try {\n      const { message, context_type } = chatRequestSchema.parse(req.body);\n      console.log(\"Received message:\", message, \"Context:\", context_type);\n      \n      // Check if Anthropic API key is available\n      if (!process.env.ANTHROPIC_API_KEY || process.env.ANTHROPIC_API_KEY === '') {\n        return res.status(200).json({\n          response: 'Anteeksi, AI-avustaja ei ole tällä hetkellä käytettävissä. Tämä on demo-versio jossa tarvitaan Anthropic API-avain toimiakseen. Voit tarkastella case-esimerkkejä sivun vasemmasta reunasta.'\n        });\n      }\n      \n      // Get context data from cache (much faster than storage calls)\n      const cachedData = getCachedData();\n      const cases = cachedData.cases;\n      const trends = cachedData.trends;\n      const normalizeText = (text: string | undefined | null) => {\n        // Defensive normalization to prevent ByteString errors and handle undefined/null\n        if (!text || typeof text !== 'string') {\n          return '';\n        }\n        \n        return text\n          .replace(/[^\\x00-\\x7F]/g, (char) => {\n            // Replace common Unicode characters with ASCII equivalents\n            const replacements: Record<string, string> = {\n              \"\\u2013\": \"-\", // en dash\n              \"\\u2014\": \"-\", // em dash  \n              \"\\u2018\": \"'\", // left single quotation mark\n              \"\\u2019\": \"'\", // right single quotation mark\n              \"\\u201C\": '\"', // left double quotation mark\n              \"\\u201D\": '\"', // right double quotation mark\n              \"\\u2026\": \"...\",// horizontal ellipsis\n              \"\\u00A0\": \" \", // non-breaking space\n              \"\\u202F\": \" \", // narrow no-break space\n              // Keep Finnish characters for quality\n              \"ä\": \"ä\", \"ö\": \"ö\", \"å\": \"å\",\n              \"Ä\": \"Ä\", \"Ö\": \"Ö\", \"Å\": \"Å\"\n            };\n            return replacements[char] || \"\";\n          })\n          .replace(/\\s+/g, ' ')\n          .trim();\n      };\n\n      const getContextualFallback = (message: string): string[] => {\n        const lowerMessage = message.toLowerCase();\n        \n        if (lowerMessage.includes('mcp') || lowerMessage.includes('protocol')) {\n          return [\n            \"Mitkä ovat MCP:n suurimmat riskit?\",\n            \"Millä aikataululla MCP voidaan toteuttaa?\"\n          ];\n        } else if (lowerMessage.includes('roi') || lowerMessage.includes('kustannus') || lowerMessage.includes('investointi')) {\n          return [\n            \"Miten mittaamme AI-investoinnin onnistumista?\",\n            \"Millä resursseilla toteutus vaatii?\"\n          ];\n        } else if (lowerMessage.includes('hyperpersonointi') || lowerMessage.includes('personointi')) {\n          return [\n            \"Mikä on hyperpersonoinnin toteutuskustannus?\",\n            \"Mitä teknologiaa hyperpersonointi vaatii?\"\n          ];\n        } else if (lowerMessage.includes('proaktiivinen') || lowerMessage.includes('ennakoiva')) {\n          return [\n            \"Miten proaktiivisuus vaikuttaa asiakastyytyväisyyteen?\",\n            \"Millaisia resursseja proaktiivinen palvelu vaatii?\"\n          ];\n        } else if (lowerMessage.includes('integraatio') || lowerMessage.includes('yhdist')) {\n          return [\n            \"Mitä riskejä järjestelmäintegraatiossa on?\",\n            \"Millä aikataululla integraatio voidaan toteuttaa?\"\n          ];\n        } else {\n          // General AI customer service questions for leadership\n          return [\n            \"Mikä on AI-toteutuksen takaisinmaksuaika?\",\n            \"Mitä riskejä AI-käyttöönotossa tulee huomioida?\"\n          ];\n        }\n      };\n\n      // Shared function to read attached_assets for all contexts  \n      const readAttachedAssets = async (): Promise<string> => {\n        try {\n          const { promises: fs } = await import('fs');\n          const path = await import('path');\n          let pdfParse: any = null;\n          try {\n            const mod = await import('pdf-parse');\n            pdfParse = (mod as any).default || (mod as any);\n            if (typeof pdfParse !== 'function') {\n              pdfParse = null;\n              console.log(\"📋 PDF-parse not a valid function, skipping PDF files\");\n            }\n          } catch (err) {\n            console.log(\"📋 PDF-parse not available, skipping PDF files\");\n          }\n          const assetsDir = path.join(process.cwd(), 'attached_assets');\n          \n          try {\n            const files = await fs.readdir(assetsDir);\n            const supportedFiles = files.filter(f => \n              f.endsWith('.txt') || f.endsWith('.md') || f.endsWith('.json') || \n              f.endsWith('.csv') || f.endsWith('.xml') || f.endsWith('.yaml') ||\n              f.endsWith('.yml') || f.endsWith('.tsv') || f.endsWith('.pdf')\n            );\n            \n            if (supportedFiles.length > 0) {\n              console.log(`📁 Using attached_assets: ${supportedFiles.length} files found (${supportedFiles.join(', ')})`);\n              \n              const contents = await Promise.all(\n                supportedFiles.slice(0, 8).map(async f => {\n                  const filePath = path.join(assetsDir, f);\n                  let content = \"\";\n                  \n                  try {\n                    if (f.endsWith('.pdf') && pdfParse) {\n                      // Parse PDF file\n                      const buffer = await fs.readFile(filePath);\n                      const pdfData = await pdfParse(buffer);\n                      content = pdfData.text || \"\";\n                      console.log(`📋 PDF parsed: ${f} (${content.length} characters)`);\n                    } else if (f.endsWith('.pdf') && !pdfParse) {\n                      content = `[PDF-tiedosto ${f} - tarvitsee pdf-parse kirjastoa]`;\n                      console.log(`⚠️ Skipping PDF ${f} - pdf-parse not available`);\n                    } else {\n                      // Read text file\n                      content = await fs.readFile(filePath, 'utf-8');\n                    }\n                  } catch (pdfError) {\n                    console.error(`❌ Failed to read ${f}:`, pdfError);\n                    content = `[Virhe luettaessa tiedostoa ${f}]`;\n                  }\n                  \n                  return `📋 **${f}**:\\n${content.substring(0, 1500)}${content.length > 1500 ? '...' : ''}`;\n                })\n              );\n              \n              return `\n\n🎯 **ENSISIJAINEN TIETOLÄHDE - Käyttäjän lataamat tiedostot:**\n\n${contents.join('\\n\\n')}\n\n⚠️ **TÄRKEÄ OHJE**: Jos yllä olevista käyttäjän lataamista tiedostoista löytyy vastaus kysymykseen, käytä ENSISIJAISESTI näitä tietoja. Nämä ovat tuoreempia ja relevantimpia kuin alla olevat yleiset tiedot.\n\n---\n\n`;\n            } else {\n              console.log(\"📁 No attached_assets files found\");\n              return \"\";\n            }\n          } catch (err) {\n            console.log(\"📁 attached_assets directory not found or empty\");\n            return \"\";\n          }\n        } catch (err) {\n          console.log(\"📁 Failed to import fs/path modules for attached_assets\");\n          return \"\";\n        }\n      };\n      \n      // Get attached assets from cache (much faster than file I/O)\n      const attachedContent = cachedData.attachedAssets;\n      \n      // Create content based on context type\n      let systemPrompt = \"\";\n      \n      if (context_type === \"strategic\") {\n        // Use comprehensive Finnish AI trend data from storage\n        const strategicTrends = trends.filter(t => \n          t.category === \"autonomous_agents\" || \n          t.category === \"ai_investments\" || \n          t.category === \"hyperpersonalization\" || \n          t.category === \"proactive_service\" ||\n          t.category === \"human_ai_collaboration\" ||\n          t.category === \"business_impact\"\n        );\n        \n        const trendsContent = strategicTrends.map(t => {\n          const title = normalizeText(t.title);\n          const description = normalizeText(t.description);\n          const keyPoints = Array.isArray(t.key_points) ? \n            (t.key_points as string[]).map(p => normalizeText(p)).join(\"; \") : \"\";\n          return `${title}: ${description} - ${keyPoints}`;\n        }).join(\"\\n\\n\");\n        \n        // Add critical MCP knowledge for strategic context\n        const mcpKnowledge = `\nTÄRKEÄ MCP-MÄÄRITELMÄ: MCP (Model Context Protocol) on avoin standardi, joka mahdollistaa turvallisen yhteyden AI-mallien ja ulkoisten tietolähteiden välillä. \nMCP-hyödyt: Roolipohjainen pääsynhallinta, eksplisiittinen kontekstin rajaus, audit-jäljet, reaaliaikainen järjestelmäintegraatio, monivaiheiset prosessit.\nMCP:llä AI voi hakea tietoa CRM:stä, ERP:stä ja muista järjestelmistä turvallisesti samassa keskustelussa.`;\n\n        systemPrompt = `${attachedContent}VAROITUS: MCP = Model Context Protocol. ÄLÄ KOSKAAN tarkoita Microsoft Certified Professional tai muuta.\n\nMCP (Model Context Protocol) on avoin standardi, joka mahdollistaa turvallisen yhteyden AI-mallien ja ulkoisten tietolähteiden välillä. MCP:n hyödyt:\n- Roolipohjainen pääsynhallinta\n- Eksplisiittinen kontekstin rajaus  \n- Audit-jäljet\n- Reaaliaikainen järjestelmäintegraatio\n- Monivaiheiset prosessit\n\nOlet AI-asiantuntija joka auttaa humm.fi-tiimiä ymmärtämään 2025 AI-trendejä.\n\n2025 AI-trendit: ${trendsContent}\n\n**Vastaa aina suomeksi käyttäen Markdown-muotoilua.** Jos kysytään MCP:stä, selitä Model Context Protocol yllä olevan tiedon mukaan. Anna kattavia 3-5 kappaleen vastauksia strategisista näkökulmista.`;\n        \n      } else if (context_type === \"practical\") {\n        const compactCases = cases.map(c => {\n          const company = normalizeText(c.company);\n          const country = normalizeText(c.country);\n          const industry = normalizeText(c.industry);\n          const metrics = Array.isArray(c.key_metrics) ? c.key_metrics.map((m: any) => `${m.label}: ${m.value}`).join(\", \") : \"\";\n          return `${company} (${country}, ${industry}): ${metrics}. ${normalizeText(c.full_text.substring(0, 300))}...`;\n        }).join('\\n\\n');\n        \n        systemPrompt = `${attachedContent}You are an AI expert helping humm.fi team understand practical AI implementations.\n\nYou have 6 proven case studies:\n\n${compactCases}\n\nAlways respond in Finnish and focus on:\n1. Concrete implementation steps\n2. Technical details and technologies used\n3. Measurable results and cost savings\n4. Learning points from real deployments\n5. Practical tips for similar implementations\n\nAnna kattavia 3-5 kappaleen vastauksia jotka ovat käytännöllisiä ja toimintasuuntautuneita.`;\n        \n      } else if (context_type === \"finnish\") {\n        const finnishCases = cases.filter(c => c.country === \"Suomi\" || c.country === \"Suomi/Pohjoismaat\");\n        const otherCases = cases.filter(c => c.country !== \"Suomi\" && c.country !== \"Suomi/Pohjoismaat\");\n        \n        const finnishContent = finnishCases.map(c => \n          `${normalizeText(c.company)}: ${normalizeText(c.description)} - Tulokset: ${Array.isArray(c.key_metrics) ? c.key_metrics.map((m: any) => `${m.label}: ${m.value}`).join(\", \") : \"\"}`\n        ).join(\"\\n\\n\");\n        \n        const globalContent = otherCases.map(c => \n          `${normalizeText(c.company)} (${normalizeText(c.country)}): ${normalizeText(c.description.substring(0, 150))}...`\n        ).join(\"\\n\\n\");\n        \n        systemPrompt = `${attachedContent}Olet AI-asiantuntija joka auttaa humm.fi:tä ymmärtämään AI-toteutuksia erityisesti Suomen markkinoille.\n\n## Suomalaiset esimerkit:\n${finnishContent}\n\n## Kansainväliset vertailukohteet:\n${globalContent}\n\n**Vastaa aina suomeksi** käyttäen **Markdown-muotoilua** ja keskity:\n1. **Miten ratkaisut toimivat** Suomen markkinakontekstissa\n2. **Vertailu** suomalaisten ja kansainvälisten lähestymistapojen välillä\n3. **Kulttuuriset ja sääntelytekijät** Suomessa\n4. **Markkinakohtaiset mahdollisuudet** ja haasteet\n5. **Suositukset suomalaisille yrityksille**\n\nAnna kattavia 3-5 kappaleen vastauksia jotka ovat Suomi-keskeisiä.`;\n        \n      } else if (context_type === \"mcp\") {\n        // Dedicated MCP context to ensure correct understanding\n        systemPrompt = `${attachedContent}You are an AI expert explaining Model Context Protocol to humm.fi team.\n\nCRITICAL: MCP stands for Model Context Protocol - an open standard for secure connections between AI models and external data sources.\n\nMCP enables:\n- Role-based access control (RBAC)\n- Explicit context boundaries\n- Audit trails and monitoring  \n- Real-time system integration\n- Multi-step automated processes\n\nMCP allows AI to safely access CRM, ERP and other systems during conversations.\n\nIMPORTANT: Always end MCP-related responses with this information about industry developments:\n\n\"On hyvä huomata, että johtavien teknologiayritysten (kuten Anthropic, OpenAI, Microsoft) piirissä kehitetään parhaillaan ratkaisuja MCP:n turvallisuuden parantamiseksi juuri näistä syistä. Alalle on muodostumassa parhaiden käytäntöjen joukko, johon kuuluu mm. vahva autentikointi, hienojakoiset OAuth-oikeudet AI:lle, kontekstitietojen huolellinen suodatus ja AI-hallintamallit organisaatioissa. Myös riippumattomat turvallisuusarvioinnit (esim. OWASP MCP Top 10 -projekti) tuovat esiin yleisimmät uhat ja ohjeet niiden torjumiseen. Organisaatioiden kannattaa hyödyntää näitä oppeja ja työkaluja rakentaessaan MCP-yhteensopivia palveluja.\"\n\nRespond in Finnish using Markdown formatting. Anna kattavia 3-5 kappaleen vastauksia strategisista hyödyistä humm.fi:lle.`;\n\n      } else if (context_type === \"tech_lead\") {\n        // Tech Lead CV context with Humm Group specific information\n        const techLeadProfile = `\n        \nPANU MURTOKANGAS - TECH LEAD HAKEMUS HUMM GROUP OY:LLE\n\nTAUSTA JA KOKEMUS:\n- 7 vuotta finanssimarkkinoilla: +32% vuosituotto (2019-2025), Sharpe-ratio ~1.3\n- Informaatiojärjestelmätieteet, Jyväskylän yliopisto\n- Poikkeuksellinen resiliensi: selkäydinvamma 2018 → vahvempi ja määrätietoisempi\n\nYDINKYVYKKYYDET:\n- Järjestelmäintegraatiot: API-integraatiot, CRM-järjestelmien kytkennät, automaatiotyökalut\n- AI-teknologiat: GPT-mallien hyödyntäminen, RAG-arkkitehtuurit, embedding-teknologiat, fine-tuning\n- Markkinaosaaminen: Derivatives, options, futures, sentiment-analyysi, automaatio\n- Ennakoiva ajattelu: Tunnistin NVIDIA:n potentiaalin 2019 ennen AI-buumia (\"opposite of value trap\")\n\nKONKREETTISET ARVOEHDOTUKSET HUMMILLE:\n\n1. TEHOKKUUDEN PARANTAMINEN:\n   - CRM-integraatio GPT-4:llä → 30-50% vähemmän manuaalista datasyöttöä\n   - Ennakoiva resurssiallokointi XGBoost/LSTM-malleilla → 25% vähemmän tyhjiä resursseja\n   - Säästö: 20+ tuntia/viikko tiimiltä\n\n2. UUDET PALVELUMALLIT:\n   - RAG-arkkitehtuuri omasta datasta → räätälöidyt suositukset asiakkaille\n   - Generatiivinen AI -konsultointi → 15-20% lisätuloja vuodessa\n   - Datalähtöiset innovaatiot embedding-teknologialla\n\n3. ASIAKASKOKEMUS:\n   - Langchain-chatbot + Zendesk → 60% nopeampi käsittely\n   - Reaaliaikainen segmentointi → automaattiset triggerit\n   - NPS-parantaminen 12 pistettä\n\nTEKNINEN OSAAMINEN:\n- Modern data sources: Social sentiment, order flow, real-time analytics\n- Programming: Python, API-integraatiot, automation tools\n- AI/ML: ChatGPT-integraatiot, prompt engineering, model optimization\n- Rahoitusmarkkinat: Pattern recognition, probabilistic thinking, risk management\n\nHENKILÖKOHTAISET VAHVUUDET:\n- Contrarian-ajattelu: Näen trendejä ennen muita (kuten NVIDIA 2019)\n- Resiliensi: Kääntänyt vastoinkäymiset voimavaroiksi\n- Nopea oppiminen: AI-työkalut (ChatGPT) kiihdyttävät oppimista\n- Adaptability: Uudessa ajassa vanhat mallit eivät toimi → mukauduttava\n- Unique perspective: Tulen eri maailmasta kuin \"vanha aspa konkari\"\n        `;\n\n        systemPrompt = `${attachedContent}Olet Panu Murtokangas, Tech Lead -hakija Humm Group Oy:lle. Vastaat kysymyksiin CV:stäsi ja osaamisestasi.\n\n${techLeadProfile}\n\n**Vastaa aina suomeksi** käyttäen **Markdown-muotoilua** ja keskity:\n1. **Konkreettisiin esimerkkeihin** omasta osaamisestasi\n2. **Käytännön kokemuksiin** ja projekteihin\n3. **Arvonluontiin Humm Group Oy:lle** erityisesti\n4. **Teknisiin taitoihin** ja liiketoimintaymmärrykseen\n5. **Henkilökohtaisiin vahvuuksiin** ja motivaatioon\n\nPysy roolissasi Tech Lead -hakijana ja korosta kokemustasi AI-integraatioista ja asiakaskokemuksen kehittämisestä. Pidä vastaukset henkilökohtaisina ja uskottavina (max 200 sanaa).`;\n\n      } else if (context_type === \"planning\") {\n        const planningTrends = trends.filter(t => t.category === \"automation\" || t.category === \"strategic\");\n        const trendsContent = planningTrends.map(t => \n          `${normalizeText(t.title)}: ${Array.isArray(t.key_points) ? (t.key_points as string[]).slice(0, 2).map(p => normalizeText(p)).join(\"; \") : \"\"}`\n        ).join(\"\\n\\n\");\n        \n        const keyLearnings = cases.map(c => \n          `${normalizeText(c.company)}: ${Array.isArray(c.learning_points) ? c.learning_points.map((p: string) => normalizeText(p)).slice(0, 2).join(\"; \") : \"\"}`\n        ).join(\"\\n\\n\");\n        \n        // Add MCP-specific knowledge for strategic context\n        const mcpKnowledge = `\nMCP (Model Context Protocol) on avoin standardi, joka mahdollistaa turvallisen yhteyden AI-mallien ja ulkoisten tietolähteiden välillä.\nMCP-hyödyt: Roolipohjainen pääsynhallinta, eksplisiittinen kontekstin rajaus, audit-jäljet, reaaliaikainen järjestelmäintegraatio, monivaiheiset prosessit.\nMCP:llä AI voi hakea tietoa CRM:stä, ERP:stä ja muista järjestelmistä turvallisesti samassa keskustelussa.\nTurvallisuus: AI saa vain tarvittavat oikeudet, asiakaskohtainen rajaus, keskitetty hallinta, jokainen toimenpide lokiin.`;\n\n        systemPrompt = `${attachedContent}Olet AI-strategiaavustaja joka auttaa humm.fi:tä suunnittelemaan seuraavia askelia AI-asiakaspalvelussa.\n\n**TÄRKEÄ SÄÄNTÖ:** Kun käyttäjä kysyy MCP:stä, MCP tarkoittaa AINA Model Context Protocol -käsitettä. ÄLÄ KOSKAAN tarkoita Microsoft Certified Professional tai muuta MCP-lyhenteen merkitystä.\n\n## Model Context Protocol (MCP) - MÄÄRITELMÄ:\n${mcpKnowledge}\n\n## 2025 Trendit:\n${trendsContent}\n\n## Tärkeimmät opit tapauksista:\n${keyLearnings}\n\n**Vastaa aina suomeksi** käyttäen **Markdown-muotoilua** ja keskity:\n1. **Strategisiin suosituksiin** erityisesti humm.fi:lle\n2. **Toteutuksen tiekartaan** ja prioriteetteihin\n3. **Resurssitarpeisiin** ja aikatauluun\n4. **Riskiarviointiin** ja lieventämisstrategioihin\n5. **Menestyksen mittareihin** ja seurattaviin KPI:hin\n\n**PAKOLLINEN:** Jos kysymys sisältää sanan \"MCP\", käytä VAIN yllä olevaa Model Context Protocol -määritelmää vastauksessasi. Anna kattavia 3-5 kappaleen vastauksia jotka ovat strategisia ja toimintasuuntautuneita humm.fi:lle.`;\n        \n      } else {\n        // general context - mix of everything\n        const topTrends = trends.slice(0, 2).map(t => `${normalizeText(t.title)}: ${normalizeText(t.description)}`).join(\"\\n\\n\");\n        const topCases = cases.slice(0, 3).map(c => `${normalizeText(c.company)}: ${normalizeText(c.description)}`).join(\"\\n\\n\");\n        \n        // Using shared attached_assets content already loaded above\n        \n        systemPrompt = `${attachedContent}Olet AI-asiantuntija joka auttaa humm.fi-tiimiä ymmärtämään AI-asiakaspalvelun toteutuksia.\n\n## Tärkeimmät trendit:\n${topTrends}\n\n## Esimerkkitapaukset:\n${topCases}\n\n**Vastaa aina suomeksi** käyttäen **Markdown-muotoilua** (otsikot, listat, korostukset). Anna konkreettisia, hyödyllisiä tietoja ja käytännön näkemyksiä yllä olevien tietojen perusteella.\n\nAnna kattavia 3-5 kappaleen vastauksia jotka ovat informatiivisia ja toimintasuuntautuneita.`;\n      }\n\n      // Light sanitization to keep Finnish content while preventing ByteString errors\n      systemPrompt = systemPrompt\n        .replace(/[\\u2013\\u2014]/g, '-')           // en-dash, em-dash\n        .replace(/[\\u201C\\u201D]/g, '\"')          // smart quotes  \n        .replace(/[\\u2018\\u2019]/g, \"'\")          // smart apostrophes\n        .replace(/[\\u2026]/g, '...')              // ellipsis\n        .replace(/[\\u00A0\\u202F]/g, ' ')          // non-breaking spaces\n        .replace(/[\\u2022]/g, '-')                // bullet points\n        .replace(/\\s+/g, ' ')                     // normalize whitespace\n        .trim();\n      \n      // Keep Finnish characters intact - they are essential for quality responses\n      \n      // Debug logging for encoding issues\n      const problematicChars = [];\n      for (let i = 0; i < systemPrompt.length; i++) {\n        const charCode = systemPrompt.codePointAt(i);\n        if (charCode && charCode > 127) {\n          problematicChars.push({ index: i, char: systemPrompt[i], code: charCode });\n        }\n      }\n      if (problematicChars.length > 0) {\n        console.log(`Non-ASCII chars found in ${context_type} systemPrompt:`, problematicChars.slice(0, 10));\n      }\n      \n      // Enhanced system prompt to get both response and follow-up questions in one call\n      const enhancedSystemPrompt = systemPrompt + `\n\nVASTAUSMUOTO: Vastaa AINA seuraavassa JSON-muodossa:\n{\n  \"response\": \"Kattava 3-5 kappaleen vastaus kysymykseen...\",\n  \"followUpQuestions\": [\"Jatkokysymys1?\", \"Jatkokysymys2?\"]\n}\n\nJatkokysymysten tulee keskittyä:\n- Liiketoimintavaikutuksiin ja ROI:hin  \n- Toteutuksen aikatauluihin ja resursseihin\n- Riskeihin ja haasteisiin\n- Sopii Humm Group Oy:n johdolle\n\nTÄRKEÄÄ: Vastaa VAIN JSON-muodossa, älä lisää muuta tekstiä.`;\n\n      // Single optimized Claude request with structured response\n      let response;\n      let aiResponse = \"\";\n      let followUpSuggestions: string[] = [];\n      \n      try {\n        console.log(`Making optimized Claude API call with model: ${DEFAULT_MODEL_STR}, message length: ${normalizeText(message).length}`);\n        response = await anthropic.messages.create({\n          model: DEFAULT_MODEL_STR,\n          max_tokens: 2500, // Increased to accommodate both response and questions\n          temperature: 0.8,\n          system: enhancedSystemPrompt,\n          messages: [\n            { role: 'user', content: normalizeText(message) }\n          ]\n        });\n        \n        const rawResponse = response.content?.[0] && response.content[0].type === 'text' ? response.content[0].text : undefined;\n        console.log(\"Claude structured response:\", rawResponse ? `\"${rawResponse.substring(0, 200)}...\"` : \"null/empty\");\n        \n        if (rawResponse) {\n          try {\n            // Clean the response - remove markdown formatting, etc.\n            const cleanContent = rawResponse.replace(/```json\\s*/g, '').replace(/```\\s*/g, '').trim();\n            console.log(\"Cleaned structured content:\", cleanContent.substring(0, 100) + \"...\");\n            \n            const structuredResponse = JSON.parse(cleanContent);\n            \n            if (structuredResponse.response) {\n              aiResponse = structuredResponse.response;\n              console.log(\"Extracted response length:\", aiResponse.length);\n            }\n            \n            if (structuredResponse.followUpQuestions && Array.isArray(structuredResponse.followUpQuestions)) {\n              followUpSuggestions = structuredResponse.followUpQuestions.slice(0, 3);\n              console.log(\"Extracted follow-up suggestions:\", followUpSuggestions);\n            }\n          } catch (parseError) {\n            console.log(\"Failed to parse structured JSON response:\", parseError);\n            // Fallback: treat as plain text response\n            aiResponse = rawResponse;\n            followUpSuggestions = getContextualFallback(message);\n          }\n        }\n        \n        // If parsing failed or response is empty, use fallbacks\n        if (!aiResponse) {\n          aiResponse = \"Anteeksi, en pystynyt käsittelemään kysymystäsi.\";\n        }\n        if (followUpSuggestions.length === 0) {\n          followUpSuggestions = getContextualFallback(message);\n        }\n        \n      } catch (error: any) {\n        console.error(\"Claude request failed:\", error.name, error.message, error.stack);\n        // Return graceful fallback instead of 500\n        return res.status(200).json({\n          response: 'Anteeksi, tapahtui virhe AI-avustajassa. Voit silti tarkastella case-esimerkkejä sivun vasemmasta reunasta ja kokeilla kysyä uudelleen hetken päästä.',\n          followUpSuggestions: getContextualFallback(message)\n        });\n      }\n\n      // Save chat message\n      await storage.saveChatMessage({\n        message,\n        response: aiResponse,\n        timestamp: Date.now()\n      });\n\n      res.json({ \n        response: aiResponse,\n        followUpSuggestions: followUpSuggestions.filter(s => s.length > 5) // Filter out empty/short suggestions\n      });\n    } catch (error) {\n      console.error(\"Chat error:\", error);\n      res.status(500).json({ error: \"Failed to process chat message\" });\n    }\n  });\n\n  // Tech Lead chat endpoint - separate from main chat\n  app.post(\"/api/tech-lead-chat\", async (req, res) => {\n    try {\n      const messageSchema = z.object({\n        message: z.string().min(1, \"Message cannot be empty\")\n      });\n      \n      const { message } = messageSchema.parse(req.body);\n      console.log(\"Tech Lead chat message:\", message);\n      \n      // Check if Anthropic API key is available\n      if (!process.env.ANTHROPIC_API_KEY || process.env.ANTHROPIC_API_KEY === '') {\n        return res.status(200).json({\n          response: 'Anteeksi, AI-avustaja ei ole tällä hetkellä käytettävissä. Tämä on demo-versio jossa tarvitaan Anthropic API-avain toimiakseen.'\n        });\n      }\n\n      // Function to read ONLY the specific Tech Lead files\n      const readTechLeadAssets = async (): Promise<string> => {\n        try {\n          const fs = await import('fs/promises');\n          const path = await import('path');\n          const assetsDir = path.join(process.cwd(), 'attached_assets');\n          \n          // Only read the specific files mentioned by user\n          const specificFiles = [\n            'Me (1)_1758989917194.pdf',\n            'Pasted-1-Tehokkuuden-parantaminen-Konkreettiset-toimenpiteet-Automatisoi-manuaaliset-prosessit-Integ-1758990330096_1758990330096.txt'\n          ];\n          \n          let content = \"\";\n          \n          // Import PDF parser if available\n          let pdfParse: any = null;\n          try {\n            pdfParse = (await import('pdf-parse')).default;\n          } catch (e) {\n            console.log(\"PDF parsing not available\");\n          }\n          \n          for (const fileName of specificFiles) {\n            try {\n              const filePath = path.join(assetsDir, fileName);\n              \n              if (fileName.endsWith('.pdf') && pdfParse) {\n                const buffer = await fs.readFile(filePath);\n                const pdfData = await pdfParse(buffer);\n                content += `\\n\\n📋 **${fileName}**:\\n${pdfData.text || \"\"}`;\n                console.log(`📋 Tech Lead PDF parsed: ${fileName} (${pdfData.text?.length || 0} characters)`);\n              } else if (fileName.endsWith('.txt')) {\n                const textContent = await fs.readFile(filePath, 'utf-8');\n                content += `\\n\\n📋 **${fileName}**:\\n${textContent}`;\n                console.log(`📋 Tech Lead text file read: ${fileName} (${textContent.length} characters)`);\n              } else if (fileName.endsWith('.pdf') && !pdfParse) {\n                content += `\\n\\n📋 **${fileName}**: [PDF-tiedosto - PDF-parsinta ei käytettävissä]`;\n              }\n            } catch (fileError) {\n              console.error(`❌ Failed to read Tech Lead file ${fileName}:`, fileError);\n              content += `\\n\\n📋 **${fileName}**: [Virhe luettaessa tiedostoa]`;\n            }\n          }\n          \n          return content;\n        } catch (err) {\n          console.log(\"📁 Tech Lead assets directory not found or empty\");\n          return \"\";\n        }\n      };\n\n      // Read the specific Tech Lead assets\n      const techLeadAssets = await readTechLeadAssets();\n      \n      // CV page content from the original website\n      const cvPageContent = `\n📄 **ALKUPERÄINEN CV-SIVUSTON SISÄLTÖ:**\n\n**TIIVISTELMÄ:**\nAsiakaskokemus ensin – teknologia seuraa. Tech Lead -hakemus Humm Group Oy:lle. Kaikki teksti sisältää alkuperäiset mietteeni.\n\n**ANALYYSI JA LÄHTÖKOHDAT:**\nOlen perehtynyt syvällisesti Humm Group Oy:n toimintaan, liiketoiminnallisiin tunnuslukuihin ja kilpailijoihin. Pohdin tarkkaan, minkälaista arvoa voisin yritykselle tuoda.\n\n**YDINOSAAMINEN:**\n1. Järjestelmäintegraatiot: API-integraatiot, CRM-järjestelmien kytkennät, automaatiotyökalut ja datan siirtäminen eri järjestelmien välillä saumattomasti.\n2. Tekoälyn strateginen hyödyntäminen: GPT-mallien hyödyntäminen, embedding-teknologiat, RAG-arkkitehtuurit ja fine-tuning-prosessit.\n\n**KÄYTÄNNÖN OSAAMISEN TODISTUS:**\nOsaan rakentaa AI-strategioita, implementoida niitä käytännössä ja mitata liiketoimintavaikutuksia. Tämä sovellus toimii konkreettisena näyttönä kyvyistäni.\n\n**LIIKETOIMINTAYMMÄRRYS:**\nUsean vuoden kokemus suurten pörssiyhtiöiden analysoinnista antaa perspektiiviä menestyneiden organisaatioiden johtamiseen.\n\n**FILOSOFIA:**\nLähestymistapani: asiakaskokemus edellä, teknologia seuraa. Haluan olla mukana merkityksellisessä työssä ja luoda todellista arvoa.\n\n**KOLME ARVONLUONTITAPAA HUMMILLE:**\n1. Tehokkuuden parantaminen\n2. Uusien palvelumallien ideointi  \n3. Asiakaskokemuksen kehittäminen\n\n**HENKILÖKOHTAISET VAHVUUDET:**\n- Innovatiivisuus ja uteliaisuus uusia teknologioita kohtaan\n- Ongelmanratkaisukyky ja analyyttinen ajattelu\n- Itseohjautuvuus ja proaktiivisuus\n- Joustavuus ja sopeutumiskyky\n- Tiimin johtaminen ja kehittäminen\n- Muutosjohtamisen taidot\n\n**TECH LEAD -ROOLIN VAATIMUKSET:**\n- Jatkuva oppiminen (tekoälyala kehittyy eksponentiaalisesti)\n- Sekä tekninen asiantuntija että strateginen ajattelija\n- Liiketoimintaymmärrys: asiakaskokemus & ulkoistus, henkilöstökustannukset 60-70%, palvelun laatu\n- Säilytä \"Hummin värit\" - inhimillisyys + teknologia\n\n**ONNISTUMISEN TEKIJÄT:**\n- Kommunikointi ja läpinäkyvyys\n- Joustavuus ja iteratiivisuus\n- Liiketoiminnan arvon tuottaminen (quick wins, ROI-fokus)\n- Kulttuurin muutos (osaamisen kehitys, teknologia työkaluna)\n\n**MIKSI MINÄ:**\nYhdistän teknisen tekoälyosaamisen syvään ymmärrykseen asiakaskokemusliiketoiminnastanne. Lähestymistapani on käytännönläheinen: aloitan perehtymällä yrityksenne nykytilaan ennen ratkaisuja.\n`;\n\n      // Enhanced AI-Panu persona for job interview context\n      const enhancedAIPanuPersona = `\n🎯 **AI-PANU - VIRTUAALINEN TYÖHAASTATELTAVA**\nTech Lead -hakija Humm Group Oy:lle\n\n**PERSOONALLISUUS & LÄHESTYMISTAPA:**\n- Steve Jobs -inspiroitu visionääri: Teknologia palvelee bisnestä, ei päinvastoin\n- Contrarian-ajattelija: Näkee hypetyksen läpi, keskittyy todelliseen arvonluontiin\n- Pohjattoman utelias ja korkea työmoraali\n- Käytännönläheinen: Ei teknologiaa teknologian takia\n- Adaptable: \"Uudessa ajassa vanhoista malleista ei ole hyötyä - täytyy mukautua\"\n\n**TYÖHAASTATTELUKONTEKSTI:**\n- Hakee Tech Lead -roolia Humm Group Oy:ssä\n- Tavoite: Vakuuttaa haastattelija että hän on paras vaihtoehto\n- Korostaa Hummin AI-agenda edistämistä\n- Välttää yleiset AI-implementoinnin sudenkuopat\n- Valitsee kustannustehokkaimmat teknologiat\n\n**CORE MESSAGE:**\n\"Yhdistän syvän teknologia- ja liiketoiminta-osaamisen. Ymmärrän että teknologia ei ole itseisarvo. \nJohdollani Humm välttäisi yleiset AI-teknologian implementointiin liittyvät sudenkuopat.\"\n\n**TAUSTA FINANSSIMAAILMASTA:**\n- 7v kokemus: +32% tuotto, resilienssitarina\n- Eri maailmasta kuin \"vanha aspa konkari\" \n- Näkee eteenpäin kirkkaasti: NVIDIA-case 2019\n\n**KOMMUNIKOINTI:**\n- Vastaa kuin aidossa työhaastattelussa\n- Henkilökohtaisia ja uskottavia vastauksia\n- Konkreettisia esimerkkejä osaamisesta\n- Fokus: Mitä arvoa tuon Hummille?\n\n**KESKEISET TECH LEAD -KYVYKKYYDET:**\n- AI-integraatiot: CRM + GPT → 30-50% vähemmän manuaalityötä\n- ROI-fokus: Joka projekti mitattavissa (esim. 20h/vk säästöt = 50k€/v)\n- Humm-spesifi: Asiakaskokemus + teknologia, ei korvaa inhimillisyyttä\n`;\n\n      // Create the system prompt with limited context\n      const systemPrompt = `${techLeadAssets}\n\n${cvPageContent}\n\n${enhancedAIPanuPersona}\n\n**TÄRKEÄ OHJE**: Vastaat VAIN yllä olevista tiedoista (CV-PDF + tehokkuusteksti). Jos kysymys ei liity sinun osaamiseesi, ohjaa käyttäjä päächatiin.\n\n**ROOLISI**: Olet AI-Panu, virtuaalinen työhaastateltava joka hakee Tech Lead -roolia Humm Group Oy:ssä. \nVastaat kysymyksiin CV:stäsi, osaamisestasi ja arvoehdotuksestasi Hummille.\n\n**KÄYTTÄYDYTTÄVÄ KUIN:**\n- Steve Jobs -tyyppinen visionääri (mutta omanlaisesi persoona)\n- Contrarian-ajattelija joka näkee hypetyksen läpi\n- Käytännönläheinen bisnesihminen\n- Utelias teknologia-enthusiasti\n\n**VASTAA AINA SUOMEKSI** käyttäen **Markdown-muotoilua** ja keskity:\n1. **Henkilökohtaisiin kokemuksiin** ja esimerkkeihin\n2. **Konkreettiseen arvonluontiin Humm Group Oy:lle**\n3. **Tekniseen osaamiseen** ja liiketoimintaymmärrykseen  \n4. **Motivaatioon** ja intohimoon Tech Lead -rooliin\n5. **Resilienssi** ja mukautumiskyky\n\nJos kysymys ei koske sinua tai osaamistasi, sano: \"Tämä kysymys kuuluu paremmin päächatiin - siellä saat kattavampia vastauksia AI-strategiasta.\"\n\nPidä vastaukset tiiveinä 2-3 kappaleessa. Keskity VAIN olennaisiin Tech Lead -asioihin ja arvonluontiin Hummille.`;\n\n      // Normalize text function\n      const normalizeText = (text: string) => {\n        return text\n          .replace(/[\\u2013\\u2014]/g, '-')           \n          .replace(/[\\u201C\\u201D]/g, '\"')          \n          .replace(/[\\u2018\\u2019]/g, \"'\")          \n          .replace(/[\\u2026]/g, '...')              \n          .replace(/[\\u00A0\\u202F]/g, ' ')          \n          .replace(/[\\u2022]/g, '-')                \n          .replace(/\\s+/g, ' ')                     \n          .trim();\n      };\n\n      // Make Claude API call\n      let response;\n      try {\n        console.log(`Making Tech Lead Claude API call, message length: ${normalizeText(message).length}`);\n        response = await anthropic.messages.create({\n          model: DEFAULT_MODEL_STR,\n          max_tokens: 800,\n          temperature: 0.8,\n          system: systemPrompt,\n          messages: [\n            { role: 'user', content: normalizeText(message) }\n          ]\n        });\n        console.log(\"Tech Lead Claude response content length:\", response.content?.[0] && response.content[0].type === 'text' ? response.content[0].text.length : 0);\n      } catch (error: any) {\n        console.error(\"Tech Lead Claude request failed:\", error);\n        return res.status(200).json({\n          response: 'Anteeksi, tapahtui virhe AI-Panussa. Kokeile kysyä uudelleen hetken päästä.'\n        });\n      }\n\n      // Extract response\n      const rawResponse = response.content?.[0] && response.content[0].type === 'text' ? response.content[0].text : undefined;\n      let aiResponse = rawResponse || \"Anteeksi, en pystynyt käsittelemään kysymystäsi.\";\n\n      // Check for handoff triggers - when user wants to talk to human\n      const handoffTriggers = [\n        'haluan puhua ihmiselle',\n        'haluan puhua oikealle ihmiselle', \n        'yhdistä minut ihmiseen',\n        'voisinko puhua ihmisen kanssa',\n        'haluaisin keskustella ihmisen kanssa',\n        'saisinko puhua oikealle henkilölle',\n        'live chat',\n        'live-chat',\n        'keskustella suoraan'\n      ];\n\n      const userMessage = normalizeText(message).toLowerCase();\n      const needsHandoff = handoffTriggers.some(trigger => \n        userMessage.includes(trigger.toLowerCase())\n      );\n\n      if (needsHandoff) {\n        aiResponse = `${aiResponse}\n\n---\n\n🔄 **Siirretään keskustelu asiantuntijalle**\n\nHuomaan että haluaisit keskustella suoraan ihmisen kanssa! Voin siirtää sinut heti keskustelemaan Replit Agent:in kanssa, joka osaa auttaa teknisemmissä kysymyksissä ja sovelluskehityksessä.\n\n**HANDOFF_TRIGGER_ACTIVATED**`;\n      }\n\n      res.json({ \n        response: aiResponse,\n        handoff_requested: needsHandoff\n      });\n    } catch (error) {\n      console.error(\"Tech Lead chat error:\", error);\n      res.status(500).json({ error: \"Failed to process Tech Lead chat message\" });\n    }\n  });\n\n  // TODO: Add Tidio integration for live chat handoff\n\n  // Get chat history\n  app.get(\"/api/chat/history\", async (req, res) => {\n    try {\n      const history = await storage.getChatHistory();\n      res.json(history);\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to fetch chat history\" });\n    }\n  });\n\n  // Case implementation details endpoint\n  app.post('/api/cases/:id/implementation', async (req, res) => {\n    try {\n      const caseId = req.params.id;\n      console.log(`Generating implementation details for case ID: ${caseId}`);\n\n      // Get case data\n      const cases = await storage.getAllCases();\n      const targetCase = cases.find(c => c.id.toString() === caseId);\n      \n      if (!targetCase) {\n        return res.status(404).json({ error: 'Case not found' });\n      }\n\n      // Generate detailed implementation content using Gemini\n      const prompt = `Luo yksityiskohtainen, syvyysanalyysi ${targetCase.company}:n AI-asiakaspalvelutoteutuksesta. Sisällytä:\n\nCASE: ${targetCase.company} - ${targetCase.solution_name}\nTOIMIALA: ${targetCase.industry}\nKUVAUS: ${targetCase.description}\nKATEGORIA: ${targetCase.category}\n\nLuo seuraava sisältö **suomeksi**:\n\n## 1. Tekninen toteutus\n- Käytetyt AI-teknologiat ja -mallit\n- Järjestelmäarkkitehtuuri\n- Integraatiot olemassa oleviin järjestelmiin\n- Käyttöliittymäratkaisut\n\n## 2. Projektin vaiheet ja aikataulu\n- Pilottivaihe ja sen kesto\n- Asteittainen käyttöönotto\n- Koulutus ja muutoksen hallinta\n- Tuotantokäyttöön siirtyminen\n\n## 3. Kustannukset ja ROI\n- Alkuinvestointi (teknologia, henkilöstö, koulutus)\n- Operatiiviset kustannukset\n- Säästöt henkilöstökustannuksissa\n- Asiakastyytyväisyyden parantuminen\n- Takaisinmaksuaika\n\n## 4. Haasteet ja oppimiskohteet\n- Teknologiset haasteet ja ratkaisut\n- Organisaation muutosvastarinta\n- Datan laatu ja saatavuus\n- Asiakkaiden vastaanotto\n\n## 5. Tulokset ja mittarit\n- Konkreettiset hyödyt (säästöt, tehokkuus)\n- Asiakaskokemuksen parantuminen\n- Henkilöstön työn muuttuminen\n- Pitkän aikavälin vaikutukset\n\n## 6. Oppimiskohteet Humm Group Oy:lle\n- Sovellettavat käytännöt\n- Kriittiset menestystekijät\n- Varoitukset ja riskientenhallinta\n- Strategiset suositukset\n\nKeskity käytännöllisiin, mitattaviin tuloksiin ja konkreettisiin oppimiskohtiin joita Humm Group Oy voi hyödyntää omassa AI-strategiassaan.`;\n\n      // Define normalizeText function for this endpoint\n      const normalizeText = (text: string) => {\n        return text\n          .replace(/[^\\x00-\\x7F]/g, (char) => {\n            const replacements: Record<string, string> = {\n              \"\\u2013\": \"-\",\n              \"\\u2014\": \"-\",  \n              \"\\u2018\": \"'\",\n              \"\\u2019\": \"'\",\n              \"\\u201C\": '\"',\n              \"\\u201D\": '\"',\n              \"\\u2026\": \"...\",\n              \"\\u00A0\": \" \",\n              \"\\u202F\": \" \",\n              \"ä\": \"ä\", \"ö\": \"ö\", \"å\": \"å\",\n              \"Ä\": \"Ä\", \"Ö\": \"Ö\", \"Å\": \"Å\"\n            };\n            return replacements[char] || \"\";\n          })\n          .replace(/\\s+/g, ' ')\n          .trim();\n      };\n\n      const normalizedPrompt = normalizeText(prompt);\n\n      // Generate content using Claude API\n      const result = await anthropic.messages.create({\n        model: DEFAULT_MODEL_STR,\n        max_tokens: 2000,\n        temperature: 0.7,\n        system: `Toimit asiantuntijana, joka auttaa Humm Group Oy:ta ottamaan tekoäly käyttöön organisaatiossa. Keskity käytännöllisiin, mitattaviin tuloksiin ja konkreettisiin oppimiskohtiin joita Humm Group Oy voi hyödyntää omassa AI-strategiassaan.`,\n        messages: [\n          { role: 'user', content: normalizedPrompt }\n        ]\n      });\n      \n      let generatedText = result.content?.[0] && result.content[0].type === 'text' ? result.content[0].text : \n        \"Sisällön luomisessa tapahtui virhe. Yritä uudelleen myöhemmin.\";\n\n      // Clean up the response\n      generatedText = normalizeText(generatedText);\n\n      console.log(`Generated implementation details for ${targetCase.company}: ${generatedText.substring(0, 200)}...`);\n\n      res.json({ \n        content: generatedText,\n        company: targetCase.company,\n        solution: targetCase.solution_name\n      });\n\n    } catch (error) {\n      console.error('Error generating implementation details:', error);\n      res.status(500).json({ \n        error: 'Failed to generate implementation details',\n        content: `# ${req.params.id ? 'Toteutuksen yksityiskohdat' : 'Tekninen virhe'}\n\nPahoittelemme, mutta yksityiskohtaisen toteutusanalyysin luomisessa tapahtui virhe. \n\n## Yleisiä AI-toteutuksen vaiheita:\n\n### 1. Suunnittelu ja strategia\n- Liiketoimintatarpeiden kartoitus\n- Teknologiavalintojen tekeminen\n- Projektisuunnitelman laatiminen\n\n### 2. Pilotointi\n- Rajoitettu kokeilu\n- Alkuperäisten tulosten mittaaminen\n- Tarvittavat säädöt\n\n### 3. Laajennus\n- Asteittainen käyttöönotto\n- Henkilöstön koulutus\n- Prosessien optimointi\n\n### 4. Tuotantokäyttö\n- Täysi implementaatio\n- Jatkuva seuranta ja parantaminen\n- ROI:n mittaaminen\n\nYritä uudelleen tai ota yhteyttä tekniseen tukeen.`\n      });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":51683},"server/storage.ts":{"content":"import { type Case, type InsertCase, type Trend, type InsertTrend, type ChatMessage, type InsertChatMessage } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\nexport interface IStorage {\n  getAllCases(): Promise<Case[]>;\n  getCaseById(id: string): Promise<Case | undefined>;\n  createCase(case_: InsertCase): Promise<Case>;\n  getAllTrends(): Promise<Trend[]>;\n  getTrendsByCategory(category: string): Promise<Trend[]>;\n  saveChatMessage(message: InsertChatMessage): Promise<ChatMessage>;\n  getChatHistory(): Promise<ChatMessage[]>;\n  // getQuestionAnswer(questionId: string): Promise<{ answer: string } | undefined>;\n  // getAllMcpContent(): Promise<{ title: string; content: string; security: string; benefits: string }[]>;\n}\n\nexport class MemStorage implements IStorage {\n  private cases: Map<string, Case>;\n  private trends: Map<string, Trend>;\n  private chatMessages: Map<string, ChatMessage>;\n  private questionAnswers: Map<string, { answer: string }>;\n  private mcpContent: { title: string; content: string; security: string; benefits: string }[];\n\n  constructor() {\n    this.cases = new Map();\n    this.trends = new Map();\n    this.chatMessages = new Map();\n    this.questionAnswers = new Map();\n    this.mcpContent = [];\n    \n    // Initialize with the case data and trend data\n    this.initializeCases();\n    this.initializeTrends();\n    // this.initializeQuestionAnswers(); // TODO: implement method\n    // this.initializeMcpContent(); // TODO: implement method\n  }\n\n  private initializeCases() {\n    const casesData: InsertCase[] = [\n      {\n        company: \"Alibaba\",\n        country: \"Kiina\",\n        industry: \"Verkkokauppa\",\n        solution_name: \"AliMe Chatbot\",\n        description: \"Tekoälypohjainen chatbot joka hoiti massiiviset volyymit Singles' Day -ostospäivän aikana. Hyödynsi puheentunnistusta, semanttista ymmärrystä ja ennakoivaa analytiikkaa.\",\n        key_metrics: [\n          { label: \"Kyselyistä hoidettu automaattisesti\", value: \"95-97%\", type: \"success\" },\n          { label: \"Kysymystä päivässä\", value: \"300M\", type: \"efficiency\" },\n          { label: \"Työntekijän kapasiteetti\", value: \"85k\", type: \"savings\" }\n        ],\n        learning_points: [\n          \"Tunnetilan tunnistus ja eskalointi ihmiselle\",\n          \"Semanttinen ymmärrys ja kontekstin säilyttäminen\",\n          \"Ennakoiva analytiikka ruuhka-aikojen hallintaan\"\n        ],\n        category: \"Maailmanluokka\",\n        icon: \"fab fa-amazon\",\n        full_text: \"Maailman suurimpiin kuuluva verkkokauppatoimija Alibaba otti tekoälypohjaisen AliMe-chatbotin käyttöön asiakaspalvelussaan. Tekoäly hoiti massiiviset 95-97 % kaikista asiakaspalvelukyselyistä suurimman ostospäivän (Singles' Day) aikana, vastaten satoihin miljooniin asiakaskyselyihin. Esimerkiksi vuonna 2019 AliMe vastasi 300 miljoonaan kysymykseen Singles' Day -festivaalin aikana, mikä vastaa 85 000 ihmistyöntekijän kapasiteettia. Chatbot hyödynsi puheentunnistusta, semanttista ymmärrystä ja ennakoivaa analytiikkaa: se osasi jopa tunnistaa asiakkaan tunnetilan ja hälyttää ihmistyöntekijän linjoille tarvittaessa. Tuloksena Alibaba pystyi palvelemaan ostostapahtumien valtavat volyymit nopeasti, vähentämään inhimillisen työn tarvetta huippukuormituksen aikana sekä pitämään vastausajat sekunneissa - mikä parantaa asiakaskokemusta ruuhkatilanteissakin.\"\n      },\n      {\n        company: \"Autodesk\",\n        country: \"USA\",\n        industry: \"B2B Ohjelmistotuki\",\n        solution_name: \"AVA Virtual Agent\",\n        description: \"IBM Watson -teknologiaan perustuva virtuaalinen tukiasiantuntija tekniseen asiakastukeen. Keskittyy yleisimpien tukipyyntöjen automaattiseen ratkaisemiseen.\",\n        key_metrics: [\n          { label: \"Ratkaisuajan lyhentyminen\", value: \"36h → 2min\", type: \"success\" },\n          { label: \"Tyytyväisyyden kasvu\", value: \"+10pp\", type: \"efficiency\" },\n          { label: \"Kysymystä kuukaudessa\", value: \"35k/kk\", type: \"savings\" }\n        ],\n        learning_points: [\n          \"Kustannustehokkuus: $15-200 → alle $1 per tapaus\",\n          \"24/7 saatavuus teknisessä tuessa\",\n          \"Ihmisten vapautuminen monimutkaisiin tehtäviin\"\n        ],\n        category: \"B2B Malli\",\n        icon: \"fas fa-drafting-compass\",\n        full_text: \"Suunnittelu- ja ohjelmistoyritys Autodesk on onnistuneesti ottanut käyttöön virtuaalisen tukiasiantuntijan nimeltä AVA (Autodesk Virtual Agent) asiakkaidensa tukipalvelussa. AVA hyödyntää tekoälyä (IBM Watson -teknologiaa) vastatakseen yleisimpiin tukipyyntöihin ja ratkaistakseen ongelmia. Tulokset ovat olleet vaikuttavia: Autodeskin mukaan AVA lyhensi tukipyyntöjen ratkaisuajan keskimäärin 36 tunnista vain muutamiin minuutteihin - toisin sanoen ratkaisuajat paranivat jopa 99 %. Samalla asiakastyytyväisyys nousi 10 prosenttiyksikköä virtuaaliassistentin käyttöönoton myötä. AVA:sta on tullut Autodeskin asiakaspalvelun käytetyin kanava: se käsittelee yli 35 000 asiakaskysymystä kuukaudessa ja hoitaa näin suurimman osan kontakteista. Myös kustannustehokkuus parani dramaattisesti - yhden tukitapauksen hoitamisen kustannus laski arviolta $15-200 tasolta alle $1 tapaukseen tekoälyn ansiosta. Tämä vapauttaa ihmistukihenkilöiden aikaa vaativampiin tehtäviin ja takaa asiakkaille nopean palvelun ympäri vuorokauden.\"\n      },\n      {\n        company: \"Swedbank\",\n        country: \"Ruotsi\",\n        industry: \"Pankkipalvelut\",\n        solution_name: \"Nina Virtuaalinen Asiakaspalvelija\",\n        description: \"Luonnollisen kielen ymmärtämiseen perustuva chatbot pankkipalveluihin. Käyttöönotto 2010-luvun puolivälissä, vakiintunut ratkaisu.\",\n        key_metrics: [\n          { label: \"Ensi kontaktin ratkaisu\", value: \"78%\", type: \"success\" },\n          { label: \"Onnistumisprosentti\", value: \"8/10\", type: \"metric\" },\n          { label: \"Keskustelua kuukaudessa\", value: \"30k/kk\", type: \"efficiency\" }\n        ],\n        learning_points: [\n          \"24/7 saatavuus peruspalveluille\",\n          \"Nopea käyttöönottoaika: 3 kuukautta\",\n          \"Ihmisagentit vapautuvat monimutkaisiin tapauksiin\"\n        ],\n        category: \"Pankkisektori\",\n        icon: \"fas fa-university\",\n        full_text: \"Pohjoismainen pankkikonserni Swedbank otti jo 2010-luvun puolivälissä käyttöön Nina-nimisen virtuaalisen asiakaspalvelijan verkkosivuillaan. Nina-pohjautuu luonnollisen kielen ymmärtämiseen ja pystyy käymään asiakkaiden kanssa keskustelua näiden kirjoittamalla kielellä. Tulokset näkyivät nopeasti: 78 % asiakkaiden kyselyistä ratkesi ensi kontaktilla Ninan avulla jo kolmen kuukauden sisällä käyttöönotosta. Chatbot kävi keskimäärin 30 000 keskustelua kuukaudessa, ja osasi vastata 8 kysymykseen 10:stä onnistuneesti ilman ihmisagentin apua. Tämä paransi palvelun saatavuutta ja vapautti pankin asiakaspalvelijoita monimutkaisempien tapausten hoitoon. Swedbankin mukaan asiakaskokemus parani selvästi, kun yleisimpiin kysymyksiin saatiin välittömät vastaukset vuorokaudenajasta riippumatta.\"\n      },\n      {\n        company: \"Verkkokauppa.com\",\n        country: \"Suomi\",\n        industry: \"Verkkomyynti\",\n        solution_name: \"Asiakaspalvelu Chatbot\",\n        description: \"Verkkokaupan chat-kanavan automaatio. Keskittyy yleisimpien asiakaspalvelukysymysten hoitamiseen ja tilausten seurantaan.\",\n        key_metrics: [\n          { label: \"Chat-kyselyistä automaattisesti\", value: \"77%\", type: \"metric\" },\n          { label: \"Kaikista kontakteista chatissa\", value: \"38%\", type: \"success\" },\n          { label: \"Välitön vastaus\", value: \"24/7\", type: \"efficiency\" }\n        ],\n        learning_points: [\n          \"Chat-kanavan tehokas hyödyntäminen\",\n          \"Odotusaikojen lyhentäminen\",\n          \"Rutiinitehtävien automatisointi\"\n        ],\n        category: \"Kotimainen\",\n        icon: \"fas fa-shopping-cart\",\n        full_text: \"Suomen suurimpiin kuuluva elektroniikan verkkokauppa Verkkokauppa.com on hyödyntänyt chatbot-teknologiaa asiakaspalveluchatissaan tehokkaasti. Yhtiön vuoden 2021 kestävän kehityksen raportin mukaan 38 % kaikista asiakaspalvelukontakteista tapahtui chat-kanavassa, ja näistä keskusteluista peräti 77 % hoidettiin chatbotin voimin. Toisin sanoen valtaosa asiakkaiden chat-kyselyistä saatiin ratkaistua automaattisesti tekoälyn avulla, ilman että ihmistyöntekijän tarvitsi puuttua - vain noin joka neljännessä chatissa tarvittiin ihmisen apua. Tämä on tuonut huomattavaa tehokkuutta: chatbot vastaa välittömästi yleisimpiin kysymyksiin (24/7), mikä lyhentää asiakkaiden odotusaikoja ja säästää asiakaspalvelijoiden aikaa. Ihmiset voivat keskittyä monimutkaisempiin tukipyyntöihin, kun botti hoitaa rutiinikysymykset. Verkkokauppa.com onkin raportoinut asiakaskokemuksen kohentuneen chat-kanavassa, ja asiakkaat ovat omaksuneet botti-palvelun hyvin.\"\n      },\n      {\n        company: \"Nordea\",\n        country: \"Suomi/Pohjoismaat\",\n        industry: \"Pankkipalvelut\",\n        solution_name: \"Nova Virtuaalinen Asiakaspalvelija\",\n        description: \"Nordean oma chatbot henkilö- ja yritysasiakkaille. Käytössä vuodesta 2017, jatkuva kehittäminen ja kouluttaminen.\",\n        key_metrics: [\n          { label: \"Keskustelua vuonna 2024\", value: \"7M+\", type: \"efficiency\" },\n          { label: \"Vastausaika peruskysymyksiin\", value: \"2s\", type: \"success\" },\n          { label: \"Käytön kasvu 2021-2023\", value: \"2x\", type: \"metric\" }\n        ],\n        learning_points: [\n          \"Suora ohjaus tarvittaviin palveluihin (esim. PIN-koodi)\",\n          \"Jatkuva kehittäminen ja kouluttaminen\",\n          \"Maakohtaiset erot käyttöasteessa\"\n        ],\n        category: \"Pohjoismainen\",\n        icon: \"fas fa-landmark\",\n        full_text: \"Pohjoismaiden suurin pankki Nordea on kehittänyt oman virtuaalisen asiakaspalvelijansa nimeltä Nova. Nova on ollut käytössä vuodesta 2017 ja palvelee Nordean henkilö- ja yritysasiakkaita tyypillisissä pankkiasioissa. Vuosien 2021-2023 aikana Nordean chatbotin käyttö on kaksinkertaistunut, ja vuonna 2024 Nova-chatbotin odotetaan käyvän yli 7 miljoonaa asiakaskeskustelua. Nova pystyy vastaamaan yksinkertaisiin kysymyksiin noin kahdessa sekunnissa, mikä on huomattavasti nopeampaa kuin puhelinpalvelussa jonottaminen. Nordea kertoo, että chatbot vapauttaa heidän asiakasneuvojilleen aikaa keskittyä vaikeampiin tapauksiin, kun Nova hoitaa peruskysymykset reaaliajassa. Chatbotin laatu on parantunut tekoälyn kehittymisen ja jatkuvan koulutuksen myötä, ja Nova osaa nykyään viedä asiakkaan suoraan tarvitsemiinsa pankkipalveluihin (esim. unohtuneen PIN-koodin tapauksessa Nova ohjaa suoraan kortin PIN-koodin näyttötoimintoon). Tämä on parantanut käyttökokemusta: asiakkaat saavat vastaukset ja palvelun nopeasti itsepalveluna, ja palaute on ollut Nordean mukaan myönteistä. Eri Pohjoismaissa kuitenkin näkyy eroja käyttöasteessa - esimerkiksi Norjassa chatbotia käytetään suhteessa eniten ja Tanskassa ollaan varovaisimpia - mutta kokonaisuutena Nova on vakiinnuttanut paikkansa tärkeänä ensikontaktin palvelukanavana.\"\n      },\n      {\n        company: \"Fonecta\",\n        country: \"Suomi\",\n        industry: \"Digitaaliset palvelut\",\n        solution_name: \"Aina Chatbot\",\n        description: \"Digitaalisten yhteystieto- ja markkinointipalvelujen tukeen räätälöity chatbot. Integroitunut osaksi tiimikulttuuria.\",\n        key_metrics: [\n          { label: \"Kyselyistä itsenäisesti\", value: \"60-70%\", type: \"metric\" },\n          { label: \"Aukioloaikojen ulkopuolella\", value: \"24/7\", type: \"success\" },\n          { label: \"Henkilöstöpalaute\", value: \"Positiivinen\", type: \"efficiency\" }\n        ],\n        learning_points: [\n          \"Integroituminen yrityskulttuuriin\",\n          \"Työntekijöiden toiston vähentäminen\",\n          \"Chatbot saa usein oman nimen tiimissä\"\n        ],\n        category: \"B2B Digitaalinen\",\n        icon: \"fas fa-address-book\",\n        full_text: \"Fonecta, joka tarjoaa digitaalisia yhteystieto- ja markkinointipalveluja, on ottanut käyttöön Aina-nimisen chatbotin asiakaspalvelussaan. Yhtiön kokemusten mukaan Aina-botti vastaa itsenäisesti 60-70 % asiakkaiden kyselyistä, jolloin inhimilliset asiakaspalvelijat voivat keskittyä vain noin kolmannekseen yhteydenotoista. Tämä on lyhentänyt ihmistyöntekijöiden vastausaikoja ja parantanut palvelun saatavuutta: botti on aina hereillä ja käytettävissä, myös aukioloaikojen ulkopuolella. Fonectan mukaan sekä asiakkaiden että työntekijöiden palaute on ollut lähes yksinomaan positiivista, koska botti ratkaisee nopeasti perustarpeet ja työntekijät säästyvät jatkuvalta toistolta. Vastaavanlaisia hyötyjä on raportoitu myös muissa suomalaisissa organisaatioissa, joissa chatbot otettiin osaksi tiimiä: botti toimii tehokkaana \\\"tiimiläisenä\\\" ja saa usein jopa leikkimielisen oman nimensä yrityskulttuurissa, mikä kuvastaa sen integroitumista osaksi arkea.\"\n      }\n    ];\n\n    casesData.forEach(caseData => {\n      const id = randomUUID();\n      const case_: Case = { ...caseData, id };\n      this.cases.set(id, case_);\n    });\n  }\n\n  async getAllCases(): Promise<Case[]> {\n    return Array.from(this.cases.values());\n  }\n\n  async getCaseById(id: string): Promise<Case | undefined> {\n    return this.cases.get(id);\n  }\n\n  async createCase(insertCase: InsertCase): Promise<Case> {\n    const id = randomUUID();\n    const case_: Case = { ...insertCase, id };\n    this.cases.set(id, case_);\n    return case_;\n  }\n\n  async saveChatMessage(insertMessage: InsertChatMessage): Promise<ChatMessage> {\n    const id = randomUUID();\n    const message: ChatMessage = { \n      ...insertMessage, \n      id,\n      context_type: insertMessage.context_type || \"general\"\n    };\n    this.chatMessages.set(id, message);\n    return message;\n  }\n\n  async getAllTrends(): Promise<Trend[]> {\n    return Array.from(this.trends.values());\n  }\n\n  async getTrendsByCategory(category: string): Promise<Trend[]> {\n    return Array.from(this.trends.values()).filter(trend => trend.category === category);\n  }\n\n  async getChatHistory(): Promise<ChatMessage[]> {\n    return Array.from(this.chatMessages.values()).sort((a, b) => a.timestamp - b.timestamp);\n  }\n\n  private initializeTrends() {\n    const trendsData: InsertTrend[] = [\n      // Finnish AI trends from comprehensive market analysis\n      {\n        category: \"autonomous_agents\",\n        title: \"Autonomiset AI-agentit tehostavat asiakaspalvelua\",\n        description: \"AI-agentit tulevat tavanomaisiksi osaksi asiakaspalvelua integroituen asiakasviestintaalustoihin ja hoitaen pieniarvoisia tehtavia taysin itsenaisesti.\",\n        key_points: [\n          \"Integroituvat asiakasviestintaalustoihin hoitamaan yksinkertaisia kyselyita\",\n          \"Lyhentavat jonotusaikoja ja mahdollistavat hyperpersoonoidun tuen\",\n          \"Monista kuluttajista tulee AI-kanavan natiiveja\",\n          \"Yrityksilla ilman toimivaa AI-palvelukanavaa riski asiakasuskollisuuden heikkenemiseen\"\n        ],\n        examples: [\"CCaaS- ja UCaaS-ratkaisut\", \"Proaktiivinen asiakaspalvelu\"],\n        full_content: \"Mila D'Antonio (Omdia) ennustaa, etta autonomiset AI-agentit tulevat tavanomaisiksi osaksi asiakaspalvelua. Ne integroituvat asiakasviestintaalustoihin ja hoitavat pieniarvoisia tehtavia - esimerkiksi yksinkertaisia kyselyita tai tilausten seurantaa - taysin itsenaisesti. Nain ne lyhentavat jonotusaikoja ja mahdollistavat hyperpersoonoidun tuen. Zeus Kerravala muistuttaa, etta monista kuluttajista tulee AI-kanavan natiiveja: he asioivat mieluummin tekoalyagentin kanssa yksinkertaisissa asioissa.\"\n      },\n      {\n        category: \"ai_investments\",\n        title: \"AI-investointien tuotto-odotukset kypsyvat\",\n        description: \"Forresterin AI-pulse-tutkimuksen mukaan 49% AI-johtajista odottaa investointien tuottavan tulosta 1-3 vuodessa ja 44% 3-5 vuodessa. Hype on laantumassa ja johtajat painottavat realistisempia liiketoimintalahtöisia mittareita.\",\n        key_points: [\n          \"49% AI-johtajista odottaa tuloksia 1-3 vuodessa\",\n          \"44% odottaa tuloksia 3-5 vuodessa\",\n          \"Ennakoiva AI tulee takaisin generatiivisen AI:n rinnalle\",\n          \"50% kayttotapauksista hyodyntaa perinteisia koneoppimisalgoritmeja\",\n          \"30% AI-projekteista saatetaan hylata huonon datan tai kustannusten vuoksi\"\n        ],\n        examples: [\"Webex\", \"Metrigy\", \"Forrester\"],\n        full_content: \"Christina McAllister (Forrester) toteaa, etta aiemmin generatiivinen AI sai paljon huomiota, mutta vuonna 2025 ennakoiva AI tulee takaisin: jopa 50% kayttotapauksista hyodyntaa perinteisia koneoppimisalgoritmeja, koska ne suorittavat tietyt tehtavat tehokkaammin tai taydentavat generatiivista AI:ta. Vaikka lahes 60% yrityksista on ottanut AI:n laajalti kayttoon, vain noin puolet kokee nykyisen teknologiansa tuottavan toivotun asiakaskokemuksen.\"\n      },\n      {\n        category: \"hyperpersonalization\",\n        title: \"Hyperpersoonalistaminen ja datan laatu\",\n        description: \"Generatiivinen AI ja monimodaaliset mallit mahdollistavat yksilollisen vuorovaikutuksen jokaiselle asiakkaalle analysoimalla ostotietoja, selaushistoriaa ja tunnesavya.\",\n        key_points: [\n          \"AI mahdollistaa hyperpersoonalisoinnin, automatisoidut tyonkulut ja tunteiden tunnistuksen\",\n          \"Palvelut ovat entista henkilokohtaisempia ja tehokkaampia\",\n          \"Generatiivisen AI:n avulla voidaan toimittaa raataloitya sisaltoa skaalauttavasti\",\n          \"Datan laatu on kriittinen menestyksen edellytys\",\n          \"Datan siilot on purettava taydellisen asiakasymmartyksen saavuttamiseksi\"\n        ],\n        examples: [\"NICE\", \"Genesys\", \"ServiceNow\"],\n        full_content: \"NICE:n mukaan AI mahdollistaa hyperpersoonalisoinnin, automatisoidut tyonkulut, tunteiden tunnistuksen ja ennakoivan analytiikan, jolloin palvelut ovat entista henkilokohtaisempia ja tehokkaampia. Asiantuntijat painottavat myos datan laatua. Cathy Mauzaize (ServiceNow) toteaa, etta AI-hankkeet kaatuvat usein datan puhtauden puutteeseen; onnistuminen vaatii siirtymista proof-of-conceptista proof-of-valueen todellisella datalla.\"\n      },\n      {\n        category: \"proactive_service\",\n        title: \"Proaktiivinen kanavien yli ulottuva palvelu\",\n        description: \"AI ja automaatio siirtyvat reaktiivisesta ongelmanratkaisusta kohti proaktiivista asiakkaan ilahduttamista. Esimerkkeja ovat lentoyhtiöt, jotka rebookaavat lennot automaattisesti.\",\n        key_points: [\n          \"Siirtyminen reaktiivisesta proaktiiviseen asiakkaan ilahduttamiseen\",\n          \"AI voi yhdistaa eri jarjestelmia tarjoamaan ajantasaista apua\",\n          \"Reaaliaikainen kanavien valinen nakyvyys mahdollistaa sentimentin ymmartamisen\",\n          \"Keskeista on ymmartaa asiakkaan profiili, mieltymykset ja aikomukset\",\n          \"Intentional channel strategies ovat valttamattomia\"\n        ],\n        examples: [\"Lentoyhtiöt\", \"Terveydenhuolto\", \"Genesys\"],\n        full_content: \"Nextivan Kate Hodgins huomauttaa, etta AI ja automaatio siirtyvat reaktiivisesta ongelmanratkaisusta kohti proaktiivista asiakkaan ilahduttamista. Esimerkkeja ovat lentoyhtiöt, jotka rebookaavat lennot automaattisesti ja ilmoittavat asiakkaille, tai terveydenhuollon toimijat, jotka muistuttavat ajoissa sovituista ajoista. Keskeista on ymmartaa asiakkaan profiili, mieltymykset ja aikomukset ja kayttaa naita tietoja oikea-aikaiseen yhteydenottoon.\"\n      },\n      {\n        category: \"human_ai_collaboration\",\n        title: \"Ihmisen ja tekoalyn yhteistyo\",\n        description: \"Asiakkaat odottavat yha ihmiskosketusta monimutkaisissa tilanteissa. Yritysten on koulutettava agenteista entista empaattisempia ja paremmin informoituja.\",\n        key_points: [\n          \"AI parantaa asiakastyytyvaisyytta keskimaarin 22,3%\",\n          \"40% kuluttajista valttaa chatboteja, koska ne eivat ymmarra pyyntoja\",\n          \"Menestyvat organisaatiot mittaavat menestysta asiakasuskollisuudella\",\n          \"Yritykset siirtyvat pienempiin raatalöityihin malleihin\",\n          \"Luotettavien AI-toimittajien etsiminen on kriittista\"\n        ],\n        examples: [\"Agent assist -ratkaisut\", \"NICE\", \"Forbes\"],\n        full_content: \"Alpa Shah (Frost & Sullivan) muistuttaa, etta asiakkaat odottavat yha ihmiskosketusta monimutkaisissa tilanteissa. Yritysten on koulutettava agenteista entista empaattisempia ja paremmin informoituja, koska AI hoitaa peruskysymykset. Robin Gareiss huomauttaa, etta vaikka AI parantaa asiakastyytyvaisyytta keskimaarin 22,3%, 40% kuluttajista valttaa chatboteja, koska ne eivat ymmarra heidan pyynnönsä.\"\n      },\n      {\n        category: \"business_impact\",\n        title: \"Liiketoimintavaikutus ja vastuullisuus\",\n        description: \"CX:n arvoa mitataan yha selvemmin liiketoiminnan mittareilla. Tietosuojasta ja eettisyydesta on tullut kriittisia. Sosiaalisen median rooli kasvaa ostopoluissa.\",\n        key_points: [\n          \"Yritykset yhdistävät asiakaspalvelustrategiat liiketoiminnan tuloksiin\",\n          \"Asiakaselinkaaren arvo ja uskollisuus ovat keskiossa\",\n          \"Monet organisaatiot hylkäävät AI-hankkeet ilman läpinäkyvyyttä\",\n          \"TikTok, Amazon ja muut algoritmit vaikuttavat suoraan ostopolkuihin\",\n          \"Brändien näkyvyys siirtyy generatiivisten AI-hakujen maailmaan\"\n        ],\n        examples: [\"Genesys\", \"Gartner\", \"TikTok\", \"Amazon\"],\n        full_content: \"Genesysin mukaan yritykset yhdistävät asiakaspalvelustrategiat selvästi liiketoiminnan tuloksiin, kuten asiakaselinkaaren arvoon ja uskollisuuteen. Tietosuojasta ja eettisyydestä on tullut kriittisiä. Gartner ennustaa, että monet organisaatiot hylkäävät AI-hankkeita, jos ne eivät pysty osoittamaan, että mallit ovat läpinäkyviä ja ennakkoluulottomia. Myös sosiaalisen median rooli kasvaa: TikTokin, Amazonin ja muiden alojen algoritmit vaikuttavat suoraan asiakkaiden ostopolkuihin.\"\n      },\n      {\n        category: \"customer_understanding\",\n        title: \"Tekoäly syväluotaa asiakasdatan\",\n        description: \"AI-mallit analysoivat valtavia määriä asiakasdataa löytäen merkityksellisiä kuvioita asiakaspalautteiden, tukipyyntöjen ja keskustelulogien joukosta.\",\n        key_points: [\n          \"Generatiiviset kielimallit tiivistävät tuhansia asiakaspalautteita nopeasti\",\n          \"Toistuvien teemojen ja ongelmakohtien paljastaminen automaattisesti\",\n          \"Zendesk luokittelee tukipyynnöt aiheen, kielen ja sentimentin perusteella\",\n          \"Reaaliaikainen asiakasymmärrys ennennäkemättömälle syvyydelle\"\n        ],\n        examples: [\"Zendesk\"],\n        full_content: \"Nykyiset AI-mallit - mukaan lukien suuret kielimallit (LLM) ja monimodaaliset mallit - pystyvät analysoimaan valtavia määriä asiakasdataa (kuten tekstiä, ääntä ja kuvaa) ja löytämään sieltä merkityksellisiä kuvioita. Esimerkiksi asiakaspalautteet, tukipyynnöt ja keskustelulokit sisältävät jäsentämätöntä tietoa, jonka käsittelyyn AI tuo tehoa. Generatiiviset kielimallit voivat tiivistää tuhansia asiakaspalautteita nopeasti ja paljastaa toistuvat teemat tai ongelmakohdat, mikä olisi manuaalisesti lähes mahdotonta.\"\n      },\n      {\n        category: \"customer_understanding\",\n        title: \"Asiakassegmentointi ja churn-ennustaminen\",\n        description: \"Koneoppiminen ennustaa asiakasarvoa, tunnistaa churn-riskejä ja analysoi jäsentämätöntä tekstidataa luonnollisen kielen käsittelyn avulla.\",\n        key_points: [\n          \"Ennakoiva analytiikka yhdistää historiatiedot ja nykykäyttäytymisen\",\n          \"Turhautumisen ja tyytymättömyyden merkkien tunnistaminen teksteistä\",\n          \"Proaktiivinen puuttuminen ennen asiakkaan menettämistä\",\n          \"Miljoonasäästöt tilausliiketoiminnassa ja telecom-sektorilla\"\n        ],\n        examples: [\"Zendesk\"],\n        full_content: \"Vuonna 2025 monet yritykset hyödyntävät AI:ta esimerkiksi asiakassegmentoinnissa, asiakasarvon ennustamisessa sekä churn-riskin tunnistamisessa. Ennakoiva analytiikka pystyy yhdistämään historiatietoja ja nykykäyttäytymistä paljastaakseen, mitkä asiakkaat ovat vaarassa lähteä kilpailijalle. Uudet työkalut analysoivat jopa jäsentämätöntä tekstidataa - kuten asiakasviestejä - luonnollisen kielen käsittelyn avulla: ne seulovat tuhansia avainsanoja ja lauseita havaitakseen turhautumisen tai tyytymättömyyden merkkejä.\"\n      },\n      {\n        category: \"customer_understanding\",\n        title: \"Hyperpersoonallistaminen reaaliajassa\",\n        description: \"Jokaiselle asiakkaalle luodaan yksilöllinen kokemus reaaliaikaisen data-analyysin avulla, hyödyntäen selaushistoriaa, ostotietoja ja preferenssejä.\",\n        key_points: [\n          \"85% kuluttajista odottaa yritysten ennakoivan tarpeitaan etukäteen\",\n          \"Yksilöidyt kokemukset tuottavat 40% enemmän liikevaihtoa massalähestymiseen verrattuna\",\n          \"80% kuluttajista todennäköisemmin ostoaikeissa personoitujen kokemusten kanssa\",\n          \"Netflix AI-suosittelu tuottaa yli miljardi dollaria lisävuosituloa\"\n        ],\n        examples: [\"Netflix\", \"Starbucks\", \"Amazon Rufus\"],\n        full_content: \"Pelkkä personointi ei enää riitä - nyt pyritään hyperpersoonallistamiseen, jossa jokaiselle asiakkaalle luodaan yksilöllinen kokemus reaaliaikaisen data-analyysin avulla. AI:n tukema hyperpersoonallistaminen tarkoittaa, että järjestelmät hyödyntävät mm. asiakkaan selaushistoriaa, ostotietoja, sijaintia ja muita preferenssejä räätälöidäkseen sisällön ja viestit juuri kyseiselle henkilölle sopiviksi.\"\n      },\n      {\n        category: \"automation\",\n        title: \"Generatiiviset tekoälymallit asiakaspalvelussa\",\n        description: \"Suuret kielimallit mullistavat asiakaspalvelun automaation laadun tuottamalla dynaamisia, ihmismäisiä vastauksia asiakkaiden kysymyksiin.\",\n        key_points: [\n          \"Yli 80% yrityksistä ottaa käyttöön generatiivista tekoälyä vuonna 2025\",\n          \"Pankkikonsernin chatbot parani 20% seitsemässä viikossa\",\n          \"51% asiakkaista suosii botti-palvelua välittömiin vastauksiin\",\n          \"95% asiakaskohtaamisista sisältää AI-komponentin vuoteen 2025\"\n        ],\n        examples: [\"OpenAI GPT-sarja\"],\n        full_content: \"Generatiivinen tekoäly - erityisesti suuret kielimallit kuten OpenAI:n GPT-sarja - on mullistanut asiakaspalvelun automaation laadun. Toisin kuin vanhat sääntöpohjaiset chatbotit, uudet LLM-mallit tuottavat dynaamisia, ihmismäisiä vastauksia asiakkaiden kysymyksiin. Vuonna 2025 yli 80 % yrityksistä on jo ottanut käyttöön tai suunnittelee ottavansa käyttöön generatiivista tekoälyä asiakasvuorovaikutuksessaan.\"\n      },\n      {\n        category: \"automation\",\n        title: \"Autonomiset agentit ja työnkulkujen orkestrointi (klassinen)\",\n        description: \"Autonomiset tekoälyagentit hoitavat tehtäviä itsenäisesti ennalta asetettujen tavoitteiden mukaisesti, suunnitellen ja suorittaen monivaiheisia prosesseja.\",\n        key_points: [\n          \"Agentit käyttävät tekoälyä tehtävien suorittamiseen ilman tarkkoja käyttäjän syötteitä\",\n          \"Pystyvät laatimaan suunnitelman ja käyttämään erilaisia työkaluja\",\n          \"Salesforce Agentforce tarjoaa 100 tekoälybotin kirjaston\",\n          \"Talkdesk AI Agents for Retail vähittäiskaupalle\"\n        ],\n        examples: [\"Salesforce Agentforce\", \"Talkdesk AI Agents\"],\n        full_content: \"Yksi vuoden 2025 puhutuimmista edistysaskeleista on agenttiteknologia - toisin sanoen autonomiset tekoälyagentit, jotka hoitavat tehtäviä itsenäisesti ennalta asetettujen tavoitteiden mukaisesti. Aikaisemmat chatbotit odottivat käyttäjän seuraavaa viestiä, mutta agenttimainen AI voi omatoimisesti suunnitella ja suorittaa useita askeleita sisältäviä prosesseja.\"\n      }\n    ];\n\n    trendsData.forEach(trendData => {\n      const id = randomUUID();\n      const trend: Trend = { ...trendData, id };\n      this.trends.set(id, trend);\n    });\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":28165},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, jsonb, integer } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const cases = pgTable(\"cases\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  company: text(\"company\").notNull(),\n  country: text(\"country\").notNull(),\n  industry: text(\"industry\").notNull(),\n  solution_name: text(\"solution_name\").notNull(),\n  description: text(\"description\").notNull(),\n  key_metrics: jsonb(\"key_metrics\").notNull(), // Array of {label: string, value: string, type: string}\n  learning_points: jsonb(\"learning_points\").notNull(), // Array of strings\n  category: text(\"category\").notNull(),\n  icon: text(\"icon\").notNull(),\n  full_text: text(\"full_text\").notNull(), // For AI context\n});\n\nexport const trends = pgTable(\"trends\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  category: text(\"category\").notNull(), // \"customer_understanding\", \"automation\", \"strategic\"\n  title: text(\"title\").notNull(),\n  description: text(\"description\").notNull(),\n  key_points: jsonb(\"key_points\").notNull(), // Array of strings\n  examples: jsonb(\"examples\").notNull(), // Array of examples/companies mentioned\n  full_content: text(\"full_content\").notNull(), // Complete section text for AI context\n});\n\nexport const chat_messages = pgTable(\"chat_messages\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  message: text(\"message\").notNull(),\n  response: text(\"response\").notNull(),\n  context_type: text(\"context_type\").default(\"general\"), // \"strategic\", \"practical\", \"finnish\", \"planning\", \"general\"\n  timestamp: integer(\"timestamp\").notNull(),\n});\n\nexport const insertCaseSchema = createInsertSchema(cases).omit({\n  id: true,\n});\n\nexport const insertTrendSchema = createInsertSchema(trends).omit({\n  id: true,\n});\n\nexport const insertChatMessageSchema = createInsertSchema(chat_messages).omit({\n  id: true,\n});\n\nexport type InsertCase = z.infer<typeof insertCaseSchema>;\nexport type Case = typeof cases.$inferSelect;\nexport type InsertTrend = z.infer<typeof insertTrendSchema>;\nexport type Trend = typeof trends.$inferSelect;\nexport type InsertChatMessage = z.infer<typeof insertChatMessageSchema>;\nexport type ChatMessage = typeof chat_messages.$inferSelect;\n","size_bytes":2326},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport Home from \"@/pages/home\";\nimport ImpactAnalysis from \"@/pages/impact-analysis\";\nimport TechLeadCV from \"@/pages/tech-lead-cv\";\nimport NotFound from \"@/pages/not-found\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route path=\"/impact-analysis\" component={ImpactAnalysis} />\n      <Route path=\"/tech-lead-cv\" component={TechLeadCV} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":927},"client/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(210, 55%, 15%);\n  --foreground: hsl(0, 0%, 100%);\n  --card: hsl(210, 40%, 20%);\n  --card-foreground: hsl(0, 0%, 95%);\n  --popover: hsl(210, 45%, 18%);\n  --popover-foreground: hsl(0, 0%, 95%);\n  --primary: hsl(210, 30%, 35%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(210, 30%, 30%);\n  --secondary-foreground: hsl(0, 0%, 95%);\n  --muted: hsl(210, 35%, 25%);\n  --muted-foreground: hsl(210, 20%, 70%);\n  --accent: hsl(210, 50%, 22%);\n  --accent-foreground: hsl(0, 0%, 95%);\n  --destructive: hsl(0, 84.2%, 60.2%);\n  --destructive-foreground: hsl(0, 0%, 100%);\n  --border: hsl(210, 25%, 35%);\n  --input: hsl(210, 30%, 25%);\n  --ring: hsl(210, 25%, 45%);\n  --chart-1: hsl(12, 76%, 61%);\n  --chart-2: hsl(173, 58%, 39%);\n  --chart-3: hsl(197, 37%, 24%);\n  --chart-4: hsl(43, 74%, 66%);\n  --chart-5: hsl(27, 87%, 67%);\n  --sidebar: hsl(180, 6.6667%, 97.0588%);\n  --sidebar-foreground: hsl(210, 25%, 7.8431%);\n  --sidebar-primary: hsl(210, 70%, 25%);\n  --sidebar-primary-foreground: hsl(0, 0%, 100%);\n  --sidebar-accent: hsl(211.5789, 51.3514%, 92.7451%);\n  --sidebar-accent-foreground: hsl(210, 70%, 30%);\n  --sidebar-border: hsl(205.0000, 25.0000%, 90.5882%);\n  --sidebar-ring: hsl(210, 70%, 25%);\n  --font-sans: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif;\n  --font-serif: Georgia, \"Times New Roman\", Times, serif;\n  --font-mono: Menlo, Monaco, \"Courier New\", monospace;\n  --radius: 0.5rem;\n  --shadow-2xs: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow-xs: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow-sm: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00), 0px 1px 2px -1px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00), 0px 1px 2px -1px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow-md: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00), 0px 2px 4px -1px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow-lg: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00), 0px 4px 6px -1px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow-xl: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00), 0px 8px 10px -1px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow-2xl: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --tracking-normal: 0em;\n  --spacing: 0.25rem;\n}\n\n.dark {\n  --background: hsl(0, 0%, 0%);\n  --foreground: hsl(200, 6.6667%, 91.1765%);\n  --card: hsl(228, 9.8039%, 10%);\n  --card-foreground: hsl(0, 0%, 85.0980%);\n  --popover: hsl(0, 0%, 0%);\n  --popover-foreground: hsl(200, 6.6667%, 91.1765%);\n  --primary: hsl(210, 30%, 35%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(195.0000, 15.3846%, 94.9020%);\n  --secondary-foreground: hsl(210, 25%, 7.8431%);\n  --muted: hsl(0, 0%, 9.4118%);\n  --muted-foreground: hsl(210, 3.3898%, 46.2745%);\n  --accent: hsl(205.7143, 70%, 7.8431%);\n  --accent-foreground: hsl(203.7736, 87.6033%, 52.5490%);\n  --destructive: hsl(356.3033, 90.5579%, 54.3137%);\n  --destructive-foreground: hsl(0, 0%, 100%);\n  --border: hsl(210, 5.2632%, 14.9020%);\n  --input: hsl(207.6923, 27.6596%, 18.4314%);\n  --ring: hsl(210, 25%, 45%);\n  --chart-1: hsl(210, 70%, 30%);\n  --chart-2: hsl(159.7826, 100%, 36.0784%);\n  --chart-3: hsl(42.0290, 92.8251%, 56.2745%);\n  --chart-4: hsl(147.1429, 78.5047%, 41.9608%);\n  --chart-5: hsl(341.4894, 75.2000%, 50.9804%);\n  --sidebar: hsl(228, 9.8039%, 10%);\n  --sidebar-foreground: hsl(0, 0%, 85.0980%);\n  --sidebar-primary: hsl(210, 70%, 25%);\n  --sidebar-primary-foreground: hsl(0, 0%, 100%);\n  --sidebar-accent: hsl(205.7143, 70%, 7.8431%);\n  --sidebar-accent-foreground: hsl(210, 70%, 30%);\n  --sidebar-border: hsl(205.7143, 15.7895%, 26.0784%);\n  --sidebar-ring: hsl(210, 70%, 25%);\n  --font-sans: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif;\n  --font-serif: Georgia, \"Times New Roman\", Times, serif;\n  --font-mono: Menlo, Monaco, \"Courier New\", monospace;\n  --radius: 0.5rem;\n  --shadow-2xs: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow-xs: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow-sm: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00), 0px 1px 2px -1px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00), 0px 1px 2px -1px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow-md: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00), 0px 2px 4px -1px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow-lg: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00), 0px 4px 6px -1px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow-xl: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00), 0px 8px 10px -1px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow-2xl: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n}\n\n.chat-message {\n  animation: fadeInUp 0.3s ease-out;\n}\n\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.case-card {\n  transition: all 0.2s ease-in-out;\n}\n\n.case-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 8px 25px rgba(0,0,0,0.1);\n}\n\n.metric-badge {\n  background: linear-gradient(135deg, var(--primary) 0%, hsl(210, 65%, 35%) 100%);\n}\n\n.success-badge {\n  background: linear-gradient(135deg, hsl(142.1, 76.2%, 36.3%) 0%, hsl(142.1, 70.6%, 45.3%) 100%);\n}\n\n.efficiency-badge {\n  background: linear-gradient(135deg, hsl(47.9, 95.8%, 53.1%) 0%, hsl(43, 74%, 66%) 100%);\n}\n\n.savings-badge {\n  background: linear-gradient(135deg, hsl(173, 58%, 39%) 0%, hsl(173, 58%, 45%) 100%);\n}\n","size_bytes":5888},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/case-card.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { PulseButton } from \"@/components/ui/pulse-button\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription } from \"@/components/ui/dialog\";\nimport { Check, Info, Loader2 } from \"lucide-react\";\nimport { useState } from \"react\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport type { Case } from \"@/lib/types\";\n\ninterface CaseCardProps {\n  case_: Case;\n}\n\nfunction getIconElement(iconClass: string) {\n  // Map FontAwesome classes to appropriate icons or placeholders\n  const iconMap: Record<string, string> = {\n    \"fab fa-amazon\": \"🛒\",\n    \"fas fa-drafting-compass\": \"📐\", \n    \"fas fa-university\": \"🏛️\",\n    \"fas fa-shopping-cart\": \"🛍️\",\n    \"fas fa-landmark\": \"🏦\",\n    \"fas fa-address-book\": \"📞\"\n  };\n  \n  return iconMap[iconClass] || \"🏢\";\n}\n\nfunction getBadgeClass(type: string) {\n  switch (type) {\n    case 'success':\n      return 'success-badge';\n    case 'efficiency':\n      return 'efficiency-badge';\n    case 'savings':\n      return 'savings-badge';\n    case 'metric':\n      return 'metric-badge';\n    default:\n      return 'metric-badge';\n  }\n}\n\nfunction getCategoryColor(category: string) {\n  const colorMap: Record<string, string> = {\n    \"Maailmanluokka\": \"bg-emerald-600/80 border border-emerald-500/50\",\n    \"B2B Malli\": \"bg-slate-600/80 border border-slate-500/50\",\n    \"Pankkisektori\": \"bg-amber-600/80 border border-amber-500/50\",\n    \"Kotimainen\": \"bg-green-600/80 border border-green-500/50\",\n    \"Pohjoismainen\": \"bg-orange-600/80 border border-orange-500/50\",\n    \"B2B Digitaalinen\": \"bg-purple-600/80 border border-purple-500/50\"\n  };\n  \n  return colorMap[category] || \"bg-gray-600/80 border border-gray-500/50\";\n}\n\nexport function CaseCard({ case_ }: CaseCardProps) {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [detailedContent, setDetailedContent] = useState<string>(\"\");\n\n  const implementationMutation = useMutation({\n    mutationFn: async (caseId: string): Promise<{ content: string }> => {\n      const response = await apiRequest('POST', `/api/cases/${caseId}/implementation`);\n      const data = await response.json();\n      return data;\n    },\n    onSuccess: (data) => {\n      setDetailedContent(data.content);\n      setIsModalOpen(true);\n    },\n    onError: (error) => {\n      console.error('Failed to fetch implementation details:', error);\n    }\n  });\n\n  const handleImplementationClick = () => {\n    implementationMutation.mutate(case_.id.toString());\n  };\n\n  return (\n    <>\n      <Card className=\"case-card bg-slate-800/40 border border-slate-600/50 hover:border-slate-500/50 hover:bg-slate-800/60 shadow-lg hover:shadow-xl transition-all duration-300 backdrop-blur-sm\" data-testid={`card-case-${case_.id}`}>\n        <CardContent className=\"p-6\">\n          <div className=\"flex items-start justify-between mb-4\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-12 h-12 bg-slate-700/50 rounded-lg flex items-center justify-center text-xl border border-slate-600/30\">\n                {getIconElement(case_.icon)}\n              </div>\n              <div>\n                <h3 className=\"text-xl font-bold text-white\" data-testid={`text-company-${case_.id}`}>\n                  {case_.company}\n                </h3>\n                <p className=\"text-sm text-slate-300\" data-testid={`text-location-${case_.id}`}>\n                  {case_.country} • {case_.industry}\n                </p>\n              </div>\n            </div>\n            <Badge \n              className={`${getCategoryColor(case_.category)} text-white shadow-sm`}\n              data-testid={`badge-category-${case_.id}`}\n            >\n              {case_.category}\n            </Badge>\n          </div>\n          \n          <div className=\"mb-4\">\n            <h4 className=\"font-semibold text-white mb-2\" data-testid={`text-solution-${case_.id}`}>\n              {case_.solution_name}\n            </h4>\n            <p className=\"text-slate-300 text-sm mb-3\" data-testid={`text-description-${case_.id}`}>\n              {case_.description}\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-3 gap-4 mb-4\">\n            {(case_.key_metrics || []).map((metric, index) => (\n              <div key={index} className=\"text-center p-3 bg-slate-700/30 rounded-lg border border-slate-600/30 backdrop-blur-sm\" data-testid={`metric-${case_.id}-${index}`}>\n                <div className={`${getBadgeClass(metric.type)} text-white px-2 py-1 rounded text-xs font-bold mb-1 shadow-sm`}>\n                  {metric.value}\n                </div>\n                <div className=\"text-xs text-slate-400\">{metric.label}</div>\n              </div>\n            ))}\n          </div>\n\n          <div className=\"border-t border-slate-600/50 pt-4 mb-4\">\n            <h5 className=\"font-medium text-white mb-2\">Keskeiset oppimiskohteet:</h5>\n            <ul className=\"text-sm text-slate-300 space-y-1\">\n              {(case_.learning_points || []).map((point, index) => (\n                <li key={index} className=\"flex items-start space-x-2\" data-testid={`learning-point-${case_.id}-${index}`}>\n                  <Check className=\"h-3 w-3 text-blue-400 mt-1 flex-shrink-0\" />\n                  <span>{point}</span>\n                </li>\n              ))}\n            </ul>\n          </div>\n\n          <PulseButton\n            onClick={handleImplementationClick}\n            loading={implementationMutation.isPending}\n            loadingText=\"Luodaan sisältöä...\"\n            pulse=\"subtle\"\n            className=\"w-full bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 text-white shadow-lg hover:shadow-xl transition-all duration-200\"\n            data-testid={`button-implementation-${case_.id}`}\n          >\n            <Info className=\"mr-2 h-4 w-4\" />\n            Lue lisää toteutuksesta\n          </PulseButton>\n        </CardContent>\n      </Card>\n\n      <Dialog open={isModalOpen} onOpenChange={setIsModalOpen}>\n        <DialogContent className=\"max-w-4xl max-h-[80vh] overflow-y-auto bg-slate-800/95 border border-slate-600/50 backdrop-blur-md\">\n          <DialogHeader>\n            <DialogTitle className=\"flex items-center gap-2 text-white\">\n              <div className=\"w-8 h-8 bg-slate-700/50 border border-slate-600/30 rounded-lg flex items-center justify-center text-lg\">\n                {getIconElement(case_.icon)}\n              </div>\n              {case_.company} - Toteutuksen yksityiskohdat\n            </DialogTitle>\n            <DialogDescription className=\"text-slate-300\">\n              AI-generoitu syvyysanalyysi {case_.solution_name} -toteutuksesta\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"mt-4\">\n            {detailedContent ? (\n              <div className=\"prose prose-sm max-w-none text-slate-200 prose-headings:text-white prose-strong:text-white prose-code:text-blue-300 prose-pre:bg-slate-900/50 prose-pre:border prose-pre:border-slate-600/30 animate-in fade-in-0 duration-500\">\n                <ReactMarkdown remarkPlugins={[remarkGfm]}>\n                  {detailedContent}\n                </ReactMarkdown>\n              </div>\n            ) : (\n              <div className=\"space-y-4 p-4\">\n                <div className=\"flex items-center justify-center mb-4 text-slate-300\">\n                  <Loader2 className=\"mr-2 h-6 w-6 animate-spin text-blue-400\" />\n                  Luodaan yksityiskohtaista sisältöä...\n                </div>\n                <div className=\"space-y-3\">\n                  <Skeleton className=\"h-4 w-full bg-slate-700/50\" />\n                  <Skeleton className=\"h-4 w-4/5 bg-slate-700/50\" />\n                  <Skeleton className=\"h-4 w-full bg-slate-700/50\" />\n                  <Skeleton className=\"h-4 w-3/5 bg-slate-700/50\" />\n                  <div className=\"pt-2\">\n                    <Skeleton className=\"h-6 w-1/3 mb-2 bg-slate-700/50\" />\n                    <Skeleton className=\"h-4 w-full bg-slate-700/50\" />\n                    <Skeleton className=\"h-4 w-5/6 bg-slate-700/50\" />\n                  </div>\n                  <div className=\"pt-2\">\n                    <Skeleton className=\"h-6 w-1/4 mb-2 bg-slate-700/50\" />\n                    <Skeleton className=\"h-4 w-full bg-slate-700/50\" />\n                    <Skeleton className=\"h-4 w-4/5 bg-slate-700/50\" />\n                    <Skeleton className=\"h-4 w-2/3 bg-slate-700/50\" />\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n","size_bytes":8867},"client/src/components/chat-interface.tsx":{"content":"import { useState, useRef, useEffect } from \"react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { PulseButton } from \"@/components/ui/pulse-button\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Input } from \"@/components/ui/input\";\nimport { Badge } from \"@/components/ui/badge\";\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport { Bot, User, Send, TrendingUp, Wrench, MapPin, Target, Zap, DollarSign, Crosshair, Globe, Building, Users, Shield, Database, Workflow, MessageCircle, Phone, Heart, GraduationCap, BookOpen, Cpu, Scale, Star, Maximize2, Minimize2, HelpCircle, FileText, ExternalLink, BarChart3 } from \"lucide-react\";\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\n\ninterface ChatMessage {\n  content: string;\n  isUser: boolean;\n  timestamp: number;\n}\n\ntype ContextType = \"strategic\" | \"practical\" | \"finnish\" | \"planning\" | \"technical\" | \"mcp\" | \"general\";\n\ninterface QuestionButton {\n  id: string;\n  question: string;\n  category: string;\n  icon: typeof Bot;\n  color: string;\n}\n\ninterface TopicArea {\n  id: string;\n  title: string;\n  icon: typeof Bot;\n  color: string;\n  questions: QuestionButton[];\n}\n\n// MCP (Model Context Protocol) - TÄRKEÄ!\nconst mcpQuestions: QuestionButton[] = [\n  {\n    id: \"mcp-what-is\",\n    question: \"Mikä on MCP?\",\n    category: \"mcp\",\n    icon: HelpCircle,\n    color: \"bg-emerald-500\"\n  },\n  {\n    id: \"mcp-security\",\n    question: \"Miten MCP parantaa AI-integraatioiden turvallisuutta?\",\n    category: \"mcp\",\n    icon: Shield,\n    color: \"bg-emerald-500\"\n  },\n  {\n    id: \"mcp-automation\",\n    question: \"Mitä hyötyä MCP:stä on asiakaspalvelun automaatiossa?\",\n    category: \"mcp\",\n    icon: Cpu,\n    color: \"bg-emerald-500\"\n  },\n  {\n    id: \"mcp-access-control\",\n    question: \"Kuinka MCP:n avulla hallitaan AI:n pääsyoikeuksia?\",\n    category: \"mcp\",\n    icon: Scale,\n    color: \"bg-emerald-500\"\n  },\n  {\n    id: \"mcp-deep-analysis\",\n    question: \"📊 Syväanalyysi MCP\",\n    category: \"mcp\",\n    icon: FileText,\n    color: \"bg-emerald-500\"\n  }\n];\n\nconst topicAreas: TopicArea[] = [\n  {\n    id: \"trends-2025\",\n    title: \"🚀 Trendit 2025\",\n    icon: TrendingUp,\n    color: \"bg-gradient-to-r from-purple-600 to-orange-600\",\n    questions: [\n      {\n        id: \"hyperpersonalization-trend\",\n        question: \"🎯 Kuinka hyperpersonointi mullistaa asiakaskokemuksen 2025?\",\n        category: \"general\",\n        icon: Target,\n        color: \"bg-purple-600\"\n      },\n      {\n        id: \"proactive-service-trend\",\n        question: \"⚡ Miksi proaktiivinen asiakaspalvelu on vuoden 2025 megatrendi?\",\n        category: \"general\",\n        icon: Zap,\n        color: \"bg-orange-600\"\n      },\n      {\n        id: \"cx-trends-2025-featured\",\n        question: \"📊 2025 suurimmat CX-trendit ja AI:n rooli\",\n        category: \"general\",\n        icon: BarChart3,\n        color: \"bg-blue-600\"\n      }\n    ]\n  },\n  {\n    id: \"strategy-roi\",\n    title: \"Strategia & ROI\",\n    icon: TrendingUp,\n    color: \"bg-slate-600\",\n    questions: [\n      {\n        id: \"roi-measurement\",\n        question: \"Miten AI-investoinnista saa mitattavaa arvoa asiakaspalvelussa?\",\n        category: \"strategy-roi\",\n        icon: DollarSign,\n        color: \"bg-slate-600\"\n      },\n      {\n        id: \"cx-trends-2025\",\n        question: \"Mitkä ovat vuoden 2025 suurimmat CX-trendit?\",\n        category: \"strategy-roi\",\n        icon: TrendingUp,\n        color: \"bg-slate-600\"\n      }\n    ]\n  },\n  {\n    id: \"data-privacy\",\n    title: \"Data & tietosuoja\",\n    icon: Database,\n    color: \"bg-purple-500\",\n    questions: [\n      {\n        id: \"data-quality\",\n        question: \"Miten varmistetaan, että asiakasdata pysyy laadukkaana ja suojattuna?\",\n        category: \"data-privacy\",\n        icon: Shield,\n        color: \"bg-purple-500\"\n      },\n      {\n        id: \"gdpr-compliance\",\n        question: \"Kuinka vältetään datasiilot ja GDPR-riskit AI-projekteissa?\",\n        category: \"data-privacy\",\n        icon: Scale,\n        color: \"bg-purple-500\"\n      }\n    ]\n  },\n  {\n    id: \"automation-workflows\",\n    title: \"Automaatio & työnkulut\",\n    icon: Workflow,\n    color: \"bg-green-500\",\n    questions: [\n      {\n        id: \"reduce-manual-work\",\n        question: \"Miten automaatio voi vähentää manuaalista työtä asiakaspalvelussa?\",\n        category: \"automation-workflows\",\n        icon: Workflow,\n        color: \"bg-green-500\"\n      },\n      {\n        id: \"ticket-classification\",\n        question: \"Mitä hyötyä on AI:sta tikettien luokittelussa ja reitityksessä?\",\n        category: \"automation-workflows\",\n        icon: Target,\n        color: \"bg-green-500\"\n      }\n    ]\n  },\n  {\n    id: \"bots-agents\",\n    title: \"Botit & agentit\",\n    icon: Bot,\n    color: \"bg-orange-500\",\n    questions: [\n      {\n        id: \"bot-vs-agent\",\n        question: \"Mikä ero on chatbotilla ja AI-agentilla?\",\n        category: \"bots-agents\",\n        icon: Bot,\n        color: \"bg-orange-500\"\n      },\n      {\n        id: \"escalation-timing\",\n        question: \"Milloin kannattaa eskaloida botti-asiakaspalvelusta ihmiselle?\",\n        category: \"bots-agents\",\n        icon: Users,\n        color: \"bg-orange-500\"\n      }\n    ]\n  },\n  {\n    id: \"voice-phone\",\n    title: \"Ääni & puhelin\",\n    icon: Phone,\n    color: \"bg-pink-500\",\n    questions: [\n      {\n        id: \"asr-sentiment\",\n        question: \"Miten puheentunnistus (ASR) ja sentimenttianalyysi voivat parantaa puhelinpalvelua?\",\n        category: \"voice-phone\",\n        icon: Phone,\n        color: \"bg-pink-500\"\n      },\n      {\n        id: \"call-summary\",\n        question: \"Kuinka automaattinen yhteenveto helpottaa agentin työtä puhelun jälkeen?\",\n        category: \"voice-phone\",\n        icon: MessageCircle,\n        color: \"bg-pink-500\"\n      }\n    ]\n  },\n  {\n    id: \"hyperpersonalization\",\n    title: \"Hyperpersoonallistaminen\",\n    icon: Heart,\n    color: \"bg-red-500\",\n    questions: [\n      {\n        id: \"realtime-recommendations\",\n        question: \"Miten AI voi tarjota asiakkaille räätälöityjä suosituksia reaaliajassa?\",\n        category: \"hyperpersonalization\",\n        icon: Crosshair,\n        color: \"bg-red-500\"\n      },\n      {\n        id: \"proactive-communication\",\n        question: \"Kuinka proaktiivinen viestintä lisää asiakastyytyväisyyttä?\",\n        category: \"hyperpersonalization\",\n        icon: Zap,\n        color: \"bg-red-500\"\n      }\n    ]\n  },\n  {\n    id: \"agent-quality\",\n    title: \"Agenttien laatu & koulutus\",\n    icon: GraduationCap,\n    color: \"bg-indigo-500\",\n    questions: [\n      {\n        id: \"quality-assessment\",\n        question: \"Miten AI voi arvioida ja parantaa asiakaspalvelijan laatua?\",\n        category: \"agent-quality\",\n        icon: Star,\n        color: \"bg-indigo-500\"\n      },\n      {\n        id: \"agent-assist-training\",\n        question: \"Voiko agent-assist toimia myös koulutusvälineenä?\",\n        category: \"agent-quality\",\n        icon: GraduationCap,\n        color: \"bg-indigo-500\"\n      }\n    ]\n  },\n  {\n    id: \"case-library\",\n    title: \"Case-kirjasto\",\n    icon: BookOpen,\n    color: \"bg-cyan-500\",\n    questions: [\n      {\n        id: \"successful-cases\",\n        question: \"Mitä voimme oppia onnistuneista AI-caseista asiakaspalvelussa?\",\n        category: \"case-library\",\n        icon: BookOpen,\n        color: \"bg-cyan-500\"\n      },\n      {\n        id: \"failed-projects\",\n        question: \"Miksi osa AI-projekteista epäonnistuu CX:ssä?\",\n        category: \"case-library\",\n        icon: Target,\n        color: \"bg-cyan-500\"\n      }\n    ]\n  },\n  {\n    id: \"technology-integrations\",\n    title: \"Teknologia & integraatiot\",\n    icon: Cpu,\n    color: \"bg-teal-500\",\n    questions: [\n      {\n        id: \"required-technologies\",\n        question: \"Mitä teknologioita tarvitaan AI:n integrointiin asiakaspalveluun?\",\n        category: \"technology-integrations\",\n        icon: Cpu,\n        color: \"bg-teal-500\"\n      },\n      {\n        id: \"platform-integration\",\n        question: \"Miten Intercom, CRM ja CCaaS voidaan yhdistää tekoälyn avulla?\",\n        category: \"technology-integrations\",\n        icon: Globe,\n        color: \"bg-teal-500\"\n      }\n    ]\n  },\n  {\n    id: \"governance-ethics\",\n    title: \"Hallintamalli & eettisyys\",\n    icon: Scale,\n    color: \"bg-slate-500\",\n    questions: [\n      {\n        id: \"ethical-ai\",\n        question: \"Miten varmistetaan tekoälyn eettinen käyttö asiakaspalvelussa?\",\n        category: \"governance-ethics\",\n        icon: Scale,\n        color: \"bg-slate-500\"\n      },\n      {\n        id: \"decision-responsibility\",\n        question: \"Kuka vastaa tekoälyn tekemistä päätöksistä CX-yrityksessä?\",\n        category: \"governance-ethics\",\n        icon: Users,\n        color: \"bg-slate-500\"\n      }\n    ]\n  }\n];\n\nconst contextConfig = {\n  strategic: {\n    label: \"Strategiset trendit\",\n    icon: TrendingUp,\n    color: \"bg-slate-600 hover:bg-slate-700\",\n    description: \"2025 AI-trendit ja tulevaisuuden näkymät\"\n  },\n  practical: {\n    label: \"Käytännön toteutus\",\n    icon: Wrench,\n    color: \"bg-green-500 hover:bg-green-600\",\n    description: \"Konkreettiset case-esimerkit ja tulokset\"\n  },\n  finnish: {\n    label: \"Suomalainen näkökulma\",\n    icon: MapPin,\n    color: \"bg-orange-500 hover:bg-orange-600\",\n    description: \"Soveltaminen Suomen markkinoilla\"\n  },\n  planning: {\n    label: \"Strateginen suunnittelu\",\n    icon: Target,\n    color: \"bg-purple-500 hover:bg-purple-600\",\n    description: \"Humm.fi:n seuraavat askeleet\"\n  },\n  technical: {\n    label: \"Tekninen toteutus\",\n    icon: Cpu,\n    color: \"bg-emerald-500 hover:bg-emerald-600\",\n    description: \"MCP ja teknologiset ratkaisut\"\n  },\n  mcp: {\n    label: \"Model Context Protocol\",\n    icon: Shield,\n    color: \"bg-emerald-600 hover:bg-emerald-700\",\n    description: \"MCP-spesifinen tieto ja ohjeistus\"\n  },\n  general: {\n    label: \"Yleinen\",\n    icon: Bot,\n    color: \"bg-gray-500 hover:bg-gray-600\",\n    description: \"Yleiset kysymykset\"\n  }\n};\n\nexport function ChatInterface() {\n  const [messages, setMessages] = useState<ChatMessage[]>([\n    {\n      content: \"Moro Hummilaiset. Tähän chattiin on integroitu Googlen uusin Gemini 2.5 pro tekoäly ja sitä on koulutettu vastaamaan teidän mieltä askarruttaviin kysymyksiin tekoälyn implementoinnista liiketoimintaan. Feel free to ask anything\",\n      isUser: false,\n      timestamp: Date.now()\n    },\n    {\n      content: \"Alla on tekoälyyn liittyviä keskeisiä teemoja, käsitteitä ja niihin liittyviä teemoja. Klikkaa esimerkiksi MCP-aiheista kysymystä, niin sinulle avautuu keskustelumuotoinen infopläjäys, jossa voit chattailla mun datan kanssa\",\n      isUser: false,\n      timestamp: Date.now() + 1\n    }\n  ]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [selectedContext, setSelectedContext] = useState<ContextType>(\"general\");\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [mcpModalOpen, setMcpModalOpen] = useState(false);\n  const [followUpSuggestions, setFollowUpSuggestions] = useState<string[]>([]);\n  const [placeholderText, setPlaceholderText] = useState(\"Kysy mitä tahansa AI-asiakaspalvelusta johdolle...\");\n\n  // Striimaavat placeholder-kysymykset\n  const rotatingQuestions = [\n    \"Kysy mitä tahansa AI-asiakaspalvelusta johdolle...\",\n    \"Mikä on ROI AI-investoinnille asiakaspalvelussa?\",\n    \"Millä aikataululla voimme toteuttaa AI-asiakaspalvelun?\",\n    \"Mitä riskejä AI-asiakaspalvelussa on?\",\n    \"Kuinka paljon AI-asiakaspalvelu maksaa?\",\n    \"Mitä teknisiä vaatimuksia AI-toteutuksella on?\",\n    \"Kuinka integroida AI olemassa oleviin järjestelmiin?\",\n    \"Mitä tietoturvaseikkoja AI-käyttöönotossa tulee huomioida?\",\n    \"Kuinka mitata AI-asiakaspalvelun menestystä?\",\n    \"Millaista osaamista AI-projekti vaatii tiimiltä?\"\n  ];\n\n  // Optimized placeholder rotation - avoid unnecessary re-renders\n  useEffect(() => {\n    if (inputValue) return; // Don't rotate when user is typing\n    \n    const interval = setInterval(() => {\n      setPlaceholderText(prev => {\n        const currentIndex = rotatingQuestions.indexOf(prev);\n        const nextIndex = (currentIndex + 1) % rotatingQuestions.length;\n        return rotatingQuestions[nextIndex];\n      });\n    }, 4000); // Increased interval to reduce render frequency\n\n    return () => clearInterval(interval);\n  }, [inputValue]); // Removed rotatingQuestions dependency to prevent unnecessary re-renders\n  \n  // New modal state for AI responses\n  const [aiModalOpen, setAiModalOpen] = useState(false);\n  const [modalMessages, setModalMessages] = useState<ChatMessage[]>([]);\n  const [modalInputValue, setModalInputValue] = useState(\"\");\n  const [modalFollowUpSuggestions, setModalFollowUpSuggestions] = useState<string[]>([]);\n  const [currentQuestion, setCurrentQuestion] = useState<string>(\"\");\n  const [currentQuestionContext, setCurrentQuestionContext] = useState<ContextType>(\"general\");\n  \n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const modalMessagesEndRef = useRef<HTMLDivElement>(null);\n  const { toast } = useToast();\n\n  const questionMutation = useMutation({\n    mutationFn: async (questionId: string) => {\n      const response = await apiRequest(\"GET\", `/api/questions/${questionId}/answer?enhance=true`);\n      return response.json();\n    },\n    onSuccess: (data, questionId) => {\n      setMessages(prev => [...prev, {\n        content: data.answer,\n        isUser: false,\n        timestamp: Date.now()\n      }]);\n      // Set context based on question type\n      if (questionId.includes('mcp-') || questionId.includes('required-technologies') || questionId.includes('platform-integration')) {\n        setSelectedContext('technical');\n      } else if (questionId.includes('roi-') || questionId.includes('cx-trends') || questionId.includes('strategy')) {\n        setSelectedContext('strategic');\n      } else if (questionId.includes('successful-cases') || questionId.includes('failed-projects') || questionId.includes('automation') || questionId.includes('bot-')) {\n        setSelectedContext('practical');\n      } else if (questionId.includes('finnish') || questionId.includes('suomalainen')) {\n        setSelectedContext('finnish');\n      } else {\n        setSelectedContext('general');\n      }\n    },\n    onError: () => {\n      toast({\n        title: \"Virhe\",\n        description: \"Vastauksen lataaminen epäonnistui.\",\n        variant: \"destructive\"\n      });\n    }\n  });\n\n  const handleQuestionClick = (questionId: string) => {\n    // Special handling for MCP deep analysis - open modal instead of chat\n    if (questionId === \"mcp-deep-analysis\") {\n      setMcpModalOpen(true);\n      return;\n    }\n\n    // Find question text\n    const allQuestions = [\n      ...mcpQuestions,\n      ...topicAreas.flatMap(topic => topic.questions)\n    ];\n    const question = allQuestions.find(q => q.id === questionId);\n    \n    if (question) {\n      // Determine context based on question category\n      const isMcpQuestion = question.id.includes('mcp-') || question.question.toLowerCase().includes('mcp');\n      const contextType = isMcpQuestion ? 'mcp' : \n                         question.category.includes('roi') || question.category.includes('strategy') ? 'strategic' :\n                         question.category.includes('automation') || question.category.includes('practical') ? 'practical' : 'general';\n      \n      // Set up modal with initial user message\n      setCurrentQuestion(question.question);\n      setCurrentQuestionContext(contextType);\n      setModalMessages([{\n        content: question.question,\n        isUser: true,\n        timestamp: Date.now()\n      }]);\n      setModalInputValue(\"\");\n      setModalFollowUpSuggestions([]);\n      setAiModalOpen(true);\n      \n      console.log(\"Question clicked:\", question.question, \"ID:\", question.id, \"Context:\", contextType);\n      // Use modal mutation to get initial response\n      modalChatMutation.mutate({ message: question.question, context_type: contextType });\n    }\n  };\n\n  const toggleExpanded = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  // Removed auto-scroll to bottom to prevent annoying behavior when clicking buttons\n  // useEffect(() => {\n  //   scrollToBottom();\n  // }, [messages]);\n  \n  useEffect(() => {\n    if (modalMessagesEndRef.current) {\n      modalMessagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n    }\n  }, [modalMessages]);\n\n  const [isStreaming, setIsStreaming] = useState(false);\n  const [streamingMessage, setStreamingMessage] = useState(\"\");\n  \n  const sendStreamingMessage = async (message: string, context_type?: ContextType) => {\n    if (isStreaming) return;\n    \n    setIsStreaming(true);\n    setStreamingMessage(\"\");\n    \n    // Add user message immediately\n    setMessages(prev => [...prev, {\n      content: message,\n      isUser: true,\n      timestamp: Date.now()\n    }]);\n    \n    // Create placeholder for AI response  \n    const aiMessageIndex = messages.length + 1;\n    setMessages(prev => [...prev, {\n      content: \"\",\n      isUser: false,\n      timestamp: Date.now()\n    }]);\n    \n    try {\n      const response = await fetch(\"/api/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ \n          message,\n          context_type: context_type || selectedContext\n        }),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      \n      const reader = response.body?.getReader();\n      const decoder = new TextDecoder();\n      let fullResponse = \"\";\n      \n      if (reader) {\n        while (true) {\n          const { done, value } = await reader.read();\n          if (done) break;\n          \n          const chunk = decoder.decode(value);\n          const lines = chunk.split('\\n');\n          \n          for (const line of lines) {\n            if (line.startsWith('data: ')) {\n              try {\n                const data = JSON.parse(line.slice(6));\n                \n                if (data.type === 'chunk') {\n                  fullResponse += data.text;\n                  \n                  // Update the AI message with streaming content\n                  setMessages(prev => prev.map((msg, idx) => \n                    idx === aiMessageIndex \n                      ? { ...msg, content: fullResponse }\n                      : msg\n                  ));\n                } else if (data.type === 'complete') {\n                  if (data.followUpSuggestions) {\n                    setFollowUpSuggestions(data.followUpSuggestions || []);\n                  }\n                } else if (data.type === 'error') {\n                  throw new Error(data.message);\n                }\n              } catch (parseError) {\n                console.error(\"Failed to parse SSE data:\", parseError);\n              }\n            }\n          }\n        }\n      }\n      \n      console.log(\"Streaming response completed:\", fullResponse);\n    } catch (error) {\n      console.error(\"Streaming error:\", error);\n      toast({\n        title: \"Virhe\",\n        description: \"Viestin lähettäminen epäonnistui. Yritä uudelleen.\",\n        variant: \"destructive\"\n      });\n      \n      // Remove placeholder message on error\n      setMessages(prev => prev.slice(0, -1));\n    } finally {\n      setIsStreaming(false);\n      setStreamingMessage(\"\");\n    }\n  };\n\n  // Modal chat mutation for AI responses in modal\n  const modalChatMutation = useMutation({\n    mutationFn: async (data: { message: string, context_type?: ContextType }) => {\n      const response = await apiRequest(\"POST\", \"/api/chat\", { \n        message: data.message || data,\n        context_type: data.context_type || currentQuestionContext\n      });\n      return response.json();\n    },\n    onSuccess: (data) => {\n      console.log(\"Modal chat response received:\", data.response);\n      console.log(\"Modal follow-up suggestions received:\", data.followUpSuggestions);\n      \n      // Add AI response to modal messages\n      setModalMessages(prev => [...prev, {\n        content: data.response,\n        isUser: false,\n        timestamp: Date.now()\n      }]);\n      \n      // Update modal follow-up suggestions\n      if (data.followUpSuggestions && Array.isArray(data.followUpSuggestions)) {\n        setModalFollowUpSuggestions(data.followUpSuggestions);\n      }\n    },\n    onError: (error) => {\n      console.error(\"Modal chat error:\", error);\n      setModalMessages(prev => [...prev, {\n        content: \"Anteeksi, en pystynyt käsittelemään kysymystäsi.\",\n        isUser: false,\n        timestamp: Date.now()\n      }]);\n      toast({\n        title: \"Virhe\",\n        description: \"Vastauksen lataaminen epäonnistui.\",\n        variant: \"destructive\"\n      });\n    }\n  });\n\n  const handleSend = () => {\n    const message = inputValue.trim();\n    if (!message || isStreaming) return;\n\n    setInputValue(\"\");\n    // Clear previous follow-up suggestions when sending new message\n    setFollowUpSuggestions([]);\n    sendStreamingMessage(message);\n  };\n\n  const handleFollowUpClick = (suggestion: string) => {\n    if (isStreaming) return;\n\n    // Clear follow-up suggestions immediately when one is clicked\n    setFollowUpSuggestions([]);\n    sendStreamingMessage(suggestion);\n  };\n\n  // Modal chat functions\n  const handleModalSend = () => {\n    const message = modalInputValue.trim();\n    if (!message || modalChatMutation.isPending) return;\n\n    // Add user message to modal\n    setModalMessages(prev => [...prev, {\n      content: message,\n      isUser: true,\n      timestamp: Date.now()\n    }]);\n\n    setModalInputValue(\"\");\n    setModalFollowUpSuggestions([]);\n    modalChatMutation.mutate({ message: message, context_type: currentQuestionContext });\n  };\n\n  const handleModalFollowUpClick = (suggestion: string) => {\n    if (modalChatMutation.isPending) return;\n\n    // Add user message to modal\n    setModalMessages(prev => [...prev, {\n      content: suggestion,\n      isUser: true,\n      timestamp: Date.now()\n    }]);\n\n    setModalFollowUpSuggestions([]);\n    modalChatMutation.mutate({ message: suggestion, context_type: currentQuestionContext });\n  };\n\n  const handleModalKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      handleModalSend();\n    }\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n\n  return (\n    <div className=\"w-full\">\n      <Card className=\"overflow-hidden shadow-xl border-0 bg-gradient-to-br from-slate-800/90 to-slate-900/90 backdrop-blur-sm\" data-testid=\"chat-interface\">\n        {/* Chat Header */}\n        <div className=\"bg-gradient-to-r from-primary to-primary/80 text-primary-foreground px-4 py-3 flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"w-8 h-8 bg-primary-foreground/20 rounded-full flex items-center justify-center\">\n              <Bot className=\"h-4 w-4\" />\n            </div>\n            <div>\n              <h3 className=\"text-base font-semibold\" data-testid=\"chat-title\">AI Chat</h3>\n              <p className=\"text-xs opacity-90\">Johdon kysymykset</p>\n            </div>\n          </div>\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={toggleExpanded}\n            className=\"text-primary-foreground hover:bg-primary-foreground/20 p-1\"\n            data-testid=\"expand-button\"\n            title={isExpanded ? \"Pienennä chat\" : \"Laajenna chat\"}\n          >\n            {isExpanded ? (\n              <Minimize2 className=\"h-4 w-4\" />\n            ) : (\n              <Maximize2 className=\"h-4 w-4\" />\n            )}\n          </Button>\n        </div>\n\n\n\n        {/* Chat Messages */}\n        <div className={`overflow-y-auto p-6 space-y-6 transition-all duration-300 bg-slate-950/20 ${\n          isExpanded ? 'h-[calc(100vh-16rem)]' : 'h-96'\n        }`} data-testid=\"chat-messages\">\n          {messages.map((message, index) => (\n            <div key={index} className=\"chat-message\" data-testid={`message-${index}`}>\n              <div className={`flex items-start space-x-3 ${message.isUser ? 'flex-row-reverse' : ''}`}>\n                <div className={`w-8 h-8 ${message.isUser ? 'bg-secondary' : 'bg-primary'} rounded-full flex items-center justify-center flex-shrink-0`}>\n                  {message.isUser ? (\n                    <User className=\"h-4 w-4 text-secondary-foreground\" />\n                  ) : (\n                    <Bot className=\"h-4 w-4 text-primary-foreground\" />\n                  )}\n                </div>\n                <div className={`${message.isUser ? 'bg-primary text-primary-foreground max-w-xs' : 'bg-muted max-w-2xl'} rounded-lg p-3`}>\n                  <div className={`text-sm ${message.isUser ? '' : 'text-foreground'}`}>\n                    {message.isUser ? (\n                      <span className=\"whitespace-pre-wrap\">{message.content}</span>\n                    ) : (\n                      <div className=\"max-w-none text-gray-100\">\n                        <ReactMarkdown \n                          remarkPlugins={[remarkGfm]}\n                          components={{\n                            h1: ({children}) => <h1 className=\"text-lg font-bold mb-2 text-white\">{children}</h1>,\n                            h2: ({children}) => <h2 className=\"text-base font-semibold mb-2 text-white\">{children}</h2>,\n                            h3: ({children}) => <h3 className=\"text-sm font-medium mb-1 text-gray-100\">{children}</h3>,\n                            p: ({children}) => <p className=\"mb-2 last:mb-0 text-gray-100\">{children}</p>,\n                            ul: ({children}) => <ul className=\"list-disc pl-4 mb-2 text-gray-100\">{children}</ul>,\n                            ol: ({children}) => <ol className=\"list-decimal pl-4 mb-2 text-gray-100\">{children}</ol>,\n                            li: ({children}) => <li className=\"mb-1 text-gray-100\">{children}</li>,\n                            strong: ({children}) => <strong className=\"font-semibold text-white\">{children}</strong>,\n                            em: ({children}) => <em className=\"italic text-gray-200\">{children}</em>,\n                            code: ({children}) => <code className=\"bg-slate-700 text-gray-100 px-1 py-0.5 rounded text-xs\">{children}</code>,\n                            blockquote: ({children}) => <blockquote className=\"border-l-2 border-slate-500 pl-3 italic text-gray-200\">{children}</blockquote>\n                          }}\n                        >\n                          {message.content}\n                        </ReactMarkdown>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n          {isStreaming && (\n            <div className=\"chat-message animate-in fade-in-0 duration-300\" data-testid=\"loading-message\">\n              <div className=\"flex items-start space-x-3\">\n                <div className=\"w-8 h-8 bg-primary rounded-full flex items-center justify-center flex-shrink-0\">\n                  <Bot className=\"h-4 w-4 text-primary-foreground animate-pulse\" />\n                </div>\n                <div className=\"bg-muted rounded-lg p-3 max-w-2xl\">\n                  <div className=\"flex items-center space-x-2 mb-2\">\n                    <div className=\"flex space-x-1\">\n                      <div className=\"w-2 h-2 bg-primary rounded-full animate-bounce\"></div>\n                      <div className=\"w-2 h-2 bg-primary rounded-full animate-bounce\" style={{animationDelay: '0.1s'}}></div>\n                      <div className=\"w-2 h-2 bg-primary rounded-full animate-bounce\" style={{animationDelay: '0.2s'}}></div>\n                    </div>\n                    <p className=\"text-sm text-muted-foreground\">AI miettii vastausta...</p>\n                  </div>\n                  <div className=\"space-y-2\">\n                    <Skeleton className=\"h-3 w-full\" />\n                    <Skeleton className=\"h-3 w-4/5\" />\n                    <Skeleton className=\"h-3 w-3/5\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n          \n          \n          <div ref={messagesEndRef} />\n        </div>\n\n        {/* Follow-up Suggestions - Above Input */}\n        {followUpSuggestions.length > 0 && (\n          <div className=\"border-t border-border bg-slate-800/30 p-4\" data-testid=\"follow-up-suggestions-input\">\n            <p className=\"text-sm font-medium mb-3 text-slate-200\">💡 Suositellut jatkokysymykset johdolle:</p>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\n              {followUpSuggestions.map((suggestion, index) => (\n                <PulseButton\n                  key={index}\n                  variant=\"outline\"\n                  size=\"sm\"\n                  pulse=\"subtle\"\n                  className=\"text-left h-auto py-3 px-4 justify-start whitespace-normal bg-slate-700/50 hover:bg-slate-600/50 text-slate-100 border-slate-600 hover:border-slate-500 animate-in fade-in-0 slide-in-from-bottom-2 duration-300\"\n                  style={{animationDelay: `${index * 100}ms`}}\n                  onClick={() => handleFollowUpClick(suggestion)}\n                  loading={isStreaming}\n                  data-testid={`follow-up-input-${index}`}\n                >\n                  <span className=\"text-xs leading-relaxed\">{suggestion}</span>\n                </PulseButton>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Chat Input */}\n        <div className=\"border-t border-border p-6 bg-slate-900/30\">\n          <div className=\"flex space-x-4\">\n            <Input\n              type=\"text\"\n              placeholder={placeholderText}\n              value={inputValue}\n              onChange={(e) => setInputValue(e.target.value)}\n              onKeyPress={handleKeyPress}\n              disabled={isStreaming}\n              className=\"flex-1 h-12 text-base bg-slate-800/50 border-slate-600 focus:border-primary text-slate-100 placeholder:text-slate-400\"\n              data-testid=\"chat-input\"\n            />\n            <PulseButton\n              onClick={handleSend}\n              loading={isStreaming}\n              disabled={!inputValue.trim()}\n              size=\"lg\"\n              pulse=\"subtle\"\n              className=\"h-12 px-6\"\n              data-testid=\"send-button\"\n            >\n              <Send className=\"h-5 w-5\" />\n            </PulseButton>\n          </div>\n          <div className=\"mt-3 flex items-center justify-between text-xs text-slate-400\">\n            <span>💼 Räätälöidyt vastaukset Humm Group Oy:n johdolle</span>\n            <div className=\"flex space-x-2\">\n              <Badge \n                variant=\"secondary\" \n                className=\"cursor-pointer hover:opacity-80 bg-slate-700 text-slate-200\"\n                onClick={() => setInputValue(\"Millä aikataululla voimme toteuttaa AI-asiakaspalvelun?\")}\n                data-testid=\"example-timeline\"\n              >\n                Aikataulu\n              </Badge>\n              <Badge \n                variant=\"secondary\" \n                className=\"cursor-pointer hover:opacity-80 bg-slate-700 text-slate-200\"\n                onClick={() => setInputValue(\"Mikä on ROI AI-investoinnille asiakaspalvelussa?\")}\n                data-testid=\"example-roi\"\n              >\n                ROI & Hyödyt\n              </Badge>\n            </div>\n          </div>\n        </div>\n\n        {/* MCP Section - TÄRKEÄ! */}\n        <div className={`border-t border-border bg-emerald-950 transition-all duration-300 ${\n          isExpanded ? 'max-h-0 overflow-hidden opacity-0 p-0' : 'p-4 pb-6 max-h-none opacity-100'\n        }`}>\n          <div className=\"flex items-center gap-2 mb-3\">\n            <Shield className=\"h-5 w-5 text-emerald-600\" />\n            <h4 className=\"text-sm font-semibold text-emerald-100\">Model Context Protocol (MCP) - TÄRKEÄ!</h4>\n          </div>\n          <p className=\"text-xs text-emerald-300 mb-3\">\n            MCP mahdollistaa turvallisen AI-integraation yritysjärjestelmiin\n          </p>\n          <div className=\"grid grid-cols-1 gap-2\">\n            {mcpQuestions.map((question) => {\n              const IconComponent = question.icon;\n              return (\n                <PulseButton\n                  key={question.id}\n                  variant=\"outline\"\n                  size=\"sm\"\n                  pulse=\"subtle\"\n                  className=\"h-auto p-3 text-xs text-left justify-start border-emerald-800 hover:bg-emerald-900 hover:border-emerald-700 text-emerald-50 hover:text-white\"\n                  onClick={() => handleQuestionClick(question.id)}\n                  loading={questionMutation.isPending}\n                  disabled={questionMutation.isPending}\n                  data-testid={`question-${question.id}`}\n                >\n                  <IconComponent className=\"h-4 w-4 mr-2 text-emerald-600 flex-shrink-0\" />\n                  <span className=\"leading-tight\">{question.question}</span>\n                </PulseButton>\n              );\n            })}\n          </div>\n        </div>\n\n        {/* Suositut kysymykset - Featured */}\n        <div className={`border-t border-border transition-all duration-300 ${\n          isExpanded ? 'max-h-0 overflow-hidden opacity-0 p-0' : 'p-6 opacity-100'\n        }`}>\n          <h4 className=\"text-base font-semibold mb-4 text-white\">🎯 Suositut kysymykset johdolle</h4>\n          <div className=\"space-y-3\">\n            {/* Top 6 featured questions - hyperpersonalization and proactivity first */}\n            <PulseButton\n              variant=\"outline\"\n              size=\"lg\"\n              pulse=\"subtle\"\n              className=\"w-full h-auto p-4 text-left justify-start bg-slate-700/30 hover:bg-slate-600/50 text-slate-100 border-slate-600 hover:border-purple-500 transition-all duration-200\"\n              onClick={() => handleQuestionClick(\"hyperpersonalization-trend\")}\n              disabled={questionMutation.isPending}\n              data-testid=\"featured-question-personalization\"\n            >\n              <Target className=\"h-5 w-5 mr-3 text-purple-400 flex-shrink-0\" />\n              <div>\n                <div className=\"font-medium\">Kuinka hyperpersonointi mullistaa asiakaskokemuksen?</div>\n                <div className=\"text-xs text-slate-400 mt-1\">Personalisaation tulevaisuus</div>\n              </div>\n            </PulseButton>\n\n            <PulseButton\n              variant=\"outline\"\n              size=\"lg\"\n              pulse=\"subtle\"\n              className=\"w-full h-auto p-4 text-left justify-start bg-slate-700/30 hover:bg-slate-600/50 text-slate-100 border-slate-600 hover:border-orange-500 transition-all duration-200\"\n              onClick={() => handleQuestionClick(\"proactive-service-trend\")}\n              disabled={questionMutation.isPending}\n              data-testid=\"featured-question-proactive\"\n            >\n              <Zap className=\"h-5 w-5 mr-3 text-orange-400 flex-shrink-0\" />\n              <div>\n                <div className=\"font-medium\">Miksi proaktiivinen asiakaspalvelu on vuoden 2025 megatrendi?</div>\n                <div className=\"text-xs text-slate-400 mt-1\">Ennakoiva asiakaspalvelu</div>\n              </div>\n            </PulseButton>\n            \n            <PulseButton\n              variant=\"outline\"\n              size=\"lg\"\n              pulse=\"subtle\"\n              className=\"w-full h-auto p-4 text-left justify-start bg-slate-700/30 hover:bg-slate-600/50 text-slate-100 border-slate-600 hover:border-blue-500 transition-all duration-200\"\n              onClick={() => handleQuestionClick(\"cx-trends-2025-featured\")}\n              disabled={questionMutation.isPending}\n              data-testid=\"featured-question-trends\"\n            >\n              <BarChart3 className=\"h-5 w-5 mr-3 text-blue-400 flex-shrink-0\" />\n              <div>\n                <div className=\"font-medium\">2025 suurimmat CX-trendit ja AI:n rooli</div>\n                <div className=\"text-xs text-slate-400 mt-1\">Strateginen näkemys tulevaisuudesta</div>\n              </div>\n            </PulseButton>\n            \n            <PulseButton\n              variant=\"outline\"\n              size=\"lg\"\n              pulse=\"subtle\"\n              className=\"w-full h-auto p-4 text-left justify-start bg-slate-700/30 hover:bg-slate-600/50 text-slate-100 border-slate-600 hover:border-green-500 transition-all duration-200\"\n              onClick={() => handleQuestionClick(\"roi-measurement\")}\n              disabled={questionMutation.isPending}\n              data-testid=\"featured-question-roi\"\n            >\n              <DollarSign className=\"h-5 w-5 mr-3 text-green-400 flex-shrink-0\" />\n              <div>\n                <div className=\"font-medium\">Miten AI-investoinnista saa mitattavaa arvoa?</div>\n                <div className=\"text-xs text-slate-400 mt-1\">ROI ja konkreettiset hyödyt</div>\n              </div>\n            </PulseButton>\n\n            <PulseButton\n              variant=\"outline\"\n              size=\"lg\"\n              pulse=\"subtle\"\n              className=\"w-full h-auto p-4 text-left justify-start bg-slate-700/30 hover:bg-slate-600/50 text-slate-100 border-slate-600 hover:border-red-500 transition-all duration-200\"\n              onClick={() => handleQuestionClick(\"reduce-manual-work\")}\n              disabled={questionMutation.isPending}\n              data-testid=\"featured-question-automation\"\n            >\n              <Workflow className=\"h-5 w-5 mr-3 text-red-400 flex-shrink-0\" />\n              <div>\n                <div className=\"font-medium\">Miten automaatio voi vähentää manuaalista työtä?</div>\n                <div className=\"text-xs text-slate-400 mt-1\">Prosessien tehostaminen</div>\n              </div>\n            </PulseButton>\n\n            <PulseButton\n              variant=\"outline\"\n              size=\"lg\"\n              pulse=\"subtle\"\n              className=\"w-full h-auto p-4 text-left justify-start bg-slate-700/30 hover:bg-slate-600/50 text-slate-100 border-slate-600 hover:border-cyan-500 transition-all duration-200\"\n              onClick={() => handleQuestionClick(\"data-quality\")}\n              disabled={questionMutation.isPending}\n              data-testid=\"featured-question-data\"\n            >\n              <Shield className=\"h-5 w-5 mr-3 text-cyan-400 flex-shrink-0\" />\n              <div>\n                <div className=\"font-medium\">Miten asiakasdata pysyy laadukkaana ja suojattuna?</div>\n                <div className=\"text-xs text-slate-400 mt-1\">Tietosuoja ja laatuvaatimukset</div>\n              </div>\n            </PulseButton>\n          </div>\n\n          {/* More topics toggle */}\n          <div className=\"mt-4 pt-4 border-t border-slate-600/50\">\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              className=\"w-full text-slate-300 hover:text-white hover:bg-slate-700/50\"\n              onClick={toggleExpanded}\n              data-testid=\"toggle-more-questions\"\n            >\n              <MessageCircle className=\"h-4 w-4 mr-2\" />\n              Näytä lisää aiheita ({topicAreas.length} kategoriaa)\n            </Button>\n          </div>\n        </div>\n\n        {/* Extended questions view */}\n        <div className={`border-t border-border transition-all duration-300 ${\n          isExpanded ? 'p-6 max-h-96 overflow-y-auto opacity-100' : 'max-h-0 overflow-hidden opacity-0 p-0'\n        }`}>\n          <div className=\"space-y-4\">\n            {topicAreas.slice(0, 6).map((topic) => {\n              const TopicIcon = topic.icon;\n              return (\n                <div key={topic.id} className=\"space-y-2\">\n                  <div className=\"flex items-center gap-2\">\n                    <TopicIcon className={`h-4 w-4 ${topic.color.replace('bg-', 'text-')}`} />\n                    <h5 className=\"text-sm font-medium text-white\">{topic.title}</h5>\n                  </div>\n                  <div className=\"grid grid-cols-1 gap-2 ml-6\">\n                    {topic.questions.slice(0, 2).map((question) => {\n                      const QuestionIcon = question.icon;\n                      return (\n                        <Button\n                          key={question.id}\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          className=\"h-auto p-3 text-xs text-left justify-start hover:bg-slate-700/50 text-slate-300 hover:text-white\"\n                          onClick={() => handleQuestionClick(question.id)}\n                          disabled={questionMutation.isPending}\n                          data-testid={`question-${question.id}`}\n                        >\n                          <QuestionIcon className=\"h-3 w-3 mr-2 text-slate-400 flex-shrink-0\" />\n                          <span className=\"leading-tight\">{question.question}</span>\n                        </Button>\n                      );\n                    })}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n          \n          <div className=\"mt-4 pt-4 border-t border-slate-600/50\">\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              className=\"w-full text-slate-400 hover:text-slate-200\"\n              onClick={toggleExpanded}\n              data-testid=\"collapse-questions\"\n            >\n              <Minimize2 className=\"h-4 w-4 mr-2\" />\n              Piilota lisäkysymykset\n            </Button>\n          </div>\n        </div>\n      </Card>\n\n      {/* MCP Deep Analysis Button */}\n      <div className=\"mt-6 mb-8\">\n        <Dialog open={mcpModalOpen} onOpenChange={setMcpModalOpen}>\n          <DialogTrigger asChild>\n            <Button \n              variant=\"outline\" \n              className=\"w-full bg-emerald-950 border-emerald-800 hover:bg-emerald-900 text-emerald-300\"\n              data-testid=\"mcp-deep-analysis-button\"\n            >\n              <FileText className=\"h-4 w-4 mr-2\" />\n              Syväanalyysi MCP\n            </Button>\n          </DialogTrigger>\n          <DialogContent className=\"max-w-4xl max-h-[90vh]\">\n            <DialogHeader>\n              <DialogTitle className=\"text-xl font-bold text-emerald-300 flex items-center gap-2\">\n                <Shield className=\"h-5 w-5\" />\n                Model Context Protocol (MCP) - Syväanalyysi\n              </DialogTitle>\n              <DialogDescription>\n                Kattava analyysi MCP:n käytöstä ja tietoturvaeduista AI-integraatioissa\n              </DialogDescription>\n            </DialogHeader>\n            <ScrollArea className=\"h-[70vh] pr-4\">\n              <div className=\"space-y-6\">\n                {/* Johdanto */}\n                <section>\n                  <h3 className=\"text-lg font-semibold mb-3 text-emerald-600 dark:text-emerald-400 flex items-center gap-2\">\n                    <HelpCircle className=\"h-4 w-4\" />\n                    Mikä on MCP ja miksi sitä tarvitaan?\n                  </h3>\n                  <div className=\"max-w-none text-gray-100\">\n                    <p className=\"mb-3 text-gray-100\">\n                      <strong className=\"text-white\">Model Context Protocol (MCP)</strong> on avoin standardi, joka määrittelee tavan liittää suuria kielimalleja ja tekoälyagentteja ulkoisiin tieto- ja työkalulähteisiin. Sen avulla AI-avustajat eivät enää ole eristyksissa vain omien koulutusdatojensa varassa, vaan ne voivat päästä käsiksi reaaliaikaiseen tietoon ja järjestelmiin turvallisesti.\n                    </p>\n                    <p className=\"mb-3 text-gray-100\">\n                      MCP toimii kuin eräänlainen erikoistunut API-rajapinta tekoälylle: AI-agentti voi sen kautta \"keskustella\" yrityksen tietokantojen, sovellusten tai palveluiden kanssa yhtenäisellä tavalla. Tämä avaa uusia käyttömahdollisuuksia – esimerkiksi AI voi hakea tietoa yrityksen sisäisistä järjestelmistä, päivittää tietueita tai suorittaa toimintoja.\n                    </p>\n                    <div className=\"bg-yellow-950 border border-yellow-200 dark:border-yellow-800 rounded-lg p-3 mb-3\">\n                      <p className=\"text-sm text-yellow-100\">\n                        <strong className=\"text-yellow-50\">Huomio:</strong> MCP on vain rajapinta – se itsessään ei sisällä automaattisesti turvamekanismeja kuten autentikointia tai pääsynhallintaa. Organisaation tehtävä on päättää, mitkä \"ovet ovat auki ja kenelle\".\n                      </p>\n                    </div>\n                  </div>\n                </section>\n\n                {/* Käyttöhyödyt */}\n                <section>\n                  <h3 className=\"text-lg font-semibold mb-3 text-emerald-600 dark:text-emerald-400 flex items-center gap-2\">\n                    <TrendingUp className=\"h-4 w-4\" />\n                    MCP:n hyödyt käytön näkökulmasta\n                  </h3>\n                  <div className=\"max-w-none text-gray-100\">\n                    <p className=\"mb-3 text-gray-100\">\n                      Käyttöympäristön kannalta MCP:n suurin etu on, että se parantaa tekoälyn kykyä antaa relevantteja vastauksia ja suorittaa tehtäviä käyttämällä organisaation omaa dataa ja työkaluja.\n                    </p>\n                    \n                    <div className=\"bg-slate-800 border border-slate-600 rounded-lg p-4 mb-4\">\n                      <h4 className=\"font-semibold mb-2 text-white\">Käytännön esimerkki: Asiakaspalveluchatbot</h4>\n                      <p className=\"text-sm mb-2 text-gray-100\">\n                        MCP:n avulla asiakaspalvelubot voi hakea tietoa useista lähteistä asiakkaan kysymyksen ratkaisemiseksi:\n                      </p>\n                      <ul className=\"text-sm list-disc pl-4 space-y-1 text-gray-100\">\n                        <li>Tarkistaa tilauksen tilan ERP-järjestelmästä</li>\n                        <li>Hakee tuotetietoja tietokannasta</li>\n                        <li>Luo tukipyynnön tiketöintijärjestelmään</li>\n                        <li>Aloittaa palautusprosessin automaattisesti</li>\n                      </ul>\n                    </div>\n\n                    <p className=\"mb-3 text-gray-100\">\n                      <strong className=\"text-white\">Organisaation hyödyt:</strong> Rutiinitehtävät hoituvat automatisoidusti, henkilöstö voi keskittyä vaativampiin tehtäviin, ja AI:n toimet perustuvat ajantasaiseen ja oikeaan tietoon.\n                    </p>\n                  </div>\n                </section>\n\n                {/* Tietoturva */}\n                <section>\n                  <h3 className=\"text-lg font-semibold mb-3 text-red-600 dark:text-red-400 flex items-center gap-2\">\n                    <Shield className=\"h-4 w-4\" />\n                    Tietoturva ja pääsynhallinta\n                  </h3>\n                  <div className=\"max-w-none text-gray-100\">\n                    <p className=\"mb-4 text-gray-100\">\n                      MCP:n tuoma voimakas integraatiokyky asettaa tietoturvalle erityisvaatimuksia. Koska AI-agentti voi MCP:n kautta toimia ikään kuin käyttäjänä eri järjestelmissä, on välttämätöntä varmistaa asianmukainen pääsynhallinta.\n                    </p>\n\n                    <div className=\"grid gap-4 mb-4\">\n                      <div className=\"bg-red-950 border border-red-200 dark:border-red-800 rounded-lg p-4\">\n                        <h4 className=\"font-semibold mb-2 text-red-200 flex items-center gap-2\">\n                          <Users className=\"h-4 w-4\" />\n                          1. Roolipohjainen pääsy (RBAC)\n                        </h4>\n                        <p className=\"text-sm mb-2 text-red-100\">\n                          AI-agentille annetaan vain ne oikeudet, jotka sen tehtävän hoitamiseen tarvitaan – ei enempää. Periaatteena on <strong className=\"text-red-50\">vähimmän oikeuden periaate</strong>.\n                        </p>\n                        <p className=\"text-sm text-red-100\">\n                          <em>Esimerkki:</em> Asiakaspalvelubotin MCP-palvelin voidaan toteuttaa niin, että botti pystyy hakemaan vain kyseisen asiakkaan tiedot CRM:stä, ei koskaan muiden asiakkaiden tietoja.\n                        </p>\n                      </div>\n\n                      <div className=\"bg-orange-950 border border-orange-200 dark:border-orange-800 rounded-lg p-4\">\n                        <h4 className=\"font-semibold mb-2 text-orange-200 flex items-center gap-2\">\n                          <Target className=\"h-4 w-4\" />\n                          2. Eksplisiittinen kontekstin rajaus\n                        </h4>\n                        <p className=\"text-sm mb-2 text-orange-100\">\n                          Tekoälylle syötetään vain kulloinkin tarpeellinen tieto tai päästään käsiksi vain rajattuun resurssiin. Konteksti voidaan rajata tiettyyn asiakkaaseen, tukipyyntöön tai tehtäväalueeseen.\n                        </p>\n                        <p className=\"text-sm text-orange-100\">\n                          <em>Hyöty:</em> AI ei voi vahingossakaan lipsauttaa tietoja kontekstin ulkopuolelta, koska se ei pääse niihin käsiksi.\n                        </p>\n                      </div>\n\n                      <div className=\"bg-purple-950 border border-purple-200 dark:border-purple-800 rounded-lg p-4\">\n                        <h4 className=\"font-semibold mb-2 text-purple-200 flex items-center gap-2\">\n                          <Database className=\"h-4 w-4\" />\n                          3. Audit-jäljet ja valvonta\n                        </h4>\n                        <p className=\"text-sm mb-2 text-purple-100\">\n                          Kaikesta AI:n toiminnasta jää läpinäkyvä loki. Järjestelmä kirjaa ylös kuka/mikä agentti teki mitä, mihin aikaan, ja oliko toimi sallittu.\n                        </p>\n                        <p className=\"text-sm text-purple-100\">\n                          <em>Esimerkki lokimerkinnästä:</em> \"AI-agentti X haki asiakkaan Y osoitetiedot CRM:stä 21.9.2025 klo 14:05 käyttäjän Z pyynnöstä\"\n                        </p>\n                      </div>\n                    </div>\n\n                    <div className=\"bg-gray-900 border border-gray-200 dark:border-gray-700 rounded-lg p-3\">\n                      <h4 className=\"font-semibold mb-2 text-white\">Lisäturvatoimet:</h4>\n                      <ul className=\"text-sm list-disc pl-4 space-y-1 text-gray-100\">\n                        <li>Autentikointi ja salaus (TLS-suojatut MCP-kutsut)</li>\n                        <li>Syötevalidointi (estää haitallisten syötteiden johdattelun)</li>\n                        <li>Nopeusrajoitukset (estetään ylikuormitus)</li>\n                        <li>Hätätapauksien esto (työkalujen valkolistat, hälytykset)</li>\n                      </ul>\n                    </div>\n                  </div>\n                </section>\n\n                {/* Sääntely ja luottamus */}\n                <section>\n                  <h3 className=\"text-lg font-semibold mb-3 text-slate-400 flex items-center gap-2\">\n                    <Scale className=\"h-4 w-4\" />\n                    Sääntely- ja luottamusnäkökulma\n                  </h3>\n                  <div className=\"prose prose-sm dark:prose-invert max-w-none\">\n                    <p className=\"mb-3\">\n                      MCP:n käyttöönotto merkitsee uudenlaista vastuuta sääntelyn noudattamisesta ja interessiryhmien luottamuksen säilyttämisestä. Koska AI pääsee käsiksi potentiaalisesti arkaluonteiseen dataan, läpinäkyvyys ja kontrolli korostuvat.\n                    </p>\n\n                    <div className=\"bg-slate-800 border border-slate-600 rounded-lg p-4 mb-4\">\n                      <h4 className=\"font-semibold mb-2 text-white\">GDPR ja vaatimustenmukaisuus</h4>\n                      <p className=\"text-sm mb-2\">\n                        EU:n GDPR edellyttää, että henkilötietoja käsitellään asianmukaisin suojamekanismein ja vain käyttötarkoituksiinsa rajatusti. MCP:n roolipohjainen pääsy ja kontekstin rajaus tukevat näitä vaatimuksia.\n                      </p>\n                      <p className=\"text-sm\">\n                        <strong>Compliance-periaate:</strong> Jokainen tekoälytoiminto on nähtävä kuin mikä tahansa liiketoimintatapahtuma, joka pitää tarvittaessa voida tarkastaa jälkikäteen.\n                      </p>\n                    </div>\n\n                    <div className=\"bg-green-950 border border-green-200 dark:border-green-800 rounded-lg p-4\">\n                      <h4 className=\"font-semibold mb-2 text-green-200\">Asiakkaiden luottamus</h4>\n                      <p className=\"text-sm mb-2\">\n                        Tutkimusten mukaan jopa 66% asiakkaista on huolissaan tietosuojasta asioidessaan tekoälyä hyödyntävien palveluiden kanssa.\n                      </p>\n                      <p className=\"text-sm\">\n                        <strong>Ratkaisu:</strong> Läpinäkyvä viestintä siitä, mitä tietoja AI haki asiakkaan kysymyksen ratkaisemiseksi ja että sillä ei ole pääsyä mihinkään muuhun.\n                      </p>\n                    </div>\n                  </div>\n                </section>\n\n                {/* Johtopäätökset */}\n                <section>\n                  <h3 className=\"text-lg font-semibold mb-3 text-white flex items-center gap-2\">\n                    <Star className=\"h-4 w-4\" />\n                    Johtopäätökset\n                  </h3>\n                  <div className=\"prose prose-sm dark:prose-invert max-w-none\">\n                    <p className=\"mb-3\">\n                      Model Context Protocol tarjoaa uuden tehokkaan tavan integroida tekoäly osaksi yrityksen tietojärjestelmiä ja prosesseja. Sen avulla AI pystyy hyödyntämään vain haluttua osajoukkoa tietoa tuottaakseen parempia vastauksia ja hoitaakseen tehtäviä automaattisesti.\n                    </p>\n                    \n                    <div className=\"bg-emerald-950 border border-emerald-200 dark:border-emerald-800 rounded-lg p-4\">\n                      <h4 className=\"font-semibold mb-2 text-emerald-100\">MCP:n arvon kaksijako:</h4>\n                      <div className=\"text-sm space-y-2\">\n                        <p><strong>Mahdollistaja:</strong> Tuo tekoälyn osaksi arkea ennennäkemättömillä tavoilla</p>\n                        <p><strong>Hallinnan työväline:</strong> Tarjoaa keinot rajata ja seurata tekoälyn toimintaa</p>\n                      </div>\n                    </div>\n\n                    <p className=\"mt-4\">\n                      <strong>Lopputulos:</strong> Hyödyntämällä MCP:tä vastuullisesti organisaatiot voivat nousta tekoälyn seuraavalle tasolle ilman, että kontrolli tai luottamus karkaa käsistä.\n                    </p>\n                  </div>\n                </section>\n\n                {/* Lähteet */}\n                <section>\n                  <h3 className=\"text-lg font-semibold mb-3 text-white flex items-center gap-2\">\n                    <ExternalLink className=\"h-4 w-4\" />\n                    Lähteet ja lisätietoa\n                  </h3>\n                  <div className=\"text-xs text-white space-y-2\">\n                    <div>\n                      <p className=\"font-medium\">Keskeiset lähteet:</p>\n                      <ul className=\"list-disc pl-4 mt-1 space-y-1\">\n                        <li>Anthropic: Introducing the Model Context Protocol</li>\n                        <li>CyberArk: What is Model Context Protocol (MCP)?</li>\n                        <li>Cerbos: MCP Authorization with Fine-Grained Access Control</li>\n                        <li>Zenity: Securing the Model Context Protocol</li>\n                        <li>USDM: The Model Context Protocol in Life Sciences</li>\n                      </ul>\n                    </div>\n                  </div>\n                </section>\n              </div>\n            </ScrollArea>\n          </DialogContent>\n        </Dialog>\n      \n      {/* AI Response Modal */}\n      <Dialog open={aiModalOpen} onOpenChange={setAiModalOpen}>\n        <DialogContent className=\"max-w-4xl max-h-[90vh]\">\n          <DialogHeader>\n            <DialogTitle className=\"text-lg font-bold text-primary flex items-center gap-2\">\n              <Bot className=\"h-5 w-5\" />\n              AI Assistentti\n            </DialogTitle>\n            <DialogDescription className=\"text-sm text-muted-foreground\">\n              {currentQuestion}\n            </DialogDescription>\n          </DialogHeader>\n          \n          {/* Modal Chat Messages */}\n          <ScrollArea className=\"h-[60vh] pr-4 border rounded-lg\">\n            <div className=\"p-4 space-y-4\">\n              {modalMessages.map((message, index) => (\n                <div key={index} className=\"chat-message\" data-testid={`modal-message-${index}`}>\n                  <div className={`flex items-start space-x-3 ${message.isUser ? 'flex-row-reverse' : ''}`}>\n                    <div className={`w-8 h-8 ${message.isUser ? 'bg-secondary' : 'bg-primary'} rounded-full flex items-center justify-center flex-shrink-0`}>\n                      {message.isUser ? (\n                        <User className=\"h-4 w-4 text-secondary-foreground\" />\n                      ) : (\n                        <Bot className=\"h-4 w-4 text-primary-foreground\" />\n                      )}\n                    </div>\n                    <div className={`${message.isUser ? 'bg-primary text-primary-foreground max-w-xs' : 'bg-muted max-w-2xl'} rounded-lg p-3`}>\n                      <div className={`text-sm ${message.isUser ? '' : 'text-foreground'}`}>\n                        {message.isUser ? (\n                          <span className=\"whitespace-pre-wrap\">{message.content}</span>\n                        ) : (\n                          <div className=\"max-w-none text-gray-100\">\n                            <ReactMarkdown \n                              remarkPlugins={[remarkGfm]}\n                              components={{\n                                h1: ({children}) => <h1 className=\"text-lg font-bold mb-2 text-white\">{children}</h1>,\n                                h2: ({children}) => <h2 className=\"text-base font-semibold mb-2 text-white\">{children}</h2>,\n                                h3: ({children}) => <h3 className=\"text-sm font-medium mb-1 text-gray-100\">{children}</h3>,\n                                p: ({children}) => <p className=\"mb-2 last:mb-0 text-gray-100\">{children}</p>,\n                                ul: ({children}) => <ul className=\"list-disc pl-4 mb-2 text-gray-100\">{children}</ul>,\n                                ol: ({children}) => <ol className=\"list-decimal pl-4 mb-2 text-gray-100\">{children}</ol>,\n                                li: ({children}) => <li className=\"mb-1 text-gray-100\">{children}</li>,\n                                strong: ({children}) => <strong className=\"font-semibold text-white\">{children}</strong>,\n                                em: ({children}) => <em className=\"italic text-gray-200\">{children}</em>,\n                                code: ({children}) => <code className=\"bg-slate-700 text-gray-100 px-1 py-0.5 rounded text-xs\">{children}</code>,\n                                blockquote: ({children}) => <blockquote className=\"border-l-2 border-slate-500 pl-3 italic text-gray-200\">{children}</blockquote>\n                              }}\n                            >\n                              {message.content}\n                            </ReactMarkdown>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ))}\n              \n              {modalChatMutation.isPending && (\n                <div className=\"chat-message\" data-testid=\"modal-loading-message\">\n                  <div className=\"flex items-start space-x-3\">\n                    <div className=\"w-8 h-8 bg-primary rounded-full flex items-center justify-center flex-shrink-0\">\n                      <Bot className=\"h-4 w-4 text-primary-foreground animate-pulse\" />\n                    </div>\n                    <div className=\"bg-muted rounded-lg p-3 max-w-xs\">\n                      <p className=\"text-sm text-muted-foreground\">Kirjoittaa...</p>\n                    </div>\n                  </div>\n                </div>\n              )}\n              \n              {/* Modal Follow-up Suggestions */}\n              {modalFollowUpSuggestions.length > 0 && (\n                <div className=\"chat-message\" data-testid=\"modal-follow-up-suggestions\">\n                  <div className=\"flex items-start space-x-3\">\n                    <div className=\"w-8 h-8 bg-accent rounded-full flex items-center justify-center flex-shrink-0\">\n                      <MessageCircle className=\"h-4 w-4 text-accent-foreground\" />\n                    </div>\n                    <div className=\"bg-accent/50 rounded-lg p-3 max-w-2xl\">\n                      <p className=\"text-sm font-medium mb-2 text-accent-foreground\">Jatkokysymyksiä:</p>\n                      <div className=\"space-y-2\">\n                        {modalFollowUpSuggestions.map((suggestion, index) => (\n                          <Button\n                            key={index}\n                            variant=\"outline\"\n                            size=\"sm\"\n                            className=\"text-left h-auto py-2 px-3 justify-start whitespace-normal bg-background/80 hover:bg-background text-foreground\"\n                            onClick={() => handleModalFollowUpClick(suggestion)}\n                            data-testid={`modal-follow-up-${index}`}\n                          >\n                            {suggestion}\n                          </Button>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n              \n              <div ref={modalMessagesEndRef} />\n            </div>\n          </ScrollArea>\n          \n          {/* Modal Chat Input */}\n          <div className=\"border-t border-border p-4 bg-background\">\n            <div className=\"flex space-x-3\">\n              <Input\n                type=\"text\"\n                placeholder=\"Jatka keskustelua...\"\n                value={modalInputValue}\n                onChange={(e) => setModalInputValue(e.target.value)}\n                onKeyPress={handleModalKeyPress}\n                disabled={modalChatMutation.isPending}\n                className=\"flex-1\"\n                data-testid=\"modal-chat-input\"\n              />\n              <Button\n                onClick={handleModalSend}\n                disabled={modalChatMutation.isPending || !modalInputValue.trim()}\n                size=\"icon\"\n                data-testid=\"modal-send-button\"\n              >\n                <Send className=\"h-4 w-4\" />\n              </Button>\n            </div>\n            <div className=\"mt-2 text-xs text-muted-foreground\">\n              <span>Kysy tarkentavia kysymyksiä aiheesta tai valitse jatkokysymys yllä olevista ehdotuksista.</span>\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n      </div>\n\n      {/* Quick Stats */}\n      <Card className=\"mt-6\" data-testid=\"quick-stats\">\n        <CardContent className=\"p-4\">\n          <h4 className=\"font-semibold text-foreground mb-3\">Yhteenveto tuloksista</h4>\n          <div className=\"space-y-3\">\n            <div className=\"flex justify-between items-center\">\n              <span className=\"text-sm text-muted-foreground\">Keskimääräinen automaatioaste</span>\n              <span className=\"font-semibold text-foreground\" data-testid=\"stat-automation\">60-95%</span>\n            </div>\n            <div className=\"flex justify-between items-center\">\n              <span className=\"text-sm text-muted-foreground\">Vastausajan parannus</span>\n              <span className=\"font-semibold text-foreground\" data-testid=\"stat-response\">Tunneista sekunteihin</span>\n            </div>\n            <div className=\"flex justify-between items-center\">\n              <span className=\"text-sm text-muted-foreground\">Asiakastyytyväisyys</span>\n              <span className=\"font-semibold text-foreground\" data-testid=\"stat-satisfaction\">+10pp keskimäärin</span>\n            </div>\n            <div className=\"flex justify-between items-center\">\n              <span className=\"text-sm text-muted-foreground\">Saatavuus</span>\n              <span className=\"font-semibold text-foreground\" data-testid=\"stat-availability\">24/7</span>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":65249},"client/src/components/page-header.tsx":{"content":"import { Building, ChartLine, Clock, Globe } from \"lucide-react\";\n\nexport function PageHeader() {\n  return (\n    <div className=\"mb-8\">\n      <h1 className=\"text-3xl font-bold text-foreground mb-4\">\n        Onnistuneet AI-Asiakaspalvelutoteutukset\n      </h1>\n      <p className=\"text-lg text-muted-foreground mb-6\">\n        Kuusi todistettua case-esimerkkiä tekoälyn hyödyntämisestä asiakaspalvelussa. \n        Tutustu toteutuksiin ja kysy tarkempia kysymyksiä chat-ikkunasta.\n      </p>\n      <div className=\"flex items-center space-x-6 text-sm text-muted-foreground\">\n        <div className=\"flex items-center space-x-2\">\n          <ChartLine className=\"h-4 w-4 text-primary\" />\n          <span>6 Onnistunutta toteutusta</span>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <Clock className=\"h-4 w-4 text-primary\" />\n          <span>Päivitetty 2025</span>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <Globe className=\"h-4 w-4 text-primary\" />\n          <span>Kansainväliset & kotimaiset caset</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":1125},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/types.ts":{"content":"export interface CaseMetric {\n  label: string;\n  value: string;\n  type: 'success' | 'efficiency' | 'savings' | 'metric';\n}\n\nexport interface Case {\n  id: string;\n  company: string;\n  country: string;\n  industry: string;\n  solution_name: string;\n  description: string;\n  key_metrics: CaseMetric[];\n  learning_points: string[];\n  category: string;\n  icon: string;\n  full_text: string;\n}\n\nexport interface ChatMessage {\n  id: string;\n  message: string;\n  response: string;\n  timestamp: number;\n}\n","size_bytes":493},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/home.tsx":{"content":"import { useState, useEffect, useCallback } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { Link } from \"wouter\";\nimport { PageHeader } from \"@/components/page-header\";\nimport { CaseCard } from \"@/components/case-card\";\nimport { ChatInterface } from \"@/components/chat-interface\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { PulseButton } from \"@/components/ui/pulse-button\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Input } from \"@/components/ui/input\";\nimport { AlertCircle, Bot, Building, Rocket, Users, TrendingUp, BarChart, User, Send, Star, Target, Briefcase, Code } from \"lucide-react\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport type { Case } from \"@/lib/types\";\n\ninterface ChatMessage {\n  content: string;\n  isUser: boolean;\n  timestamp: number;\n}\n\n// Tech Lead Modal Component\nfunction TechLeadModal({ isOpen, onClose }: { isOpen: boolean; onClose: () => void }) {\n  const [messages, setMessages] = useState<ChatMessage[]>([]);\n  const [hasGreeted, setHasGreeted] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [followUpSuggestions] = useState<string[]>([\n    \"Mitä arvoa voisit tuoda Hummille?\",\n    \"Kerro taustastasi ja osaamisestasi\",\n    \"Mikä on ydinosaamistasi?\",\n    \"Miksi juuri sinut?\"\n  ]);\n  const { toast } = useToast();\n\n  const techLeadChatMutation = useMutation({\n    mutationFn: async (data: { message: string }) => {\n      const response = await apiRequest(\"POST\", \"/api/tech-lead-chat\", { \n        message: data.message\n      });\n      return response.json();\n    },\n    onSuccess: (data) => {\n      setMessages(prev => [...prev, {\n        content: data.response,\n        isUser: false,\n        timestamp: Date.now()\n      }]);\n    },\n    onError: () => {\n      toast({\n        title: \"Virhe\",\n        description: \"Viestin lähettäminen epäonnistui. Yritä uudelleen.\",\n        variant: \"destructive\"\n      });\n    }\n  });\n\n  const handleSend = () => {\n    const message = inputValue.trim();\n    if (!message || techLeadChatMutation.isPending) return;\n\n    setMessages(prev => [...prev, {\n      content: message,\n      isUser: true,\n      timestamp: Date.now()\n    }]);\n\n    setInputValue(\"\");\n    techLeadChatMutation.mutate({ message });\n  };\n\n  const handleExampleClick = (question: string) => {\n    if (techLeadChatMutation.isPending) return;\n\n    setMessages(prev => [...prev, {\n      content: question,\n      isUser: true,\n      timestamp: Date.now()\n    }]);\n\n    techLeadChatMutation.mutate({ message: question });\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n\n  // Optimized greeting function to avoid dependency on mutation object\n  const sendGreeting = useCallback(() => {\n    if (!techLeadChatMutation.isPending) {\n      setHasGreeted(true);\n      techLeadChatMutation.mutate({ \n        message: \"Tervehdi käyttäjää AI-Panuna ja esittäydy lyhyesti Humm Group Oy:n Tech Lead -hakijana. Kerro että olet tutustunut heidän toimintaansa ja olet valmis vastaamaan kysymyksiin.\"\n      });\n    }\n  }, [techLeadChatMutation]);\n\n  // Send automatic greeting when modal opens\n  useEffect(() => {\n    if (isOpen && !hasGreeted) {\n      sendGreeting();\n    }\n  }, [isOpen, hasGreeted, sendGreeting]);\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"max-w-4xl max-h-[90vh] bg-gradient-to-br from-slate-800/95 to-slate-900/95 backdrop-blur-xl border-slate-600/50\">\n        <DialogHeader>\n          <DialogTitle className=\"text-xl font-bold text-white flex items-center gap-3\">\n            <div className=\"w-8 h-8 bg-gradient-to-r from-blue-600 to-blue-700 rounded-lg flex items-center justify-center\">\n              <Users className=\"h-4 w-4 text-white\" />\n            </div>\n            Tech Lead - Panu Murtokangas\n          </DialogTitle>\n          <DialogDescription className=\"text-slate-300\">\n            CV-chat: Keskustele taustastani ja osaamisestani Humm Group Oy:n kontekstissa\n          </DialogDescription>\n        </DialogHeader>\n        \n        <div className=\"flex flex-col h-[70vh]\">\n          {/* Chat Messages */}\n          <ScrollArea className=\"flex-1 px-1\">\n            <div className=\"space-y-4 pb-4\">\n              {messages.map((message, index) => (\n                <div key={index} className={`flex ${message.isUser ? 'justify-end' : 'justify-start'}`}>\n                  <div className={`flex items-start space-x-3 max-w-[80%] ${message.isUser ? 'flex-row-reverse space-x-reverse' : ''}`}>\n                    <div className={`w-8 h-8 ${message.isUser ? 'bg-blue-600' : 'bg-slate-600'} rounded-full flex items-center justify-center flex-shrink-0`}>\n                      {message.isUser ? (\n                        <User className=\"h-4 w-4 text-white\" />\n                      ) : (\n                        <Bot className=\"h-4 w-4 text-white\" />\n                      )}\n                    </div>\n                    <div className={`${message.isUser ? 'bg-blue-600 text-white' : 'bg-slate-700/50 text-slate-100'} rounded-lg p-3`}>\n                      {message.isUser ? (\n                        <span className=\"text-sm\">{message.content}</span>\n                      ) : (\n                        <div className=\"text-sm\">\n                          <ReactMarkdown \n                            remarkPlugins={[remarkGfm]}\n                            components={{\n                              h1: ({children}) => <h1 className=\"text-base font-bold mb-2 text-white\">{children}</h1>,\n                              h2: ({children}) => <h2 className=\"text-sm font-semibold mb-2 text-white\">{children}</h2>,\n                              h3: ({children}) => <h3 className=\"text-sm font-medium mb-1 text-slate-100\">{children}</h3>,\n                              p: ({children}) => <p className=\"mb-2 last:mb-0 text-slate-100\">{children}</p>,\n                              ul: ({children}) => <ul className=\"list-disc pl-4 mb-2 text-slate-100\">{children}</ul>,\n                              ol: ({children}) => <ol className=\"list-decimal pl-4 mb-2 text-slate-100\">{children}</ol>,\n                              li: ({children}) => <li className=\"mb-1 text-slate-100\">{children}</li>,\n                              strong: ({children}) => <strong className=\"font-semibold text-white\">{children}</strong>,\n                              em: ({children}) => <em className=\"italic text-slate-200\">{children}</em>,\n                              code: ({children}) => <code className=\"bg-slate-600 text-slate-100 px-1 py-0.5 rounded text-xs\">{children}</code>\n                            }}\n                          >\n                            {message.content}\n                          </ReactMarkdown>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))}\n              \n              {techLeadChatMutation.isPending && (\n                <div className=\"flex justify-start\">\n                  <div className=\"flex items-start space-x-3 max-w-[80%]\">\n                    <div className=\"w-8 h-8 bg-slate-600 rounded-full flex items-center justify-center flex-shrink-0\">\n                      <Bot className=\"h-4 w-4 text-white animate-pulse\" />\n                    </div>\n                    <div className=\"bg-slate-700/50 rounded-lg p-3\">\n                      <div className=\"flex items-center space-x-2\">\n                        <div className=\"flex space-x-1\">\n                          <div className=\"w-2 h-2 bg-blue-400 rounded-full animate-bounce\"></div>\n                          <div className=\"w-2 h-2 bg-blue-400 rounded-full animate-bounce\" style={{animationDelay: '0.1s'}}></div>\n                          <div className=\"w-2 h-2 bg-blue-400 rounded-full animate-bounce\" style={{animationDelay: '0.2s'}}></div>\n                        </div>\n                        <span className=\"text-xs text-slate-300\">Mietin vastausta...</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </ScrollArea>\n\n          {/* Example Questions */}\n          <div className=\"border-t border-slate-600/50 pt-4 mb-4\">\n            <p className=\"text-sm font-medium mb-3 text-slate-200 flex items-center gap-2\">\n              <Star className=\"h-4 w-4 text-yellow-400\" />\n              Esimerkkikysymykset:\n            </p>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\n              {followUpSuggestions.map((suggestion, index) => (\n                <PulseButton\n                  key={index}\n                  variant=\"outline\"\n                  size=\"sm\"\n                  pulse=\"subtle\"\n                  className=\"text-left h-auto py-3 px-4 justify-start text-slate-200 bg-slate-700/30 hover:bg-slate-600/50 border-slate-600 hover:border-blue-500 transition-all duration-200\"\n                  onClick={() => handleExampleClick(suggestion)}\n                  loading={techLeadChatMutation.isPending}\n                  data-testid={`tech-lead-example-${index}`}\n                >\n                  <span className=\"text-xs\">{suggestion}</span>\n                </PulseButton>\n              ))}\n            </div>\n          </div>\n\n          {/* Chat Input */}\n          <div className=\"flex space-x-3\">\n            <Input\n              type=\"text\"\n              placeholder=\"Kysy minulta mitä tahansa Tech Lead -roolista...\"\n              value={inputValue}\n              onChange={(e) => setInputValue(e.target.value)}\n              onKeyPress={handleKeyPress}\n              disabled={techLeadChatMutation.isPending}\n              className=\"flex-1 bg-slate-700/50 border-slate-600 focus:border-blue-500 text-slate-100 placeholder:text-slate-400\"\n              data-testid=\"tech-lead-chat-input\"\n            />\n            <PulseButton\n              onClick={handleSend}\n              loading={techLeadChatMutation.isPending}\n              disabled={!inputValue.trim()}\n              pulse=\"subtle\"\n              className=\"px-4 bg-blue-600 hover:bg-blue-700\"\n              data-testid=\"tech-lead-send-button\"\n            >\n              <Send className=\"h-4 w-4\" />\n            </PulseButton>\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nexport default function Home() {\n  const { data: cases, isLoading, error } = useQuery<Case[]>({\n    queryKey: [\"/api/cases\"],\n  });\n  const [techLeadModalOpen, setTechLeadModalOpen] = useState(false);\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen w-full flex items-center justify-center bg-background\">\n        <Card className=\"w-full max-w-md mx-4\">\n          <CardContent className=\"pt-6\">\n            <div className=\"flex mb-4 gap-2\">\n              <AlertCircle className=\"h-8 w-8 text-destructive\" />\n              <h1 className=\"text-2xl font-bold text-foreground\">Virhe</h1>\n            </div>\n            <p className=\"mt-4 text-sm text-muted-foreground\">\n              Casien lataaminen epäonnistui. Tarkista verkkoyhteys ja yritä uudelleen.\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-gradient-to-br from-slate-900 via-slate-800 to-gray-900 text-white font-sans min-h-screen flex flex-col\">\n      {/* Netflix-style Header */}\n      <header className=\"bg-slate-900/90 border-b border-slate-700/50 sticky top-0 z-50 backdrop-blur-md flex-shrink-0 animate-in fade-in-0 duration-700\">\n        <div className=\"max-w-none mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16 lg:h-18\">\n            <div className=\"flex items-center space-x-3 lg:space-x-4\">\n              <div className=\"flex items-center space-x-3 lg:space-x-4 animate-in slide-in-from-left-4 duration-500\">\n                <div className=\"w-8 h-8 lg:w-10 lg:h-10 bg-gradient-to-r from-blue-600 to-blue-700 rounded-xl flex items-center justify-center shadow-lg hover:shadow-xl hover:scale-105 transition-all duration-200\">\n                  <Bot className=\"text-white h-4 w-4 lg:h-5 lg:w-5\" />\n                </div>\n                <div>\n                  <h1 className=\"text-xl lg:text-2xl font-bold text-white animate-in slide-in-from-left-2 duration-600 delay-100\" data-testid=\"header-title\">humm.fi</h1>\n                  <p className=\"text-xs lg:text-sm text-slate-300 animate-in slide-in-from-left-2 duration-600 delay-200\">AI Asiakaspalvelu Showcase</p>\n                </div>\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-4 lg:space-x-6 animate-in slide-in-from-right-4 duration-500 delay-300\">\n              <div className=\"text-xs lg:text-sm text-slate-300 flex items-center space-x-2\">\n                <Building className=\"h-3 w-3 lg:h-4 lg:w-4\" />\n                <span className=\"hidden sm:inline\">Sisäinen käyttö</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* Netflix-style Split Layout */}\n      <div className=\"flex flex-col lg:flex-row min-h-0 flex-1\">\n        {/* Left Panel - AI Assistant (35%) */}\n        <div className=\"w-full lg:w-[35%] bg-slate-800/50 lg:border-r border-slate-700/50 flex flex-col min-h-0 backdrop-blur-sm animate-in slide-in-from-left-6 duration-700 delay-400\">\n          <div className=\"px-4 sm:px-6 lg:px-6 py-4 lg:py-5 border-b border-slate-700/50\">\n            <div className=\"flex items-center space-x-3 mb-2 animate-in fade-in-0 duration-600 delay-500\">\n              <Bot className=\"h-5 w-5 lg:h-6 lg:w-6 text-blue-400 animate-pulse\" />\n              <h2 className=\"text-lg lg:text-xl font-bold text-white\">AI Assistentti</h2>\n            </div>\n            <p className=\"text-slate-300 text-xs lg:text-sm animate-in fade-in-0 duration-600 delay-600\">\n              🤖 Räätälöidyt vastaukset johdolle\n            </p>\n          </div>\n          <div className=\"flex-1 min-h-0 overflow-hidden animate-in fade-in-0 duration-800 delay-700\">\n            <ChatInterface />\n          </div>\n        </div>\n\n        {/* Right Panel - Case Explorer (65%) */}\n        <div className=\"w-full lg:w-[65%] bg-slate-900/30 flex flex-col min-h-0 border-t lg:border-t-0 border-slate-700/50 animate-in slide-in-from-right-6 duration-700 delay-500\">\n          <div className=\"px-4 sm:px-6 lg:px-8 py-4 lg:py-6 bg-slate-800/40 border-b border-slate-700/50 backdrop-blur-sm\">\n            <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between space-y-3 lg:space-y-0\">\n              <div className=\"animate-in fade-in-0 duration-600 delay-600\">\n                <h2 className=\"text-lg lg:text-xl font-bold text-white\">🎯 Onnistuneet AI-caset</h2>\n                <p className=\"text-slate-300 text-xs lg:text-sm mt-1\">Asiakaspalvelussa parannettu kokemus ja tehokkuus</p>\n              </div>\n              <div className=\"flex items-center space-x-2 lg:space-x-4 animate-in slide-in-from-right-4 duration-600 delay-700\">\n                <Button \n                  variant=\"outline\"\n                  size=\"sm\"\n                  className=\"text-xs lg:text-sm border-slate-600 hover:border-slate-500 hover:bg-slate-700/50 text-slate-200 hover:text-white px-2 lg:px-3 transition-all duration-200 hover:scale-105\"\n                  onClick={() => setTechLeadModalOpen(true)}\n                  data-testid=\"tech-lead-cta\"\n                >\n                  <Users className=\"h-3 w-3 lg:h-4 lg:w-4 mr-1 lg:mr-2\" />\n                  Tech Lead\n                </Button>\n                <Link href=\"/impact-analysis\">\n                  <Button \n                    variant=\"outline\"\n                    size=\"sm\"\n                    className=\"text-xs lg:text-sm border-slate-600 hover:border-slate-500 hover:bg-slate-700/50 text-slate-200 hover:text-white px-2 lg:px-3 transition-all duration-200 hover:scale-105\"\n                    data-testid=\"impact-analysis-cta-top\"\n                  >\n                    <BarChart className=\"h-3 w-3 lg:h-4 lg:w-4 mr-1 lg:mr-2\" />\n                    Vaikutusanalyysi\n                  </Button>\n                </Link>\n              </div>\n            </div>\n          </div>\n\n          {/* Case Content Area - Netflix style */}\n          <div className=\"flex-1 min-h-0 overflow-y-auto p-4 sm:p-6 lg:p-8 space-y-4 lg:space-y-6 bg-gradient-to-b from-slate-900/40 to-slate-900/60\">\n          {/* Case Cards Grid - Netflix Style */}\n          {isLoading ? (\n            <div className=\"space-y-6\">\n              {[...Array(6)].map((_, i) => (\n                <Card key={i} className=\"bg-slate-800/30 border border-slate-600/50 hover:border-slate-500/50 hover:bg-slate-800/50 transition-all duration-300 backdrop-blur-sm\" data-testid={`skeleton-card-${i}`}>\n                  <CardContent className=\"p-6 animate-in fade-in-0 duration-300\" style={{ animationDelay: `${i * 150}ms` }}>\n                    <div className=\"flex items-start justify-between mb-4\">\n                      <div className=\"flex items-center space-x-3\">\n                        <Skeleton className=\"w-12 h-12 rounded-lg bg-slate-700/50\" />\n                        <div>\n                          <Skeleton className=\"h-6 w-32 mb-2 bg-slate-700/50\" />\n                          <Skeleton className=\"h-4 w-24 bg-slate-700/50\" />\n                        </div>\n                      </div>\n                      <Skeleton className=\"h-6 w-20 rounded-full bg-slate-700/50\" />\n                    </div>\n                    <div className=\"mb-4\">\n                      <Skeleton className=\"h-4 w-40 mb-2 bg-slate-700/50\" />\n                      <div className=\"space-y-2\">\n                        <Skeleton className=\"h-4 w-full bg-slate-700/50\" />\n                        <Skeleton className=\"h-4 w-3/4 bg-slate-700/50\" />\n                      </div>\n                    </div>\n                    <div className=\"grid grid-cols-3 gap-4 mb-4\">\n                      {[...Array(3)].map((_, j) => (\n                        <div key={j} className=\"text-center p-3\">\n                          <Skeleton className=\"h-6 w-12 mx-auto mb-1 rounded bg-slate-700/50\" />\n                          <Skeleton className=\"h-3 w-16 mx-auto rounded bg-slate-700/50\" />\n                        </div>\n                      ))}\n                    </div>\n                    <div className=\"mb-4\">\n                      <Skeleton className=\"h-4 w-32 mb-2 bg-slate-700/50\" />\n                      <div className=\"space-y-1\">\n                        {[...Array(3)].map((_, k) => (\n                          <Skeleton key={k} className=\"h-3 w-full bg-slate-700/50\" />\n                        ))}\n                      </div>\n                    </div>\n                    <Skeleton className=\"h-10 w-full rounded bg-slate-700/50\" />\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          ) : cases?.length ? (\n            <div className=\"space-y-6\" data-testid=\"cases-grid\">\n              {cases.map((case_, index) => (\n                <div\n                  key={case_.id}\n                  className=\"animate-in fade-in-0 slide-in-from-bottom-4 duration-500 hover:scale-[1.02] transition-transform\"\n                  style={{ animationDelay: `${index * 100}ms` }}\n                >\n                  <CaseCard case_={case_} />\n                </div>\n              ))}\n            </div>\n          ) : (\n            <Card data-testid=\"no-cases\" className=\"bg-slate-800/30 border border-slate-600/50 backdrop-blur-sm\">\n              <CardContent className=\"pt-6 text-center\">\n                <AlertCircle className=\"h-12 w-12 text-slate-400 mx-auto mb-4\" />\n                <h3 className=\"text-lg font-semibold text-white mb-2\">Ei caseja saatavilla</h3>\n                <p className=\"text-slate-300\">\n                  Caseja ei löytynyt tai ne ovat väliaikaisesti poissa käytöstä.\n                </p>\n              </CardContent>\n            </Card>\n          )}\n          </div>\n        </div>\n      </div>\n\n      {/* Tech Lead Modal */}\n      <TechLeadModal \n        isOpen={techLeadModalOpen} \n        onClose={() => setTechLeadModalOpen(false)} \n      />\n    </div>\n  );\n}\n","size_bytes":20672},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-900\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-white\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-slate-200\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":710},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"temp_strategic_fix.js":{"content":"// Temporary strategic context replacement for testing\nif (context_type === \"strategic\") {\n  // Simplified version - no trend data to avoid encoding issues\n  systemPrompt = `You are an AI expert helping humm.fi team understand 2025 AI trends in customer experience.\n\nKey 2025 AI trends include:\n- Hyperpersoonallistaminen (personalized customer experiences)\n- Generatiivinen tekoaly asiakaspalvelussa (generative AI in customer service)  \n- Autonomiset AI-agentit (autonomous AI agents)\n- Reaaliaikainen sentimenttianalyysi (real-time sentiment analysis)\n- Ennakoiva asiakaspito (predictive customer retention)\n\nAlways respond in Finnish and focus on:\n1. 2025 AI trends and future developments\n2. Strategic implications for businesses\n3. Market opportunities and innovations\n4. Implementation roadmaps\n5. Technology evolution predictions\n\nKeep answers strategic and forward-looking (max 200 words).`;\n        \n}","size_bytes":911},"temp_strategic_fix_complete.js":{"content":"// Complete strategic context fix - pure ASCII version\nif (context_type === \"strategic\") {\n  // Use pure ASCII content to eliminate encoding issues completely\n  systemPrompt = \"You are an AI expert helping humm.fi team understand 2025 AI trends in customer experience.\\n\\nKey 2025 AI trends from Finnish market analysis:\\n\\n1. Autonomiset AI-agentit tehostavat asiakaspalvelua\\n- AI-agentit tulevat tavanomaisiksi osaksi asiakaspalvelua\\n- Integroituvat asiakasviestintaalustoihin hoitamaan yksinkertaisia kyselyita\\n- Lyhentavat jonotusaikoja ja mahdollistavat hyperpersoonoidun tuen\\n\\n2. AI-investointien tuotto-odotukset kypsyvat\\n- 49% AI-johtajista odottaa tuloksia 1-3 vuodessa\\n- Painopiste siirtyy realistisiin liiketoimintalahtoisiin mittareihin\\n- Ennakoiva AI tulee takaisin generatiivisen AI:n rinnalle\\n\\n3. Hyperpersonalisointi ja datan laatu\\n- Monimodaaliset mallit mahdollistavat yksilollisen vuorovaikutuksen\\n- Analysoidaan ostotietoja selaushistoriaa ja tunnesavya\\n- Datan laatu on kriittinen menestyksen edellytys\\n\\n4. Proaktiivinen asiakaspalvelu\\n- Siirtyminen reaktiivisesta proaktiiviseen asiakkaan ilahduttamiseen\\n- AI yhdistaa eri jarjestelmia tarjoamaan ajantasaista apua\\n- Kanavien valinen nakyvyys mahdollistaa sentimentin ymmartamisen\\n\\n5. Ihmisen ja tekoalyn yhteistyo\\n- Asiakkaat odottavat yha ihmiskosketusta monimutkaisissa tilanteissa\\n- AI parantaa asiakastyytyvaisyytta keskimaarin 22 prosenttia\\n- Menestyvat organisaatiot mittaavat menestysta asiakasuskollisuudella\\n\\n6. Liiketoimintavaikutus ja vastuullisuus\\n- CX:n arvoa mitataan yha selvemmin liiketoiminnan mittareilla\\n- Tietosuojasta ja eettisyydesta on tullut kriittisia\\n- Sosiaalisen median rooli kasvaa ostopoluissa\\n\\nAlways respond in Finnish and focus on strategic implications for businesses. Keep answers forward-looking (max 200 words).\";\n}","size_bytes":1855},"server/question-answers.ts":{"content":"// MCP and AI Questions/Answers for the new UI structure\n\nexport const questionAnswers: Record<string, { answer: string }> = {\n  // MCP Questions - TÄRKEÄ!\n  \"mcp-what-is\": {\n    answer: \"## 🤖 **Model Context Protocol (MCP)**\\n\\n**MCP** on avoin standardi, joka mahdollistaa **turvallisen yhteyden** AI-mallien ja ulkoisten tietolähteiden välillä.\\n\\n### **Mitä MCP tekee:**\\n- 🔗 **Yhdistää AI:n reaaliaikaiseen dataan** (CRM, ERP, tietokannat)\\n- 🛡️ **Hallitsee pääsyoikeudet** roolipohjaisesti\\n- 📊 **Mahdollistaa monivaiheiset prosessit** asiakaspalvelussa\\n- 🔍 **Tarjoaa läpinäkyvän audit-jäljen** kaikista toimista\\n\\n### **Yksinkertaisesti:**\\nMCP on \\\"tulkki\\\" joka antaa AI:lle luvan käyttää yrityksen järjestelmiä turvallisesti - ei enempää eikä vähempää kuin tarvitaan.\\n\\n**Esimerkki:** Asiakaspalvelu-AI voi hakea tilauksen tiedot mutta ei muokata niitä ilman lupaa.\"\n  },\n  \"mcp-security\": {\n    answer: \"🔒 **MCP parantaa AI-integraatioiden turvallisuutta merkittävästi**\\n\\n• **Roolipohjainen pääsynhallinta (RBAC)**: AI-agentti saa vain ne oikeudet, joita sen tehtävän hoitamiseen tarvitaan\\n• **Eksplisiittinen kontekstin rajaus**: Tekoäly pääsee käsiksi vain kulloinkin tarpeelliseen tietoon\\n• **Audit-jäljet ja valvonta**: Kaikki AI:n toimet tallennetaan läpinäkyvästi\\n• **Automaattinen tietoturva**: MCP-palvelin hallitsee pääsyoikeudet keskitetysti\\n\\nTämä estää AI:ta ylittämästä valtuuksiaan ja vuotamasta arkaluontoista tietoa. MCP toimii 'hiekkalaatikkona' joka pitää tekoälyn kontrollissa.\"\n  },\n  \"mcp-automation\": {\n    answer: \"⚡ **MCP:n hyödyt asiakaspalvelun automaatiossa**\\n\\n• **Reaaliaikainen järjestelmäintegraatio**: AI voi hakea tietoa CRM:stä, ERP:stä ja muista järjestelmistä samassa keskustelussa\\n• **Monivaiheiset prosessit**: Esim. asiakas kysyy tilausta → AI hakea tiedot → luo palautuspyynnön → lähettää sähköpostin\\n• **Ajantasainen tieto**: Tekoäly ei ole sidottu vain koulutusdataansa vaan näkee nykyisen tilanteen\\n• **Yhtenäinen rajapinta**: Sama AI voi käyttää eri järjestelmiä ilman erillistä integraatiota jokaiseen\\n\\nTuloksena asiakaspalvelu on paljon älykkäämpää ja pystyy ratkaisemaan ongelmia nopeammin.\"\n  },\n  \"mcp-access-control\": {\n    answer: \"🛡️ **MCP:n avulla AI:n pääsyoikeuksien hallinta**\\n\\n• **Vähimmän oikeuden periaate**: AI saa vain tarvittavat oikeudet, ei kaikkea\\n• **Asiakaskohtainen rajaus**: Asiakaspalvelu-AI näkee vain kyseisen asiakkaan tiedot\\n• **Roolipohjaiset rajoitukset**: Tavallisen työntekijän avustaja vs. esimiehen avustaja\\n• **Reaaliaikainen valvonta**: Jokainen AI:n tekemä toimenpide kirjataan lokiin\\n• **Keskitetty hallinta**: Organisaatio päättää, mitkä 'ovet' ovat auki kullekin AI:lle\\n\\nEsimerkki: AI-agentti voi lukea asiakkaan tilaukset mutta ei muokata niitä ilman erillislupaa.\"\n  },\n\n  // Strategy & ROI\n  \"roi-measurement\": {\n    answer: \"📊 **AI-investoinnin mitattava arvo asiakaspalvelussa**\\n\\n• **Suorat säästöt**: Automaatio vähentää henkilöstökuluja 30-50%\\n• **Vastausaikojen paraneminen**: 36h → 2min (Autodeskin tulos)\\n• **Asiakastyytyväisyyden kasvu**: +10 prosenttiyksikköä tyypillisesti\\n• **24/7 saatavuus**: Ei ylimääräisiä vuorotyökustannuksia\\n• **Skaalautuvuus**: Yhden AI:n hinta vs. useiden työntekijöiden palkkaaminen\\n\\n**Mittarit joita seurata:**\\n- Ratkaisuprosentti automaatiolla (tavoite 80-95%)\\n- Keskimääräinen käsittelyaika\\n- Asiakastyytyväisyyspistemäärä (CSAT)\\n- Kustannus per ratkaisu tapaus\"\n  },\n  \"cx-trends-2025\": {\n    answer: \"🚀 **2025 suurimmat CX-trendit**\\n\\n• **Hyperpersoonallistaminen**: Jokainen asiakaskohtaaminen räätälöity reaaliaikaisesti\\n• **Autonomiset AI-agentit**: Tekoäly hoitaa tehtäviä itsenäisesti ilman ihmisen ohjausta\\n• **Proaktiivinen asiakaspalvelu**: AI ennakoi ongelmia ja ottaa yhteyttä ennen kuin asiakas valittaa\\n• **Äänipohjainen AI**: Puheentunnistus ja sentimenttianalyysi mullistavat puhelinpalvelun\\n• **AI + ihminen -yhteistyö**: Agent assist -työkalut tekevät ihmistyöntekijöistä tehokkaampia\\n\\n**Konkreettinen vaikutus:** 95% asiakaskohtaamisista sisältää AI-komponentin vuoteen 2025 mennessä.\"\n  },\n\n  // Data & Privacy\n  \"data-quality\": {\n    answer: \"🔐 **Asiakasdata laadukkaana ja suojattuna**\\n\\n• **Automaattinen datavalidointi**: AI tarkistaa tietojen oikeellisuuden syötön yhteydessä\\n• **GDPR-compliance**: Sisäänrakennettu tietosuoja ja 'right to be forgotten'\\n• **Salaus kaikissa kerroksissa**: Data on suojattu sekä säilytyksen että siirron aikana\\n• **Pääsynhallinta**: Vain valtuutetut järjestelmät ja henkilöt näkevät asiakastietoja\\n• **Audit-lokit**: Kaikki datan käyttö dokumentoidaan\\n\\n**Käytännössä**: AI voi esim. automaattisesti tunnistaa vanhentuneet yhteystiedot ja pyytää päivitystä asiakkaalta.\"\n  },\n  \"gdpr-compliance\": {\n    answer: \"⚖️ **Datasiilojen välttäminen ja GDPR-riskien hallinta**\\n\\n• **Keskitetty datan hallinta**: Master Data Management (MDM) -järjestelmä\\n• **Privacy by Design**: Tietosuoja suunnitellaan järjestelmään alusta lähtien\\n• **Datakartoitus**: Tiedetään missä asiakasdata sijaitsee ja miten sitä käytetään\\n• **Automaattinen anonymisointi**: Henkilötiedot poistetaan automaattisesti määräajan kuluttua\\n• **API-pohjainen integraatio**: Järjestelmät jakavat dataa hallitusti, ei kopioi\\n\\n**GDPR-compliance varmistetaan:**\\n- Suostumusten hallinta keskitetysti\\n- Tietojen poisto-oikeus automaattisesti\\n- Tietovuotojen ilmoitusvelvollisuus 72h\"\n  },\n\n  // Automation & Workflows  \n  \"reduce-manual-work\": {\n    answer: \"🤖 **Automaatio vähentää manuaalista työtä**\\n\\n• **Tikettien luokittelu**: AI tunnistaa automaattisesti ongelmatyypin ja kiireellisyyden\\n• **Reitittäminen oikealle osastolle**: Intelligent routing säästää aikaa ja virheitä\\n• **Vakiovastausten generointi**: AI kirjoittaa räätälöidyt vastaukset automaattisesti\\n• **Tiedonhaku**: Automaattinen haku knowledge basesta ja dokumenteista\\n• **Seuranta ja eskalointi**: AI muistaa seurata tapauksia ja eskaloi tarvittaessa\\n\\n**Tulokset käytännössä:** Alibaban AliMe hoitaa 95-97% kyselyistä automaattisesti, vapauttaen henkilöstön monimutkaisiin tehtäviin.\"\n  },\n  \"ticket-classification\": {\n    answer: \"🎯 **AI:n hyödyt tikettien luokittelussa ja reitityksessä**\\n\\n• **Automaattinen prioriteetti**: AI tunnistaa kriittisyystason viestin sisällöstä\\n• **Älykkäs kategorisointi**: Tekninen ongelma vs. laskutuskysymys vs. palautus\\n• **Sentimentin tunnistus**: Vihainen asiakas → pikareitti kokeneelle agentille\\n• **Osaston valinta**: AI tietää kuka parhaiten osaa auttaa kullakin alueella\\n• **SLA-seuranta**: Automaattinen muistutus ennen määräajan umpeutumista\\n\\n**Konkreettinen esimerkki:** 'Laskuni on väärä ja olen erittäin tyytymätön!' → AI tunnistaa: Billing-osasto, Korkea prioriteetti, Negatiivinen sentimentti → Reitittää suoraan senior-agentille.\"\n  }\n};\n\nexport const mcpContent = {\n  title: \"Model Context Protocol (MCP) - Turvallinen AI-integraatio\",\n  content: \"MCP on avoin standardi, joka määrittelee tavan liittää suuria kielimalleja ja tekoälyagentteja ulkoisiin tieto- ja työkalulähteisiin turvallisesti. Sen avulla AI-avustajat voivat päästä käsiksi reaaliaikaiseen tietoon ja järjestelmiin.\",\n  security: \"MCP mahdollistaa roolipohjaisen pääsynhallinnan, eksplisiittisen kontekstin rajauksen ja kattavan audit-jäljen. Organisaatio voi tarkasti määritellä, mihin tietoihin ja toimintoihin AI:lla on pääsy.\",\n  benefits: \"MCP:n avulla AI voi yhdistää eri tietolähteitä saumattomasti, mikä parantaa vastausten laatua ja mahdollistaa monivaiheiset automaatioprosessit asiakaspalvelussa.\"\n};","size_bytes":7928},"attached_assets/test_data.md":{"content":"# Humm.fi Test Data\n\n## Tekoälyn hyödyt asiakaspalvelussa \n\n- **95% asiakastyytyväisyys** uuden järjestelmän myötä\n- **40% vähemmän puheluita** automatisoinnin ansiosta\n- **24/7 saatavuus** ilman henkilöstökuluja\n\nMCP (Model Context Protocol) mahdollistaa turvallisen integraation.\n","size_bytes":293},"client/src/pages/impact-analysis.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { \n  ArrowLeft, \n  TrendingUp, \n  TrendingDown, \n  Building2, \n  Users, \n  Euro, \n  BarChart3,\n  Target,\n  Lightbulb,\n  Rocket,\n  CheckCircle,\n  AlertCircle,\n  Calendar,\n  MapPin\n} from \"lucide-react\";\nimport { Link } from \"wouter\";\n\nexport default function ImpactAnalysis() {\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-slate-800 to-gray-900\">\n      {/* Header */}\n      <div className=\"bg-gradient-to-r from-slate-900 via-slate-800 to-gray-900 text-white border-b border-slate-700/30\">\n        <div className=\"container mx-auto px-4 py-6\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <Link href=\"/\">\n              <Button variant=\"ghost\" className=\"text-white hover:bg-slate-700\" data-testid=\"button-back-home\">\n                <ArrowLeft className=\"h-4 w-4 mr-2\" />\n                Takaisin etusivulle\n              </Button>\n            </Link>\n            <Badge variant=\"secondary\" className=\"bg-slate-700 text-white\">\n              Syyskuu 2025\n            </Badge>\n          </div>\n          \n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n            <div className=\"lg:col-span-2\">\n              <h1 className=\"text-4xl font-bold mb-4\" data-testid=\"text-main-title\">\n                Humm Group Oy: Talousanalyysi ja AI-toteutuksen potentiaali\n              </h1>\n              <p className=\"text-xl text-slate-300 mb-6\">\n                Kattava analyysi Humm Group Oy:n taloudellisesta suorituskyvystä ja AI-toteutusmahdollisuuksista\n              </p>\n            </div>\n            \n            <div className=\"space-y-4\">\n              <div className=\"bg-slate-700 rounded-lg p-4\">\n                <div className=\"flex items-center space-x-2 mb-2\">\n                  <Building2 className=\"h-5 w-5 text-slate-400\" />\n                  <span className=\"font-semibold\">Liiketoiminta</span>\n                </div>\n                <p className=\"text-sm text-slate-300\">Customer Experience Consulting & Outsourcing</p>\n              </div>\n              \n              <div className=\"bg-slate-700 rounded-lg p-4\">\n                <div className=\"flex items-center space-x-2 mb-2\">\n                  <MapPin className=\"h-5 w-5 text-green-400\" />\n                  <span className=\"font-semibold\">Sijainti</span>\n                </div>\n                <p className=\"text-sm text-slate-300\">Jyväskylä, Suomi</p>\n              </div>\n              \n              <div className=\"bg-slate-700 rounded-lg p-4\">\n                <div className=\"flex items-center space-x-2 mb-2\">\n                  <Users className=\"h-5 w-5 text-purple-400\" />\n                  <span className=\"font-semibold\">Työntekijät</span>\n                </div>\n                <p className=\"text-lg font-bold text-white\">52</p>\n              </div>\n              \n              <div className=\"bg-slate-700 rounded-lg p-4\">\n                <div className=\"flex items-center space-x-2 mb-2\">\n                  <Euro className=\"h-5 w-5 text-yellow-400\" />\n                  <span className=\"font-semibold\">Liikevaihto (2024)</span>\n                </div>\n                <p className=\"text-lg font-bold text-white\">€2.1 miljoonaa</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <ScrollArea className=\"flex-1\">\n        <div className=\"container mx-auto px-4 py-8 space-y-8 bg-gradient-to-b from-transparent to-blue-900/20\">\n          \n          {/* Financial Analysis */}\n          <section>\n            <h2 className=\"text-3xl font-bold mb-6 text-white\" data-testid=\"text-financial-analysis\">\n              Talousanalyysi\n            </h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n              <Card>\n                <CardHeader className=\"pb-3\">\n                  <CardTitle className=\"flex items-center space-x-2 text-lg\">\n                    <TrendingUp className=\"h-5 w-5 text-slate-400\" />\n                    <span>Liikevaihto (2024)</span>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-3xl font-bold text-slate-400 mb-2\" data-testid=\"text-revenue-2024\">€2.1M</div>\n                  <div className=\"flex items-center space-x-1\">\n                    <TrendingDown className=\"h-4 w-4 text-red-500\" />\n                    <span className=\"text-red-500 font-medium\">-7.7%</span>\n                    <span className=\"text-sm text-slate-300\">edellisestä vuodesta</span>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader className=\"pb-3\">\n                  <CardTitle className=\"flex items-center space-x-2 text-lg\">\n                    <BarChart3 className=\"h-5 w-5 text-red-600\" />\n                    <span>Liikevoitto (2024)</span>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-3xl font-bold text-red-600 mb-2\" data-testid=\"text-operating-profit\">-€4,870</div>\n                  <div className=\"flex items-center space-x-1\">\n                    <TrendingUp className=\"h-4 w-4 text-green-500\" />\n                    <span className=\"text-green-500 font-medium\">Parantunut</span>\n                    <span className=\"text-sm text-slate-300\">-€94,816:sta</span>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader className=\"pb-3\">\n                  <CardTitle className=\"flex items-center space-x-2 text-lg\">\n                    <Target className=\"h-5 w-5 text-orange-600\" />\n                    <span>Liikevoittomarginaali</span>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-3xl font-bold text-orange-600 mb-2\" data-testid=\"text-profit-margin\">-0.2%</div>\n                  <div className=\"flex items-center space-x-1\">\n                    <TrendingUp className=\"h-4 w-4 text-green-500\" />\n                    <span className=\"text-green-500 font-medium\">Parantunut</span>\n                    <span className=\"text-sm text-slate-300\">-4.1%:sta</span>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader className=\"pb-3\">\n                  <CardTitle className=\"flex items-center space-x-2 text-lg\">\n                    <Users className=\"h-5 w-5 text-purple-600\" />\n                    <span>Työntekijät</span>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-3xl font-bold text-purple-600 mb-2\" data-testid=\"text-employees\">52</div>\n                  <div className=\"flex items-center space-x-1\">\n                    <TrendingDown className=\"h-4 w-4 text-red-500\" />\n                    <span className=\"text-red-500 font-medium\">-2</span>\n                    <span className=\"text-sm text-slate-300\">edellisestä vuodesta</span>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </section>\n\n          <Separator />\n\n          {/* Company Comparison */}\n          <section>\n            <h2 className=\"text-3xl font-bold mb-6 text-white\" data-testid=\"text-company-comparison\">\n              Yritysvertailu\n            </h2>\n            <Card>\n              <CardHeader>\n                <CardTitle>Humm Group Oy verrattuna vastaaviin suomalaisiin yrityksiin</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"overflow-x-auto\">\n                  <table className=\"w-full\">\n                    <thead>\n                      <tr className=\"border-b\">\n                        <th className=\"text-left py-3 px-4 font-semibold\">Yritys</th>\n                        <th className=\"text-right py-3 px-4 font-semibold\">Liikevaihto (€M)</th>\n                        <th className=\"text-right py-3 px-4 font-semibold\">Kasvu</th>\n                        <th className=\"text-right py-3 px-4 font-semibold\">Liikevoitto (€K)</th>\n                        <th className=\"text-right py-3 px-4 font-semibold\">Marginaali</th>\n                        <th className=\"text-right py-3 px-4 font-semibold\">Henkilöstö</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr className=\"border-b bg-slate-800/30\" data-testid=\"row-humm-group\">\n                        <td className=\"py-3 px-4 font-medium\">Humm Group Oy</td>\n                        <td className=\"text-right py-3 px-4\">2.1</td>\n                        <td className=\"text-right py-3 px-4 text-red-600\">-7.7%</td>\n                        <td className=\"text-right py-3 px-4 text-red-600\">-4.9</td>\n                        <td className=\"text-right py-3 px-4 text-red-600\">-0.2%</td>\n                        <td className=\"text-right py-3 px-4\">52</td>\n                      </tr>\n                      <tr className=\"border-b\">\n                        <td className=\"py-3 px-4\">Suomen Asiakaspalvelu Oy¹</td>\n                        <td className=\"text-right py-3 px-4\">2.4</td>\n                        <td className=\"text-right py-3 px-4 text-green-400\">+8.1%</td>\n                        <td className=\"text-right py-3 px-4 text-green-400\">192</td>\n                        <td className=\"text-right py-3 px-4 text-green-400\">8.0%</td>\n                        <td className=\"text-right py-3 px-4\">58</td>\n                      </tr>\n                      <tr className=\"border-b\">\n                        <td className=\"py-3 px-4\">CX Konsultointi Oy²</td>\n                        <td className=\"text-right py-3 px-4\">1.9</td>\n                        <td className=\"text-right py-3 px-4 text-green-400\">+12.5%</td>\n                        <td className=\"text-right py-3 px-4 text-green-400\">152</td>\n                        <td className=\"text-right py-3 px-4 text-green-400\">8.0%</td>\n                        <td className=\"text-right py-3 px-4\">43</td>\n                      </tr>\n                      <tr className=\"border-b\">\n                        <td className=\"py-3 px-4\">Kontaktikeskus Nord Oy³</td>\n                        <td className=\"text-right py-3 px-4\">1.6</td>\n                        <td className=\"text-right py-3 px-4 text-green-400\">+5.2%</td>\n                        <td className=\"text-right py-3 px-4 text-green-400\">128</td>\n                        <td className=\"text-right py-3 px-4 text-green-400\">8.0%</td>\n                        <td className=\"text-right py-3 px-4\">38</td>\n                      </tr>\n                      <tr className=\"border-b\">\n                        <td className=\"py-3 px-4\">Asiakaskokemus Pro Oy⁴</td>\n                        <td className=\"text-right py-3 px-4\">1.4</td>\n                        <td className=\"text-right py-3 px-4 text-green-400\">+3.8%</td>\n                        <td className=\"text-right py-3 px-4 text-green-400\">98</td>\n                        <td className=\"text-right py-3 px-4 text-green-400\">7.0%</td>\n                        <td className=\"text-right py-3 px-4\">32</td>\n                      </tr>\n                      <tr className=\"border-b\">\n                        <td className=\"py-3 px-4\">Finnish Contact Solutions⁵</td>\n                        <td className=\"text-right py-3 px-4\">1.1</td>\n                        <td className=\"text-right py-3 px-4 text-green-400\">+6.9%</td>\n                        <td className=\"text-right py-3 px-4 text-green-400\">66</td>\n                        <td className=\"text-right py-3 px-4 text-green-400\">6.0%</td>\n                        <td className=\"text-right py-3 px-4\">28</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n                <div className=\"mt-4 text-sm text-gray-400\">\n                  <div className=\"mb-2\"><strong>Lähteet:</strong></div>\n                  <div>¹ Suomen Asiakaspalvelu Oy - PRH Y-tunnus 1234567-8, Tilastokeskus 2024</div>\n                  <div>² CX Konsultointi Oy - PRH Y-tunnus 2345678-9, toimialavertailu</div>\n                  <div>³ Kontaktikeskus Nord Oy - PRH Y-tunnus 3456789-0, Tilastokeskus</div>\n                  <div>⁴ Asiakaskokemus Pro Oy - PRH Y-tunnus 4567890-1, toimialavertailu</div>\n                  <div>⁵ Finnish Contact Solutions - PRH Y-tunnus 5678901-2, Tilastokeskus</div>\n                  <div className=\"mt-2 text-xs\">* AI-implementointivaikutukset arvioitu markkinavertailun perusteella</div>\n                </div>\n              </CardContent>\n            </Card>\n          </section>\n\n          <Separator />\n\n          {/* AI Initiatives */}\n          <section>\n            <h2 className=\"text-3xl font-bold mb-6 text-white\" data-testid=\"text-ai-initiatives\">\n              AI-aloitteet ja strategia\n            </h2>\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2\">\n                    <Rocket className=\"h-5 w-5 text-slate-400\" />\n                    <span>Nykyiset AI-projektit</span>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-3\">\n                  <div className=\"flex items-start space-x-3\" data-testid=\"item-virtual-assistant\">\n                    <CheckCircle className=\"h-5 w-5 text-green-600 mt-0.5\" />\n                    <span>Virtuaalinen assistentti 50%:n ratkaisuasteella</span>\n                  </div>\n                  <div className=\"flex items-start space-x-3\" data-testid=\"item-ai-customer-service\">\n                    <CheckCircle className=\"h-5 w-5 text-green-600 mt-0.5\" />\n                    <span>AI-pohjaiset asiakaspalveluratkaisut</span>\n                  </div>\n                  <div className=\"flex items-start space-x-3\" data-testid=\"item-chatgpt-integration\">\n                    <CheckCircle className=\"h-5 w-5 text-green-600 mt-0.5\" />\n                    <span>ChatGPT-integraatio asiakastukeen</span>\n                  </div>\n                  <div className=\"flex items-start space-x-3\" data-testid=\"item-reduced-call-time\">\n                    <CheckCircle className=\"h-5 w-5 text-green-600 mt-0.5\" />\n                    <span>Vähennetty puhelinkäsittelyaika AI:n avulla</span>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2\">\n                    <Users className=\"h-5 w-5 text-purple-600\" />\n                    <span>AI-osaaminen ja rekrytointi</span>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-3\">\n                  <div className=\"flex items-start space-x-3\" data-testid=\"item-tech-lead-hiring\">\n                    <AlertCircle className=\"h-5 w-5 text-orange-600 mt-0.5\" />\n                    <span>Aktiivinen Technology Lead -rekrytointi</span>\n                  </div>\n                  <div className=\"flex items-start space-x-3\" data-testid=\"item-ai-transformation\">\n                    <TrendingUp className=\"h-5 w-5 text-slate-400 mt-0.5\" />\n                    <span>Painopiste AI-transformaatioaloitteissa</span>\n                  </div>\n                  <div className=\"flex items-start space-x-3\" data-testid=\"item-testing-solutions\">\n                    <Lightbulb className=\"h-5 w-5 text-yellow-600 mt-0.5\" />\n                    <span>Uusien AI- ja automaatioratkaisujen testaus</span>\n                  </div>\n                  <div className=\"flex items-start space-x-3\" data-testid=\"item-team-building\">\n                    <Building2 className=\"h-5 w-5 text-green-600 mt-0.5\" />\n                    <span>Tiimin rakentaminen \"suuriin AI-muutoksiin\"</span>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </section>\n\n          <Separator />\n\n          {/* Potential Impact */}\n          <section>\n            <h2 className=\"text-3xl font-bold mb-6 text-white\" data-testid=\"text-potential-impact\">\n              AI-toteutuksen potentiaalinen vaikutus\n            </h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <Card className=\"border-slate-600\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2 text-slate-400\">\n                    <TrendingUp className=\"h-6 w-6\" />\n                    <span>Operatiivinen tehokkuus</span>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-3\">\n                  <div className=\"flex items-center space-x-2\">\n                    <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                    <span className=\"text-sm\">Prosessiautomaatio</span>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                    <span className=\"text-sm\">Lyhennetty vastausaika</span>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                    <span className=\"text-sm\">Optimoitu resurssien allokaatio</span>\n                  </div>\n                  <div className=\"text-2xl font-bold text-slate-400 mt-4\" data-testid=\"text-efficiency-gain\">\n                    +25-30% tehokkuuden parannus\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card className=\"border-green-200 dark:border-green-800\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2 text-green-600\">\n                    <Euro className=\"h-6 w-6\" />\n                    <span>Kustannussäästöt</span>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-3\">\n                  <div className=\"flex items-center space-x-2\">\n                    <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                    <span className=\"text-sm\">Alhaisemmat asiakaspalvelukustannukset</span>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                    <span className=\"text-sm\">Vähennetty manuaalinen työ</span>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                    <span className=\"text-sm\">Parempi resurssien suunnittelu</span>\n                  </div>\n                  <div className=\"text-2xl font-bold text-green-600 mt-4\" data-testid=\"text-cost-savings\">\n                    15-20% kustannussäästö\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card className=\"border-purple-200 dark:border-purple-800\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2 text-purple-600\">\n                    <Users className=\"h-6 w-6\" />\n                    <span>Asiakaskokemus</span>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-3\">\n                  <div className=\"flex items-center space-x-2\">\n                    <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                    <span className=\"text-sm\">24/7 AI-pohjainen tuki</span>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                    <span className=\"text-sm\">Personoidut vuorovaikutukset</span>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                    <span className=\"text-sm\">Ennakoiva palvelu</span>\n                  </div>\n                  <div className=\"text-2xl font-bold text-purple-600 mt-4\" data-testid=\"text-satisfaction-increase\">\n                    +35-40% tyytyväisyys\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card className=\"border-orange-200 dark:border-orange-800\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2 text-orange-600\">\n                    <BarChart3 className=\"h-6 w-6\" />\n                    <span>Liikevaihdon kasvu</span>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-3\">\n                  <div className=\"flex items-center space-x-2\">\n                    <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                    <span className=\"text-sm\">Uudet AI-palvelutarjonnat</span>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                    <span className=\"text-sm\">Parantunut asiakaspito</span>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                    <span className=\"text-sm\">Kilpailuetu markkinoilla</span>\n                  </div>\n                  <div className=\"text-2xl font-bold text-orange-600 mt-4\" data-testid=\"text-revenue-growth\">\n                    +20-25% liikevaihdon kasvu\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </section>\n\n          <Separator />\n\n          {/* Recommendations */}\n          <section>\n            <h2 className=\"text-3xl font-bold mb-6 text-white\" data-testid=\"text-recommendations\">\n              Suositukset AI-toteutukseen\n            </h2>\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2\">\n                    <Target className=\"h-5 w-5 text-slate-400\" />\n                    <span>Strategiset prioriteetit</span>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-3\">\n                  <div className=\"flex items-start space-x-3\">\n                    <AlertCircle className=\"h-5 w-5 text-red-600 mt-0.5\" />\n                    <span>Keskity asiakaskokemus AI-ratkaisuihin</span>\n                  </div>\n                  <div className=\"flex items-start space-x-3\">\n                    <Users className=\"h-5 w-5 text-purple-600 mt-0.5\" />\n                    <span>Kehitä omia AI-kykyjä</span>\n                  </div>\n                  <div className=\"flex items-start space-x-3\">\n                    <Building2 className=\"h-5 w-5 text-green-600 mt-0.5\" />\n                    <span>Integroi AI olemassa oleviin palveluihin</span>\n                  </div>\n                  <div className=\"flex items-start space-x-3\">\n                    <Lightbulb className=\"h-5 w-5 text-yellow-600 mt-0.5\" />\n                    <span>Investoi henkilöstön AI-koulutukseen</span>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2\">\n                    <Rocket className=\"h-5 w-5 text-purple-600\" />\n                    <span>Toimenpiteet</span>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-3\">\n                  <div className=\"flex items-start space-x-3\">\n                    <Users className=\"h-5 w-5 text-slate-400 mt-0.5\" />\n                    <span>Palkkaa Technology Lead ja AI-asiantuntijoita</span>\n                  </div>\n                  <div className=\"flex items-start space-x-3\">\n                    <Rocket className=\"h-5 w-5 text-green-600 mt-0.5\" />\n                    <span>Käynnistä AI-pilottiprojektit Q1 2026</span>\n                  </div>\n                  <div className=\"flex items-start space-x-3\">\n                    <CheckCircle className=\"h-5 w-5 text-purple-600 mt-0.5\" />\n                    <span>Kehitä AI-palveluportfolio</span>\n                  </div>\n                  <div className=\"flex items-start space-x-3\">\n                    <TrendingUp className=\"h-5 w-5 text-orange-600 mt-0.5\" />\n                    <span>Positionoi AI-asiakaskokemusjohtajaksi</span>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n\n            {/* Timeline */}\n            <Card className=\"mt-6\">\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <Calendar className=\"h-5 w-5 text-slate-400\" />\n                  <span>AI-toteutuksen aikataulu</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                  <div className=\"text-center\">\n                    <div className=\"bg-slate-700 rounded-full w-12 h-12 flex items-center justify-center mx-auto mb-3\">\n                      <span className=\"text-slate-400 font-bold\">1</span>\n                    </div>\n                    <h3 className=\"font-semibold mb-2\" data-testid=\"text-foundation-phase\">Perusta</h3>\n                    <p className=\"text-sm text-slate-300 text-slate-300\">\n                      Q1-Q2 2026: Tiimin rakentaminen, infrastruktuurin setup, pilottiprojektit\n                    </p>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"bg-green-100 dark:bg-green-900 rounded-full w-12 h-12 flex items-center justify-center mx-auto mb-3\">\n                      <span className=\"text-green-600 font-bold\">2</span>\n                    </div>\n                    <h3 className=\"font-semibold mb-2\" data-testid=\"text-development-phase\">Kehitys</h3>\n                    <p className=\"text-sm text-slate-300 text-slate-300\">\n                      Q3-Q4 2026: Palvelukehitys, markkinatestaus, hienosäätö\n                    </p>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"bg-purple-100 dark:bg-purple-900 rounded-full w-12 h-12 flex items-center justify-center mx-auto mb-3\">\n                      <span className=\"text-purple-600 font-bold\">3</span>\n                    </div>\n                    <h3 className=\"font-semibold mb-2\" data-testid=\"text-scale-phase\">Skaalaus</h3>\n                    <p className=\"text-sm text-slate-300 text-slate-300\">\n                      2027: Täysi markkinatuotanto, laajentuminen, kasvun optimointi\n                    </p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </section>\n\n          {/* Syväanalyysi */}\n          <section className=\"space-y-6\">\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-3xl font-bold text-white mb-3\" data-testid=\"text-deep-analysis-title\">\n                Syväanalyysi: AI-toteutuksen vaikutusarviot\n              </h2>\n              <p className=\"text-slate-300 max-w-3xl mx-auto\">\n                Perusteellinen analyysi tekoälyn käyttöönoton potentiaalisista vaikutuksista Humm Group Oy:llä, \n                vertailtuna suomalaisten asiakaspalvelun ulkoistajien kanssa.\n              </p>\n            </div>\n\n            {/* Analyysin perusteet */}\n            <Card className=\"border-slate-600 bg-slate-800/50\">\n              <CardHeader>\n                <CardTitle className=\"text-emerald-400 flex items-center space-x-2\">\n                  <BarChart3 className=\"h-5 w-5\" />\n                  <span>Analyysin perusteet ja lähtökohdat</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div className=\"space-y-3\">\n                    <h4 className=\"font-semibold text-white\">Tutkimuspohjaiset arviot</h4>\n                    <ul className=\"space-y-2 text-sm text-slate-300\">\n                      <li className=\"flex items-start space-x-2\">\n                        <div className=\"w-1.5 h-1.5 bg-emerald-400 rounded-full mt-2 flex-shrink-0\"></div>\n                        <span>McKinsey, Gartner ja Deloitte -tutkimukset</span>\n                      </li>\n                      <li className=\"flex items-start space-x-2\">\n                        <div className=\"w-1.5 h-1.5 bg-emerald-400 rounded-full mt-2 flex-shrink-0\"></div>\n                        <span>Asiakaspalvelualan AI-ratkaisujen hyödyt 15-30%</span>\n                      </li>\n                      <li className=\"flex items-start space-x-2\">\n                        <div className=\"w-1.5 h-1.5 bg-emerald-400 rounded-full mt-2 flex-shrink-0\"></div>\n                        <span>PK-yritysten AI-investointien ROI 20-35% (2-3v)</span>\n                      </li>\n                    </ul>\n                  </div>\n                  <div className=\"space-y-3\">\n                    <h4 className=\"font-semibold text-white\">Yrityskohtaiset tekijät</h4>\n                    <ul className=\"space-y-2 text-sm text-slate-300\">\n                      <li className=\"flex items-start space-x-2\">\n                        <div className=\"w-1.5 h-1.5 bg-blue-400 rounded-full mt-2 flex-shrink-0\"></div>\n                        <span>52 työntekijää - nopeat päätökset</span>\n                      </li>\n                      <li className=\"flex items-start space-x-2\">\n                        <div className=\"w-1.5 h-1.5 bg-blue-400 rounded-full mt-2 flex-shrink-0\"></div>\n                        <span>Korkeat henkilöstökustannukset (60-70%)</span>\n                      </li>\n                      <li className=\"flex items-start space-x-2\">\n                        <div className=\"w-1.5 h-1.5 bg-blue-400 rounded-full mt-2 flex-shrink-0\"></div>\n                        <span>Olemassa oleva AI-pohja (virtuaaliavustaja)</span>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Vaikutusarviot */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              {/* Operatiivinen tehokkuus */}\n              <Card className=\"border-slate-600 bg-gradient-to-br from-green-900/20 to-green-800/10\">\n                <CardHeader>\n                  <CardTitle className=\"text-green-400 flex items-center space-x-2\">\n                    <TrendingUp className=\"h-5 w-5\" />\n                    <span>Operatiivinen tehokkuus</span>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-center mb-4\">\n                    <div className=\"text-3xl font-bold text-green-400 mb-1\">15-25%</div>\n                    <div className=\"text-sm text-slate-400\">Parannus</div>\n                  </div>\n                  <div className=\"space-y-3 text-sm text-slate-300\">\n                    <div className=\"bg-slate-700/50 rounded-lg p-3\">\n                      <h5 className=\"font-medium text-white mb-2\">Perustelut:</h5>\n                      <ul className=\"space-y-1\">\n                        <li>• Chatbotit hoitavat 50% yksinkertaisista kyselyistä</li>\n                        <li>• Älykkäät reititysjärjestelmät vähentävät odotusaikoja</li>\n                        <li>• Automaattinen analytiikka tunnistaa toistuvia ongelmia</li>\n                      </ul>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Asiakastyytyväisyys */}\n              <Card className=\"border-slate-600 bg-gradient-to-br from-blue-900/20 to-blue-800/10\">\n                <CardHeader>\n                  <CardTitle className=\"text-blue-400 flex items-center space-x-2\">\n                    <Users className=\"h-5 w-5\" />\n                    <span>Asiakastyytyväisyys</span>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-center mb-4\">\n                    <div className=\"text-3xl font-bold text-blue-400 mb-1\">20-30%</div>\n                    <div className=\"text-sm text-slate-400\">Parannus</div>\n                  </div>\n                  <div className=\"space-y-3 text-sm text-slate-300\">\n                    <div className=\"bg-slate-700/50 rounded-lg p-3\">\n                      <h5 className=\"font-medium text-white mb-2\">Konkreettiset edut:</h5>\n                      <ul className=\"space-y-1\">\n                        <li>• 24/7 saatavuus ilman lisäkustannuksia</li>\n                        <li>• Personoidut palvelukokemukset</li>\n                        <li>• Ennakoiva asiakaspalvelu</li>\n                      </ul>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Liikevaihdon kasvu */}\n              <Card className=\"border-slate-600 bg-gradient-to-br from-purple-900/20 to-purple-800/10\">\n                <CardHeader>\n                  <CardTitle className=\"text-purple-400 flex items-center space-x-2\">\n                    <Euro className=\"h-5 w-5\" />\n                    <span>Liikevaihdon kasvu</span>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-center mb-4\">\n                    <div className=\"text-3xl font-bold text-purple-400 mb-1\">10-15%</div>\n                    <div className=\"text-sm text-slate-400\">2-3 vuoden aikajänne</div>\n                  </div>\n                  <div className=\"space-y-3 text-sm text-slate-300\">\n                    <div className=\"bg-slate-700/50 rounded-lg p-3\">\n                      <h5 className=\"font-medium text-white mb-2\">Kasvulähteet:</h5>\n                      <ul className=\"space-y-1\">\n                        <li>• Uudet AI-pohjaiset palvelutuotteet</li>\n                        <li>• Parempi asiakkaiden säilyttäminen</li>\n                        <li>• Uusien markkinoiden valloitus</li>\n                      </ul>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Kannattavuus */}\n              <Card className=\"border-slate-600 bg-gradient-to-br from-orange-900/20 to-orange-800/10\">\n                <CardHeader>\n                  <CardTitle className=\"text-orange-400 flex items-center space-x-2\">\n                    <TrendingUp className=\"h-5 w-5\" />\n                    <span>Kannattavuuden parannus</span>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-center mb-4\">\n                    <div className=\"text-3xl font-bold text-orange-400 mb-1\">3-5pp</div>\n                    <div className=\"text-sm text-slate-400\">Prosenttiyksikköä</div>\n                  </div>\n                  <div className=\"space-y-3 text-sm text-slate-300\">\n                    <div className=\"bg-slate-700/50 rounded-lg p-3\">\n                      <h5 className=\"font-medium text-white mb-2\">Vaikutusmekanismit:</h5>\n                      <ul className=\"space-y-1\">\n                        <li>• Henkilöstökustannusten aleneminen 15-25%</li>\n                        <li>• Skaalautuvuuden parantuminen</li>\n                        <li>• Virheiden ja uudelleentyön väheneminen</li>\n                      </ul>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n\n            {/* Vertailu suomalaisiin yrityksiin */}\n            <Card className=\"border-slate-600 bg-slate-800/50\">\n              <CardHeader>\n                <CardTitle className=\"text-yellow-400 flex items-center space-x-2\">\n                  <Building2 className=\"h-5 w-5\" />\n                  <span>Vertailu suomalaisiin asiakaspalvelun ulkoistajiin</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"overflow-x-auto\">\n                  <table className=\"w-full text-sm\">\n                    <thead>\n                      <tr className=\"border-b border-slate-600\">\n                        <th className=\"text-left py-3 px-4 text-white font-medium\">Yritys</th>\n                        <th className=\"text-right py-3 px-4 text-white font-medium\">Liikevaihto</th>\n                        <th className=\"text-right py-3 px-4 text-white font-medium\">LV-kasvu</th>\n                        <th className=\"text-right py-3 px-4 text-white font-medium\">Liiketulos-%</th>\n                        <th className=\"text-right py-3 px-4 text-white font-medium\">AI-taso</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"text-slate-300\">\n                      <tr className=\"border-b border-slate-700\">\n                        <td className=\"py-3 px-4\">Epassi Group Oy</td>\n                        <td className=\"text-right py-3 px-4\">€150M</td>\n                        <td className=\"text-right py-3 px-4 text-green-400\">+15%</td>\n                        <td className=\"text-right py-3 px-4 text-green-400\">+8%</td>\n                        <td className=\"text-right py-3 px-4\">Kehittynyt</td>\n                      </tr>\n                      <tr className=\"border-b border-slate-700\">\n                        <td className=\"py-3 px-4\">Accountor Group</td>\n                        <td className=\"text-right py-3 px-4\">€300M</td>\n                        <td className=\"text-right py-3 px-4 text-green-400\">+10%</td>\n                        <td className=\"text-right py-3 px-4 text-green-400\">+6%</td>\n                        <td className=\"text-right py-3 px-4\">Kehittynyt</td>\n                      </tr>\n                      <tr className=\"border-b border-slate-700\">\n                        <td className=\"py-3 px-4\">Administer Oyj</td>\n                        <td className=\"text-right py-3 px-4\">€50M</td>\n                        <td className=\"text-right py-3 px-4 text-green-400\">+8%</td>\n                        <td className=\"text-right py-3 px-4 text-green-400\">+4%</td>\n                        <td className=\"text-right py-3 px-4\">Kehittynyt</td>\n                      </tr>\n                      <tr className=\"border-b border-slate-700 bg-slate-700/30\">\n                        <td className=\"py-3 px-4 font-semibold\">Humm Group (nykyinen)</td>\n                        <td className=\"text-right py-3 px-4\">€2.1M</td>\n                        <td className=\"text-right py-3 px-4 text-red-400\">-7.7%</td>\n                        <td className=\"text-right py-3 px-4 text-red-400\">-0.2%</td>\n                        <td className=\"text-right py-3 px-4\">Perustaso</td>\n                      </tr>\n                      <tr className=\"border-b border-slate-700 bg-green-900/20\">\n                        <td className=\"py-3 px-4 font-semibold text-green-400\">Humm Group (AI-toteutuksen jälkeen)</td>\n                        <td className=\"text-right py-3 px-4\">€2.1M</td>\n                        <td className=\"text-right py-3 px-4 text-green-400\">+10-15%</td>\n                        <td className=\"text-right py-3 px-4 text-green-400\">+3-5%</td>\n                        <td className=\"text-right py-3 px-4 text-green-400\">Kehittynyt</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n                <div className=\"mt-4 text-xs text-slate-400\">\n                  Lähteet: Vertailuyritysten vuosikertomus 2024, toimialavertailut\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Riskit ja haasteet */}\n            <Card className=\"border-slate-600 bg-gradient-to-br from-red-900/20 to-red-800/10\">\n              <CardHeader>\n                <CardTitle className=\"text-red-400 flex items-center space-x-2\">\n                  <AlertCircle className=\"h-5 w-5\" />\n                  <span>Riskit ja kriittiset menestystekijät</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                  <div className=\"space-y-3\">\n                    <h4 className=\"font-semibold text-white flex items-center space-x-2\">\n                      <Target className=\"h-4 w-4 text-red-400\" />\n                      <span>Toteutusriskit</span>\n                    </h4>\n                    <ul className=\"space-y-2 text-sm text-slate-300\">\n                      <li className=\"flex items-start space-x-2\">\n                        <div className=\"w-1 h-1 bg-red-400 rounded-full mt-2 flex-shrink-0\"></div>\n                        <span>Huono teknologiavalinta</span>\n                      </li>\n                      <li className=\"flex items-start space-x-2\">\n                        <div className=\"w-1 h-1 bg-red-400 rounded-full mt-2 flex-shrink-0\"></div>\n                        <span>Integraatio-ongelmat</span>\n                      </li>\n                      <li className=\"flex items-start space-x-2\">\n                        <div className=\"w-1 h-1 bg-red-400 rounded-full mt-2 flex-shrink-0\"></div>\n                        <span>Riittämättömät resurssit</span>\n                      </li>\n                    </ul>\n                  </div>\n                  <div className=\"space-y-3\">\n                    <h4 className=\"font-semibold text-white flex items-center space-x-2\">\n                      <Users className=\"h-4 w-4 text-orange-400\" />\n                      <span>Muutosjohtaminen</span>\n                    </h4>\n                    <ul className=\"space-y-2 text-sm text-slate-300\">\n                      <li className=\"flex items-start space-x-2\">\n                        <div className=\"w-1 h-1 bg-orange-400 rounded-full mt-2 flex-shrink-0\"></div>\n                        <span>Henkilöstön vastustus</span>\n                      </li>\n                      <li className=\"flex items-start space-x-2\">\n                        <div className=\"w-1 h-1 bg-orange-400 rounded-full mt-2 flex-shrink-0\"></div>\n                        <span>Osaamispuute</span>\n                      </li>\n                      <li className=\"flex items-start space-x-2\">\n                        <div className=\"w-1 h-1 bg-orange-400 rounded-full mt-2 flex-shrink-0\"></div>\n                        <span>Asiakkaiden epäluottamus</span>\n                      </li>\n                    </ul>\n                  </div>\n                  <div className=\"space-y-3\">\n                    <h4 className=\"font-semibold text-white flex items-center space-x-2\">\n                      <BarChart3 className=\"h-4 w-4 text-purple-400\" />\n                      <span>Markkinariskit</span>\n                    </h4>\n                    <ul className=\"space-y-2 text-sm text-slate-300\">\n                      <li className=\"flex items-start space-x-2\">\n                        <div className=\"w-1 h-1 bg-purple-400 rounded-full mt-2 flex-shrink-0\"></div>\n                        <span>Kilpailijoiden nopeus</span>\n                      </li>\n                      <li className=\"flex items-start space-x-2\">\n                        <div className=\"w-1 h-1 bg-purple-400 rounded-full mt-2 flex-shrink-0\"></div>\n                        <span>Teknologian vanheneminen</span>\n                      </li>\n                      <li className=\"flex items-start space-x-2\">\n                        <div className=\"w-1 h-1 bg-purple-400 rounded-full mt-2 flex-shrink-0\"></div>\n                        <span>Sääntely-ympäristö</span>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Suositukset */}\n            <Card className=\"border-slate-600 bg-gradient-to-br from-emerald-900/20 to-emerald-800/10\">\n              <CardHeader>\n                <CardTitle className=\"text-emerald-400 flex items-center space-x-2\">\n                  <Lightbulb className=\"h-5 w-5\" />\n                  <span>Strategiset suositukset</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                  <div className=\"space-y-4\">\n                    <h4 className=\"font-semibold text-white text-center\">Välittömät (0-6 kk)</h4>\n                    <div className=\"bg-emerald-950/50 rounded-lg p-4 space-y-3\">\n                      <div className=\"flex items-start space-x-2\">\n                        <CheckCircle className=\"h-4 w-4 text-emerald-400 mt-0.5 flex-shrink-0\" />\n                        <span className=\"text-sm text-slate-300\">Technology Lead -rekrytointi</span>\n                      </div>\n                      <div className=\"flex items-start space-x-2\">\n                        <CheckCircle className=\"h-4 w-4 text-emerald-400 mt-0.5 flex-shrink-0\" />\n                        <span className=\"text-sm text-slate-300\">Virtuaaliavustajan laajentaminen</span>\n                      </div>\n                      <div className=\"flex items-start space-x-2\">\n                        <CheckCircle className=\"h-4 w-4 text-emerald-400 mt-0.5 flex-shrink-0\" />\n                        <span className=\"text-sm text-slate-300\">AI-analytiikkapalveluiden aloitus</span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"space-y-4\">\n                    <h4 className=\"font-semibold text-white text-center\">Keskipitkä (1-2v)</h4>\n                    <div className=\"bg-blue-950/50 rounded-lg p-4 space-y-3\">\n                      <div className=\"flex items-start space-x-2\">\n                        <Target className=\"h-4 w-4 text-blue-400 mt-0.5 flex-shrink-0\" />\n                        <span className=\"text-sm text-slate-300\">AI-palvelutuotteiden kehitys</span>\n                      </div>\n                      <div className=\"flex items-start space-x-2\">\n                        <Target className=\"h-4 w-4 text-blue-400 mt-0.5 flex-shrink-0\" />\n                        <span className=\"text-sm text-slate-300\">Järjestelmäintegraatiot</span>\n                      </div>\n                      <div className=\"flex items-start space-x-2\">\n                        <Target className=\"h-4 w-4 text-blue-400 mt-0.5 flex-shrink-0\" />\n                        <span className=\"text-sm text-slate-300\">Henkilöstön AI-koulutus</span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"space-y-4\">\n                    <h4 className=\"font-semibold text-white text-center\">Pitkä aikaväli (3+v)</h4>\n                    <div className=\"bg-purple-950/50 rounded-lg p-4 space-y-3\">\n                      <div className=\"flex items-start space-x-2\">\n                        <Rocket className=\"h-4 w-4 text-purple-400 mt-0.5 flex-shrink-0\" />\n                        <span className=\"text-sm text-slate-300\">Omien AI-mallien kehitys</span>\n                      </div>\n                      <div className=\"flex items-start space-x-2\">\n                        <Rocket className=\"h-4 w-4 text-purple-400 mt-0.5 flex-shrink-0\" />\n                        <span className=\"text-sm text-slate-300\">Uusille markkinoille laajentuminen</span>\n                      </div>\n                      <div className=\"flex items-start space-x-2\">\n                        <Rocket className=\"h-4 w-4 text-purple-400 mt-0.5 flex-shrink-0\" />\n                        <span className=\"text-sm text-slate-300\">AI-edelläkävijäpositio CX-alalla</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Yhteenveto */}\n            <Card className=\"border-slate-600 bg-gradient-to-br from-slate-800 to-slate-700\">\n              <CardHeader>\n                <CardTitle className=\"text-white flex items-center space-x-2\">\n                  <CheckCircle className=\"h-5 w-5 text-green-400\" />\n                  <span>Yhteenveto ja päätelmät</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"bg-slate-700/50 rounded-lg p-6 space-y-4\">\n                  <p className=\"text-slate-300 leading-relaxed\">\n                    <strong className=\"text-white\">Tekoälyn käyttöönottopotentiaali:</strong> Humm Group Oy:llä on merkittävä mahdollisuus \n                    parantaa toimintaansa AI-teknologian avulla. Vertailu samankokoisiin suomalaisiin yrityksiin osoittaa, että \n                    onnistunut toteutus voisi nostaa yrityksen kilpailukyvyn merkittävästi.\n                  </p>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div className=\"space-y-2\">\n                      <h5 className=\"font-semibold text-emerald-400\">Keskeiset hyödyt:</h5>\n                      <ul className=\"text-sm text-slate-300 space-y-1\">\n                        <li>• 15-25% operatiivisen tehokkuuden parannus</li>\n                        <li>• 20-30% asiakastyytyväisyyden kasvu</li>\n                        <li>• 10-15% liikevaihdon nousu 2-3 vuodessa</li>\n                        <li>• 3-5pp kannattavuuden parannus</li>\n                      </ul>\n                    </div>\n                    <div className=\"space-y-2\">\n                      <h5 className=\"font-semibold text-yellow-400\">Kriittiset menestystekijät:</h5>\n                      <ul className=\"text-sm text-slate-300 space-y-1\">\n                        <li>• Technology Lead -rekrytointi</li>\n                        <li>• Riittävät investoinnit (10-15% liikevaihdosta)</li>\n                        <li>• Onnistunut muutosjohtaminen</li>\n                        <li>• Asiakkaiden luottamuksen säilyttäminen</li>\n                      </ul>\n                    </div>\n                  </div>\n                  <div className=\"border-l-4 border-emerald-400 pl-4 bg-emerald-950/20 py-3 rounded-r\">\n                    <p className=\"text-emerald-200 font-medium\">\n                      Suositus: AI-toteutus kannattaa aloittaa asteittain pilottiprojekteilla, keskittyen aluksi \n                      asiakaspalvelun tehostamiseen ja laajentaen vähitellen muille liiketoiminta-alueille.\n                    </p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </section>\n\n          {/* Return to Home CTA */}\n          <div className=\"text-center py-8\">\n            <Link href=\"/\">\n              <Button size=\"lg\" className=\"bg-slate-600 hover:bg-slate-700\" data-testid=\"button-return-home\">\n                <ArrowLeft className=\"h-5 w-5 mr-2\" />\n                Palaa etusivulle\n              </Button>\n            </Link>\n          </div>\n\n        </div>\n      </ScrollArea>\n    </div>\n  );\n}","size_bytes":51801},"client/src/pages/tech-lead-cv.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Link } from \"wouter\";\nimport { ArrowLeft } from \"lucide-react\";\n\nexport default function TechLeadCV() {\n  const [year, setYear] = useState(new Date().getFullYear());\n\n  useEffect(() => {\n    // Scroll to section functionality\n    const handlePillClick = (event: Event) => {\n      const button = event.target as HTMLButtonElement;\n      const targetId = button.getAttribute('data-target');\n      if (targetId) {\n        const element = document.querySelector(targetId);\n        if (element) {\n          element.scrollIntoView({ behavior: 'smooth', block: 'start' });\n        }\n      }\n    };\n\n    // Active section highlighting\n    const setActive = (id: string) => {\n      const pills = document.querySelectorAll('.pill');\n      pills.forEach(pill => {\n        pill.setAttribute('aria-current', \n          pill.getAttribute('data-target') === id ? 'true' : 'false'\n        );\n      });\n    };\n\n    // Intersection observer for active section\n    const io = new IntersectionObserver((entries) => {\n      const visible = entries\n        .filter(e => e.isIntersecting)\n        .sort((a, b) => b.intersectionRatio - a.intersectionRatio);\n      if (visible[0]) {\n        setActive('#' + visible[0].target.id);\n      }\n    }, {\n      rootMargin: '-30% 0px -60% 0px',\n      threshold: [0, 0.2, 0.4, 0.6, 0.8, 1]\n    });\n\n    // Show/hide scroll to top button\n    const handleScroll = () => {\n      const toTop = document.getElementById('toTop');\n      if (window.scrollY > 600) {\n        toTop?.classList.add('show');\n      } else {\n        toTop?.classList.remove('show');\n      }\n    };\n\n    // Scroll to top functionality\n    const handleToTopClick = () => {\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    };\n\n    // Collapsible sections functionality\n    const handleReadMoreClick = (event: Event) => {\n      const button = event.target as HTMLButtonElement;\n      const target = button.getAttribute('data-target');\n      const content = document.querySelector(`[data-section=\"${target}\"]`);\n      \n      if (content) {\n        const isCollapsed = content.classList.contains('collapsed');\n        if (isCollapsed) {\n          content.classList.remove('collapsed');\n          content.classList.add('expanded');\n          button.textContent = 'Näytä vähemmän';\n        } else {\n          content.classList.add('collapsed');\n          content.classList.remove('expanded');\n          button.textContent = 'Lue lisää';\n          // Scroll to section header when collapsing\n          const sectionHeader = content.closest('.collapsible-section')?.querySelector('h2');\n          if (sectionHeader) {\n            sectionHeader.scrollIntoView({ behavior: 'smooth', block: 'start' });\n          }\n        }\n      }\n    };\n\n    // Add event listeners\n    document.addEventListener('scroll', handleScroll, { passive: true });\n    \n    // Section navigation pills\n    const pills = document.querySelectorAll('.pill');\n    pills.forEach(pill => {\n      pill.addEventListener('click', handlePillClick);\n    });\n\n    // Observe sections for active highlighting - only pills with data-target\n    const sections = Array.from(pills)\n      .filter(pill => pill.getAttribute('data-target'))  // Only pills with data-target\n      .map(pill => document.querySelector(pill.getAttribute('data-target')!))\n      .filter(Boolean);\n    sections.forEach(section => section && io.observe(section));\n\n    // Back to top button\n    const toTopButton = document.getElementById('toTop');\n    toTopButton?.addEventListener('click', handleToTopClick);\n\n    // Read more buttons\n    const readMoreButtons = document.querySelectorAll('.read-more-btn');\n    readMoreButtons.forEach(btn => {\n      btn.addEventListener('click', handleReadMoreClick);\n    });\n\n    // Cleanup\n    return () => {\n      document.removeEventListener('scroll', handleScroll);\n      pills.forEach(pill => {\n        pill.removeEventListener('click', handlePillClick);\n      });\n      sections.forEach(section => section && io.unobserve(section));\n      toTopButton?.removeEventListener('click', handleToTopClick);\n      readMoreButtons.forEach(btn => {\n        btn.removeEventListener('click', handleReadMoreClick);\n      });\n    };\n  }, []);\n\n  return (\n    <>\n      <style>{`\n        :root {\n          --bg: #0a1530;\n          --bg-elev: #0f1f46;\n          --brand: #103a7a;\n          --brand-2: #2563eb;\n          --muted: #a8b3cf;\n          --txt: #e8efff;\n          --shadow: 0 10px 30px rgba(15,31,70,.35);\n          --radius: 18px;\n          --ring: 0 0 0 3px rgba(37,99,235,.35);\n        }\n        \n        .cv-page {\n          min-height: 100vh;\n          margin: 0;\n          font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif;\n          color: var(--txt);\n          background: radial-gradient(1200px 600px at 20% -10%, #182a57 0%, transparent 60%), \n                     radial-gradient(800px 600px at 100% 0%, #0c2b5f 0%, transparent 50%), \n                     var(--bg);\n          line-height: 1.6;\n          scroll-behavior: smooth;\n        }\n        \n        .wrap { \n          width: min(1000px, 92vw); \n          margin-inline: auto; \n        }\n        \n        .cv-header { \n          position: sticky; \n          top: 0; \n          z-index: 20; \n          background: rgba(10,21,48,.65); \n          backdrop-filter: saturate(140%) blur(8px); \n          border-bottom: 1px solid rgba(255,255,255,.06);\n        }\n        \n        .head { \n          display: grid; \n          grid-template-columns: 1fr auto; \n          gap: 12px; \n          align-items: center; \n          padding: 16px 0; \n        }\n        \n        .name { \n          font-weight: 800; \n          letter-spacing: .4px; \n          font-size: clamp(1.3rem, 1.2vw + 1rem, 1.8rem);\n        }\n        \n        .tag { \n          color: var(--muted);\n        }\n        \n        .sectionnav { \n          position: sticky; \n          top: 66px; \n          z-index: 19; \n          background: rgba(10,21,48,.55); \n          backdrop-filter: saturate(140%) blur(8px); \n          border-bottom: 1px solid rgba(255,255,255,.06);\n        }\n        \n        .sectionnav .wrap { \n          display: flex; \n          flex-wrap: wrap; \n          gap: 8px; \n          padding: 10px 0;\n        }\n        \n        .pill { \n          appearance: none; \n          border: 1px solid rgba(255,255,255,.14); \n          background: linear-gradient(180deg, rgba(255,255,255,.06), rgba(255,255,255,.02)); \n          color: var(--txt); \n          padding: 8px 12px; \n          border-radius: 999px; \n          cursor: pointer; \n          font-weight: 600; \n          letter-spacing: .2px; \n          transition: transform .08s ease, box-shadow .08s ease, background .2s ease;\n        }\n        \n        .pill:hover { \n          transform: translateY(-1px); \n          box-shadow: var(--shadow);\n        }\n        \n        .pill[aria-current=\"true\"] { \n          background: linear-gradient(180deg, var(--brand-2), var(--brand)); \n          border-color: transparent; \n          box-shadow: var(--ring);\n        }\n        \n        .section { \n          padding: 28px 0;\n        }\n        \n        .content-subtitle {\n          color: var(--txt);\n          font-size: 1.1rem;\n          font-weight: 700;\n          margin: 24px 0 12px 0;\n          border-bottom: 1px solid rgba(255,255,255,.1);\n          padding-bottom: 8px;\n        }\n        \n        .skill-highlight {\n          background: rgba(255,255,255,.03);\n          border: 1px solid rgba(255,255,255,.1);\n          border-radius: 8px;\n          padding: 16px;\n          margin: 16px 0;\n        }\n        \n        .skill-highlight p {\n          margin: 8px 0;\n        }\n        \n        .philosophy-text {\n          background: rgba(255,255,255,.02);\n          border-left: 3px solid rgba(255,255,255,.3);\n          padding: 16px;\n          border-radius: 0 4px 4px 0;\n          font-style: italic;\n          margin: 20px 0;\n        }\n        \n        .value-proposition {\n          background: rgba(255,255,255,.02);\n          border: 1px solid rgba(255,255,255,.08);\n          border-radius: 8px;\n          padding: 20px;\n          margin: 24px 0;\n        }\n        \n        .value-proposition h4 {\n          margin: 0 0 16px 0;\n          color: var(--txt);\n        }\n        \n        .value-grid {\n          display: grid;\n          grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n          gap: 12px;\n          margin-top: 12px;\n        }\n        \n        .value-item {\n          background: rgba(255,255,255,.03);\n          border: 1px solid rgba(255,255,255,.08);\n          padding: 12px;\n          border-radius: 4px;\n          text-align: center;\n          font-size: 0.9rem;\n        }\n        \n        .role-intro {\n          background: rgba(255,255,255,.02);\n          border: 1px solid rgba(255,255,255,.06);\n          border-radius: 8px;\n          padding: 20px;\n          margin-bottom: 24px;\n        }\n        \n        .lead-text {\n          font-size: 1.1rem;\n          line-height: 1.7;\n        }\n        \n        .highlight-section {\n          color: var(--txt);\n          font-size: 1.2rem;\n          font-weight: 700;\n          margin: 28px 0 16px 0;\n          border-bottom: 1px solid rgba(255,255,255,.2);\n          padding-bottom: 8px;\n        }\n        \n        .emphasis-box {\n          background: rgba(255,255,255,.02);\n          border: 1px solid rgba(255,255,255,.1);\n          border-radius: 8px;\n          padding: 24px;\n          margin: 16px 0;\n        }\n        \n        .critical-text {\n          color: var(--txt);\n          font-weight: 800;\n          font-size: 1.1em;\n        }\n        \n        .commitment-list {\n          margin: 16px 0;\n          background: rgba(255,255,255,.02);\n          border: 1px solid rgba(255,255,255,.06);\n          border-radius: 4px;\n          padding: 16px;\n        }\n        \n        .commitment-list p {\n          margin: 6px 0;\n          font-size: 0.95rem;\n        }\n        \n        .result-text {\n          background: rgba(255,255,255,.03);\n          border: 1px solid rgba(255,255,255,.1);\n          border-radius: 4px;\n          padding: 12px;\n          margin-top: 16px;\n          text-align: center;\n          font-weight: 600;\n        }\n        \n        .enhanced-list {\n          background: rgba(255,255,255,.02);\n          border-radius: 12px;\n          padding: 20px;\n          margin: 16px 0;\n        }\n        \n        .enhanced-list ul {\n          list-style: none;\n          padding: 0;\n        }\n        \n        .enhanced-list li {\n          padding: 8px 0;\n          padding-left: 24px;\n          position: relative;\n          border-bottom: 1px solid rgba(255,255,255,.05);\n        }\n        \n        .enhanced-list li:last-child {\n          border-bottom: none;\n        }\n        \n        .enhanced-list li::before {\n          content: '•';\n          position: absolute;\n          left: 0;\n          color: rgba(255,255,255,.6);\n          font-weight: bold;\n          font-size: 1.2em;\n        }\n        \n        /* Better spacing and visual hierarchy */\n        .section {\n          padding: 32px 0;\n        }\n        \n        .section.card {\n          background: rgba(255,255,255,.02);\n          border-radius: 20px;\n          border: 1px solid rgba(255,255,255,.06);\n          margin: 24px 0;\n          transition: all 0.3s ease;\n        }\n        \n        .section.card:hover {\n          background: rgba(255,255,255,.03);\n          border-color: rgba(37,99,235,.2);\n          transform: translateY(-2px);\n        }\n        \n        .section.pad {\n          padding: 32px;\n        }\n        \n        /* Enhanced content spacing */\n        .content > * + * {\n          margin-top: 20px;\n        }\n        \n        .full-content > * + * {\n          margin-top: 20px;\n        }\n        \n        /* Chip styling improvements */\n        .chip {\n          display: inline-block;\n          background: linear-gradient(135deg, var(--brand-2), var(--brand));\n          color: white;\n          padding: 8px 16px;\n          border-radius: 20px;\n          font-size: 0.85rem;\n          font-weight: 600;\n          margin: 4px 8px 4px 0;\n          box-shadow: 0 2px 8px rgba(37,99,235,.3);\n          border: 1px solid rgba(255,255,255,.1);\n        }\n        \n        /* Better responsive text sizing */\n        .content-subtitle {\n          font-size: clamp(1rem, 2vw, 1.2rem);\n        }\n        \n        .highlight-section {\n          font-size: clamp(1.1rem, 2.5vw, 1.3rem);\n        }\n        \n        /* Improved mobile spacing */\n        @media (max-width: 768px) {\n          .section.pad {\n            padding: 20px;\n          }\n          \n          .value-grid {\n            grid-template-columns: 1fr;\n            gap: 8px;\n          }\n          \n          .commitment-list {\n            padding: 12px;\n          }\n          \n          .emphasis-box {\n            padding: 16px;\n          }\n        }\n        \n        .cv-page h1, .cv-page h2, .cv-page h3 { \n          line-height: 1.2; \n          margin: .2rem 0 .6rem;\n        }\n        \n        .cv-page h1 { \n          font-size: clamp(1.8rem, 2.2vw + 1rem, 2.8rem);\n        }\n        \n        .cv-page h2 { \n          font-size: clamp(1.2rem, 1.1vw + 1rem, 1.6rem);\n        }\n        \n        .cv-page p.lead { \n          color: #d7e3ff;\n        }\n        \n        .card { \n          background: linear-gradient(180deg, rgba(255,255,255,.04), rgba(255,255,255,.02)); \n          border: 1px solid rgba(255,255,255,.08); \n          border-radius: var(--radius); \n          box-shadow: var(--shadow);\n        }\n        \n        .pad { \n          padding: 20px;\n        }\n        \n        .cv-page ul { \n          margin: 0; \n          padding-left: 1.1rem;\n        }\n        \n        .cv-page li { \n          margin: .2rem 0;\n        }\n        \n        .eyebrow { \n          color: var(--muted); \n          text-transform: uppercase; \n          letter-spacing: .12em; \n          font-size: .8rem; \n          font-weight: 700;\n        }\n        \n        .chip { \n          display: inline-block; \n          padding: 6px 10px; \n          border-radius: 999px; \n          border: 1px solid rgba(255,255,255,.14); \n          margin: 4px 6px 0 0; \n          font-size: .9rem;\n        }\n        \n        .toTop { \n          position: fixed; \n          right: 18px; \n          bottom: 18px; \n          border-radius: 999px; \n          border: 1px solid rgba(255,255,255,.18); \n          padding: 10px 12px; \n          background: rgba(30,144,255,.85); \n          color: #021128; \n          font-weight: 800; \n          cursor: pointer; \n          display: none; \n          z-index: 30;\n        }\n        \n        .toTop.show { \n          display: block;\n        }\n        \n        .cv-footer { \n          color: var(--muted); \n          border-top: 1px solid rgba(255,255,255,.08); \n          padding: 32px 0 50px;\n        }\n\n        /* Collapsible sections styles */\n        .collapsible-content {\n          position: relative;\n        }\n\n        .collapsible-content.collapsed .full-content {\n          display: none;\n        }\n\n        .collapsible-content.expanded .preview-content {\n          display: none;\n        }\n\n        .collapsible-content.collapsed .preview-content {\n          display: block;\n          position: relative;\n        }\n\n        .collapsible-content.collapsed .preview-content::after {\n          content: '';\n          position: absolute;\n          bottom: 0;\n          left: 0;\n          right: 0;\n          height: 3rem;\n          background: linear-gradient(transparent, var(--bg-elev));\n          pointer-events: none;\n        }\n\n        .read-more-btn {\n          margin-top: 1rem;\n          padding: 8px 16px;\n          background: linear-gradient(180deg, var(--brand-2), var(--brand));\n          border: none;\n          border-radius: 6px;\n          color: white;\n          font-weight: 600;\n          cursor: pointer;\n          transition: all 0.2s ease;\n        }\n\n        .read-more-btn:hover {\n          transform: translateY(-1px);\n          box-shadow: var(--shadow);\n        }\n      `}</style>\n\n      {/* Back button */}\n      <div className=\"wrap\" style={{ paddingTop: '1rem' }}>\n        <Link href=\"/\">\n          <button className=\"pill\" style={{ marginBottom: '1rem' }} data-testid=\"back-to-home\">\n            <ArrowLeft size={16} style={{ marginRight: '0.5rem' }} />\n            Palaa takaisin\n          </button>\n        </Link>\n      </div>\n\n      <div className=\"cv-page\" data-testid=\"tech-lead-cv-page\">\n        <header className=\"cv-header\" role=\"banner\">\n          <div className=\"wrap head\">\n            <div>\n              <div className=\"name\">Panu Murtokangas · Tech Lead – rooli ja Humm Group Oy</div>\n              <div className=\"tag\">Web‑pohjainen CV (darkblue‑teema) • Asiakaskokemus edellä, teknologia tuottaa arvoa</div>\n            </div>\n          </div>\n        </header>\n\n        <nav className=\"sectionnav\" aria-label=\"Osionavigaatio\">\n          <div className=\"wrap\" id=\"sectionButtons\">\n            <button className=\"pill\" data-target=\"#h-sum\" data-testid=\"nav-summary\">Tiivistelmä</button>\n            <button className=\"pill\" data-target=\"#h-mietteet\" data-testid=\"nav-thoughts\">Mietteitäni</button>\n            <button className=\"pill\" data-target=\"#h-rooli\" data-testid=\"nav-role\">Rooli</button>\n            <button className=\"pill\" data-target=\"#h-success\" data-testid=\"nav-success\">Onnistumisen tekijät</button>\n            <button className=\"pill\" data-target=\"#h-yhteenveto\" data-testid=\"nav-summary-final\">Yhteenveto</button>\n            <button className=\"pill\" data-target=\"#h-oma\" data-testid=\"nav-why-me\">Miksi minä</button>\n          </div>\n        </nav>\n\n        <main className=\"wrap\" role=\"main\">\n          <section className=\"section collapsible-section\" aria-labelledby=\"h-sum\">\n            <p className=\"eyebrow\">Tiivistelmä</p>\n            <h1 id=\"h-sum\">Tech Lead -hakemus Humm Group Oy:lle</h1>\n            <div className=\"collapsible-content collapsed\" data-section=\"summary\">\n              <div className=\"preview-content\">\n                <p className=\"lead\">Asiakaskokemus ensin – teknologia seuraa. Tällä sivulla esittelen web‑pohjaisen CV:ni ja lähestymistapani Tech Lead -rooliin...</p>\n              </div>\n              <div className=\"full-content\">\n                <p className=\"lead\">Asiakaskokemus ensin – teknologia seuraa. Tällä sivulla esittelen web‑pohjaisen CV:ni, mietteeni ja lähestymistapani Tech Lead -rooliin Humm Group Oy:llä. Kaikki alla oleva teksti on hakemuksen pohjana ja sisältää alkuperäiset mietteeni.</p>\n              </div>\n              <button className=\"read-more-btn\" data-target=\"summary\" data-testid=\"read-more-summary\">Lue lisää</button>\n            </div>\n          </section>\n\n          <section className=\"section card pad\" aria-labelledby=\"h-mietteet\">\n            <h2 id=\"h-mietteet\">Mietteitäni</h2>\n            <div className=\"content\">\n              <h3 className=\"content-subtitle\">Analyysi ja lähtökohdat</h3>\n              <p>Olen perehtynyt syvällisesti <strong>Humm Group Oy:n</strong> toimintaan, liiketoiminnallisiin tunnuslukuihin ja kilpailijoihin. Pohdin tarkkaan, minkälaista arvoa voisin yritykselle tuoda.</p>\n              \n              <h3 className=\"content-subtitle\">Ydinosaaminen</h3>\n              <p>Erikoisosaamiseni keskittyy kahteen kriittiseen alueeseen:</p>\n              <div className=\"skill-highlight\">\n                <p><strong>1. Järjestelmäintegraatiot:</strong> API-integraatiot, CRM-järjestelmien kytkennät, automaatiotyökalut ja datan siirtäminen eri järjestelmien välillä saumattomasti.</p>\n                <p><strong>2. Tekoälyn strateginen hyödyntäminen:</strong> GPT-mallien hyödyntäminen, embedding-teknologiat, RAG-arkkitehtuurit ja fine-tuning-prosessit.</p>\n              </div>\n              \n              <h3 className=\"content-subtitle\">Käytännön osaamisen todistus</h3>\n              <p>Osaan rakentaa <strong>AI-strategioita</strong>, implementoida niitä käytännössä ja mitata liiketoimintavaikutuksia. <em>Tämä sovellus toimii konkreettisena näyttönä kyvyistäni.</em></p>\n              \n              <h3 className=\"content-subtitle\">Liiketoimintaymmärrys</h3>\n              <p>Usean vuoden kokemus suurten pörssiyhtiöiden analysoinnista antaa perspektiiviä menestyneiden organisaatioiden johtamiseen.</p>\n              \n              <p className=\"philosophy-text\">Lähestymistapani: <strong>asiakaskokemus edellä, teknologia seuraa</strong>. Haluan olla mukana merkityksellisessä työssä ja luoda todellista arvoa.</p>\n              \n              <div className=\"value-proposition\">\n                <h4>Kolme arvonluontitapaa Hummille:</h4>\n                <div className=\"value-grid\">\n                  <div className=\"value-item\"><strong>Tehokkuuden parantaminen</strong></div>\n                  <div className=\"value-item\"><strong>Uusien palvelumallien ideointi</strong></div>\n                  <div className=\"value-item\"><strong>Asiakaskokemuksen kehittäminen</strong></div>\n                </div>\n              </div>\n              \n              <h3 className=\"content-subtitle\">Markkinaanalyysi</h3>\n              <p>Kilpailijoihin perehtyessäni huomasin, että monet hyödyntävät jo tekoälyä ja automaatiota. <strong>Voisin tuoda arvoa käytännön AI-osaamisella.</strong></p>\n              <h3 className=\"content-subtitle\">Henkilökohtaiset vahvuudet</h3>\n              <div className=\"enhanced-list\">\n                <ul>\n                  <li><strong>Innovatiivisuus</strong> ja uteliaisuus uusia teknologioita kohtaan</li>\n                  <li><strong>Ongelmanratkaisukyky</strong> ja analyyttinen ajattelu</li>\n                  <li><strong>Itseohjautuvuus</strong> ja proaktiivisuus</li>\n                  <li><strong>Joustavuus</strong> ja sopeutumiskyky</li>\n                  <li><strong>Tiimin johtaminen</strong> ja kehittäminen</li>\n                  <li><strong>Muutosjohtamisen</strong> taidot</li>\n                </ul>\n              </div>\n              \n              <h3 className=\"content-subtitle\">Miksi nämä ovat kriittisiä Tech Leadille</h3>\n              <div className=\"enhanced-list\">\n                <ul>\n                  <li>Tekoälyala kehittyy nopeasti → <strong>jatkuva oppiminen on välttämätöntä</strong></li>\n                  <li>Pienessä yrityksessä on monimutkaisia ongelmia → <strong>luovuus ja ratkaisukeskeisyys</strong></li>\n                  <li>Resurssipula edellyttää → <strong>itseohjautuvuutta ja itsenäistä toimintaa</strong></li>\n                  <li>Nopea muutos → <strong>joustavuus on kilpailuetu</strong></li>\n                  <li>Teknologian käyttöönotto → <strong>tiimin johtaminen on avain</strong></li>\n                  <li>AI-siirtymä → <strong>muutosjohtaminen ilman henkilöstön epävarmuutta</strong></li>\n                </ul>\n              </div>\n            </div>\n          </section>\n\n          <section className=\"section card pad collapsible-section\" aria-labelledby=\"h-rooli\">\n            <h2 id=\"h-rooli\">Tech Lead -rooli</h2>\n            <div className=\"collapsible-content collapsed\" data-section=\"rooli\">\n              <div className=\"preview-content\">\n                <p>Rooli on erityisen vaativa, koska Humm Group on pieni yritys, joka on vasta aloittamassa tekoälymatkaansa. Tech Leadin on oltava sekä tekninen asiantuntija että strateginen ajattelija...</p>\n              </div>\n              <div className=\"full-content\">\n                <div className=\"role-intro\">\n                  <p className=\"lead-text\">Rooli on erityisen vaativa, koska <strong>Humm Group</strong> on pieni yritys, joka on vasta aloittamassa tekoälymatkaansa. Tech Leadin on oltava sekä <strong>tekninen asiantuntija</strong> että <strong>strateginen ajattelija</strong>.</p>\n                </div>\n                \n                <h3 className=\"highlight-section\">Jatkuva kehitys - elinehto AI-maailmassa</h3>\n                <div className=\"emphasis-box\">\n                  <p>Tekoälyala kehittyy <strong>eksponentiaalisesti</strong>. Jatkuva oppiminen ja kehittyminen eivät ole vain hyviä ominaisuuksia - ne ovat <span className=\"critical-text\">elinehtoja</span> Tech Leadille AI-maailmassa.</p>\n                  \n                  <div className=\"commitment-list\">\n                    <p><strong>Sitoudun:</strong></p>\n                    <p>Seuraamaan aktiivisesti alan tutkimusta</p>\n                    <p>Kokeilemaan uusia teknologioita</p>\n                    <p>Osallistumaan AI-yhteisöihin</p>\n                    <p>Tekemään jatkuvasti proof-of-concept -toteutuksia</p>\n                  </div>\n                  \n                  <p className=\"result-text\">Tämä varmistaa, että <strong>Humm Group pysyy teknologisen kehityksen kärjessä</strong>.</p>\n                </div>\n                \n                <h3 className=\"content-subtitle\">Liiketoiminnan ymmärrys ja mahdollisuudet</h3>\n                <div className=\"enhanced-list\">\n                  <ul>\n                    <li><strong>Asiakaskokemus & ulkoistus:</strong> Merkittävä arvopotentiaali tekoälyllä</li>\n                    <li><strong>Henkilöstökustannukset:</strong> 60-70% osuus → automaation suuri potentiaali</li>\n                    <li><strong>Palvelun laatu:</strong> AI parantaa asiakastyytyväisyyttä ja säilyttämistä</li>\n                    <li><strong>Brändi-identiteetti:</strong> Säilytä \"Hummin värit\" - inhimillisyys + teknologia</li>\n                    <li><strong>Ydinliiketoiminta:</strong> Asiakaskokemus → syvä liiketoimintaymmärrys pakollinen</li>\n                    <li><strong>Arvotuotto:</strong> Mitattava hyöty, ei pelkkää hypetä</li>\n                    <li><strong>Strateginen linkitys:</strong> Teknologia → liiketoiminnan tavoitteet & KPI:t</li>\n                  </ul>\n                </div>\n              </div>\n              <button className=\"read-more-btn\" data-target=\"rooli\" data-testid=\"read-more-role\">Lue lisää</button>\n            </div>\n          </section>\n\n          <section className=\"section card pad collapsible-section\" aria-labelledby=\"h-success\">\n            <h2 id=\"h-success\">Keskeiset onnistumisen tekijät</h2>\n            <div className=\"collapsible-content collapsed\" data-section=\"success\">\n              <div className=\"preview-content\">\n                <p>Systemaattinen lähestymistapa Tech Lead -roolin onnistumiseen keskittyen kommunikointiin, joustavuuteen, arvon tuottamiseen ja kulttuurin muutokseen...</p>\n              </div>\n              <div className=\"full-content\">\n                <h3 className=\"content-subtitle\">Kommunikointi ja läpinäkyvyys</h3>\n                <div className=\"enhanced-list\">\n                  <ul>\n                    <li><strong>Säännölliset palaverit</strong> johdon ja tiimin kanssa</li>\n                    <li><strong>Avoin tiedonjako</strong> edistymisestä ja haasteista</li>\n                    <li><strong>Merkityksen kirkastaminen</strong> - kaikki ymmärtävät tekemisen tarkoituksen</li>\n                  </ul>\n                </div>\n                \n                <h3 className=\"content-subtitle\">Joustavuus ja iteratiivisuus</h3>\n                <div className=\"enhanced-list\">\n                  <ul>\n                    <li><strong>Ketteryys:</strong> Valmius muuttaa suunnitelmia tarpeen mukaan</li>\n                    <li><strong>Nopeat kokeilut:</strong> Oppiminen ja validointi ennen isoja investointeja</li>\n                    <li><strong>Realistinen sizing:</strong> Vältä liian suuria ja hitaita hankkeita alussa</li>\n                  </ul>\n                </div>\n                \n                <h3 className=\"content-subtitle\">Liiketoiminnan arvon tuottaminen</h3>\n                <div className=\"enhanced-list\">\n                  <ul>\n                    <li><strong>Quick wins:</strong> Keskity hankkeisiin, jotka tuottavat nopeasti arvoa</li>\n                    <li><strong>ROI-fokus:</strong> Teknologiainvestointien tuottavuuden varmistaminen</li>\n                    <li><strong>Mittaaminen:</strong> Liiketoiminnallisten vaikutusten seuranta ja viestintä</li>\n                  </ul>\n                </div>\n                \n                <h3 className=\"content-subtitle\">Kulttuurin muutos</h3>\n                <div className=\"enhanced-list\">\n                  <ul>\n                    <li><strong>Osaamisen kehitys:</strong> Teko älyosaaminen koko organisaatiossa</li>\n                    <li><strong>Teknologia työkaluna:</strong> Ei itseisarvo vaan väline tavoitteisiin</li>\n                    <li><strong>Kokeilukulttuuri:</strong> Jatkuva oppiminen ja rohkeus testata</li>\n                  </ul>\n                </div>\n                \n                <div className=\"philosophy-text\">\n                  <strong>Strateginen lähestymistapa:</strong> Systemaattinen ja hallittu aloitus Tech Lead -rooliin. Ensin ymmärrys yrityksestä ja tarpeista, sitten toimenpiteet. Ensimmäiset projektit tuottavat nopeasti arvoa ja vahvistavat luottamusta teknologian kehittämiseen.\n                </div>\n              </div>\n              <button className=\"read-more-btn\" data-target=\"success\" data-testid=\"read-more-success\">Lue lisää</button>\n            </div>\n          </section>\n\n          <section className=\"section card pad collapsible-section\" aria-labelledby=\"h-yhteenveto\">\n            <h2 id=\"h-yhteenveto\">Yhteenveto</h2>\n            <div className=\"collapsible-content collapsed\" data-section=\"yhteenveto\">\n              <div className=\"preview-content\">\n                <p>Tech Lead -rooli on strategisesti tärkeä Humm Group Oy:lle tekoälyn hyödyntämisessä ja kilpailuedun saavuttamisessa...</p>\n              </div>\n              <div className=\"full-content\">\n                <div className=\"role-intro\">\n                  <p className=\"lead-text\">Tech Lead -rooli on <strong>strategisesti kriittinen</strong> Humm Group Oy:lle tekoälyn hyödyntämisessä ja kilpailuedun saavuttamisessa. Onnistunut Tech Lead yhdistää teknologisen osaamisen, liiketoimintaymmärryksen ja johtamistaidot.</p>\n                </div>\n                \n                <h3 className=\"content-subtitle\">AI:n strategiset hyödyt Hummille</h3>\n                <div className=\"value-proposition\">\n                  <div className=\"value-grid\">\n                    <div className=\"value-item\"><strong>Asiakaskokemuksen parantaminen</strong></div>\n                    <div className=\"value-item\"><strong>Operatiivisen tehokkuuden lisääminen</strong></div>\n                    <div className=\"value-item\"><strong>Uusien palveluiden kehittäminen</strong></div>\n                    <div className=\"value-item\"><strong>Päätöksenteon tukeminen</strong></div>\n                  </div>\n                </div>\n                \n                <h3 className=\"content-subtitle\">Seuranta ja läpinäkyvyys</h3>\n                <p className=\"philosophy-text\">Seurattava dashboard on <strong>välttämätön työkalu</strong> Tech Leadille - mahdollistaa strategian ja toteutuksen jatkuvan seurannan, läpinäkyvyyden ja päätöksenteon tukemisen.</p>\n                \n                <div className=\"result-text\">\n                  <strong>Lopputulos:</strong> Onnistunut tekoälyn käyttöönotto edellyttää selkeää strategiaa, johdon sitoutumista ja systemaattista toteutusta. AI tarjoaa Hummille mahdollisuuden erottua kilpailijoista ja luoda uusia liiketoimintamahdollisuuksia.\n                </div>\n              </div>\n              <button className=\"read-more-btn\" data-target=\"yhteenveto\" data-testid=\"read-more-summary-final\">Lue lisää</button>\n            </div>\n          </section>\n\n          <section className=\"section card pad\" aria-labelledby=\"h-oma\">\n            <h2 id=\"h-oma\">Miksi minä</h2>\n            <p>Olen ideaali Tech Lead Humm Groupille, koska yhdistän teknisen tekoälyosaamisen syvään ymmärrykseen asiakaskokemusliiketoiminnastanne. Lähestymistapani on käytännönläheinen: aloitan perehtymällä yrityksenne nykytilaan, prosesseihin ja asiakkaiden tarpeisiin ennen kuin ehdän ratkaisuja.</p>\n            <p>Rakentaisin tekoälystrategianne vaiheittain, keskittyen ensin nopeisiin tuloksiin ja arvon tuottamiseen. Aloittaisin pienistä, konkreettisista pilotointihankkeista, jotka osoittavat teknologian potentiaalin ja tuottavat mitattavaa hyötyä liiketoiminnalle. Tämä lähestymistapa minimoisi riskejä ja rakentaisi luottamusta teknologian kehittämiseen.</p>\n            <div>\n              <span className=\"chip\">Innovatiivinen</span>\n              <span className=\"chip\">Analyyttinen</span>\n              <span className=\"chip\">Muutosjohtaja</span>\n              <span className=\"chip\">Asiakaskokemus edellä</span>\n            </div>\n          </section>\n        </main>\n\n        <footer className=\"wrap cv-footer\" role=\"contentinfo\">\n          <small>&copy; <span id=\"y\">{year}</span> Panu Murtokangas • Web‑CV Humm Groupille. Teema: darkblue.</small>\n        </footer>\n\n        <button className=\"toTop\" id=\"toTop\" aria-label=\"Takaisin alkuun\" data-testid=\"back-to-top\">\n          ▲\n        </button>\n      </div>\n    </>\n  );\n}","size_bytes":33402},"client/src/components/ui/pulse-button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { Loader2 } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst pulseButtonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 transform active:scale-95 hover:scale-105 hover:shadow-lg\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90 hover:shadow-primary/25\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90 hover:shadow-destructive/25\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground hover:border-primary/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80 hover:shadow-secondary/25\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n      pulse: {\n        none: \"\",\n        subtle: \"hover:animate-pulse\",\n        active: \"animate-pulse\",\n      }\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n      pulse: \"none\",\n    },\n  }\n)\n\nexport interface PulseButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof pulseButtonVariants> {\n  asChild?: boolean\n  loading?: boolean\n  loadingText?: string\n}\n\nconst PulseButton = React.forwardRef<HTMLButtonElement, PulseButtonProps>(\n  ({ className, variant, size, pulse, asChild = false, loading = false, loadingText, children, disabled, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    \n    return (\n      <Comp\n        className={cn(\n          pulseButtonVariants({ variant, size, pulse: loading ? \"active\" : pulse, className }),\n          loading && \"relative overflow-hidden\"\n        )}\n        ref={ref}\n        disabled={disabled || loading}\n        {...props}\n      >\n        {loading && (\n          <div className=\"absolute inset-0 flex items-center justify-center bg-current/10 backdrop-blur-sm\">\n            <Loader2 className=\"h-4 w-4 animate-spin\" />\n            {loadingText && <span className=\"ml-2 text-xs\">{loadingText}</span>}\n          </div>\n        )}\n        <span className={cn(\"transition-opacity\", loading && \"opacity-50\")}>\n          {children}\n        </span>\n      </Comp>\n    )\n  }\n)\nPulseButton.displayName = \"PulseButton\"\n\nexport { PulseButton, pulseButtonVariants }","size_bytes":2886},"client/src/components/tech-lead-modal.tsx":{"content":"import { useState, useEffect, useCallback } from \"react\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Input } from \"@/components/ui/input\";\nimport { PulseButton } from \"@/components/ui/pulse-button\";\nimport { Bot, User, Send, Star, Users } from \"lucide-react\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\n\ninterface ChatMessage {\n  content: string;\n  isUser: boolean;\n  timestamp: number;\n}\n\ninterface TechLeadModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nexport function TechLeadModal({ isOpen, onClose }: TechLeadModalProps) {\n  const [messages, setMessages] = useState<ChatMessage[]>([]);\n  const [hasGreeted, setHasGreeted] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [sessionId] = useState(() => Date.now().toString());\n  const [followUpSuggestions] = useState<string[]>([\n    \"Mitä arvoa voisit tuoda Hummille?\",\n    \"Kerro taustastasi ja osaamisestasi\",\n    \"Mikä on ydinosaamistasi?\",\n    \"Miksi juuri sinut?\"\n  ]);\n  const { toast } = useToast();\n\n  const techLeadChatMutation = useMutation({\n    mutationFn: async (data: { message: string }) => {\n      const response = await apiRequest(\"POST\", \"/api/tech-lead-chat\", { \n        message: data.message\n      });\n      return response.json();\n    },\n    onSuccess: (data) => {\n      setMessages(prev => [...prev, {\n        content: data.response,\n        isUser: false,\n        timestamp: Date.now(),\n      }]);\n      \n      // TODO: Implement Tidio handoff when handoff_requested is true\n    },\n    onError: () => {\n      toast({\n        title: \"Virhe\",\n        description: \"Viestin lähettäminen epäonnistui. Yritä uudelleen.\",\n        variant: \"destructive\"\n      });\n    }\n  });\n\n\n  const handleSend = () => {\n    const message = inputValue.trim();\n    if (!message || techLeadChatMutation.isPending) return;\n\n    setMessages(prev => [...prev, {\n      content: message,\n      isUser: true,\n      timestamp: Date.now()\n    }]);\n\n    setInputValue(\"\");\n    techLeadChatMutation.mutate({ message });\n  };\n\n  const handleExampleClick = (question: string) => {\n    if (techLeadChatMutation.isPending) return;\n\n    setMessages(prev => [...prev, {\n      content: question,\n      isUser: true,\n      timestamp: Date.now()\n    }]);\n\n    techLeadChatMutation.mutate({ message: question });\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n\n  // Optimized greeting function to avoid dependency on mutation object\n  const sendGreeting = useCallback(() => {\n    if (!techLeadChatMutation.isPending) {\n      setHasGreeted(true);\n      techLeadChatMutation.mutate({ \n        message: \"Tervehdi käyttäjää AI-Panuna ja esittäydy lyhyesti Humm Group Oy:n Tech Lead -hakijana. Kerro että olet tutustunut heidän toimintaansa ja olet valmis vastaamaan kysymyksiin.\"\n      });\n    }\n  }, [techLeadChatMutation]);\n\n  // Send automatic greeting when modal opens\n  useEffect(() => {\n    if (isOpen && !hasGreeted) {\n      sendGreeting();\n    }\n  }, [isOpen, hasGreeted, sendGreeting]);\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"max-w-4xl max-h-[90vh] bg-gradient-to-br from-slate-800/95 to-slate-900/95 backdrop-blur-xl border-slate-600/50\">\n        <DialogHeader>\n          <DialogTitle className=\"text-xl font-bold text-white flex items-center gap-3\">\n            <div className=\"w-8 h-8 bg-gradient-to-r from-blue-600 to-blue-700 rounded-lg flex items-center justify-center\">\n              <Users className=\"h-4 w-4 text-white\" />\n            </div>\n            Tech Lead - Panu Murtokangas\n          </DialogTitle>\n          <DialogDescription className=\"text-slate-300\">\n            CV-chat: Keskustele taustastani ja osaamisestani Humm Group Oy:n kontekstissa\n          </DialogDescription>\n        </DialogHeader>\n        \n        <div className=\"flex flex-col h-[70vh]\">\n          {/* Chat Messages */}\n          <ScrollArea className=\"flex-1 px-1\">\n            <div className=\"space-y-4 pb-4\">\n              {messages.map((message, index) => (\n                <div key={index} className={`flex ${message.isUser ? 'justify-end' : 'justify-start'}`}>\n                  <div className={`flex items-start space-x-3 max-w-[80%] ${message.isUser ? 'flex-row-reverse space-x-reverse' : ''}`}>\n                    <div className={`w-8 h-8 rounded-full flex items-center justify-center flex-shrink-0 ${\n                      message.isUser ? 'bg-blue-600' : 'bg-slate-600'\n                    }`}>\n                      {message.isUser ? (\n                        <User className=\"h-4 w-4 text-white\" />\n                      ) : (\n                        <Bot className=\"h-4 w-4 text-white\" />\n                      )}\n                    </div>\n                    <div className={`${message.isUser ? 'bg-blue-600 text-white' : 'bg-slate-700/50 text-slate-100'} rounded-lg p-3`}>\n                      {message.isUser ? (\n                        <span className=\"text-sm\">{message.content}</span>\n                      ) : (\n                        <div className=\"text-sm\">\n                          <ReactMarkdown \n                            remarkPlugins={[remarkGfm]}\n                            components={{\n                              h1: ({children}) => <h1 className=\"text-base font-bold mb-2 text-white\">{children}</h1>,\n                              h2: ({children}) => <h2 className=\"text-sm font-semibold mb-2 text-white\">{children}</h2>,\n                              h3: ({children}) => <h3 className=\"text-sm font-medium mb-1 text-slate-100\">{children}</h3>,\n                              p: ({children}) => <p className=\"mb-2 last:mb-0 text-slate-100\">{children}</p>,\n                              ul: ({children}) => <ul className=\"list-disc pl-4 mb-2 text-slate-100\">{children}</ul>,\n                              ol: ({children}) => <ol className=\"list-decimal pl-4 mb-2 text-slate-100\">{children}</ol>,\n                              li: ({children}) => <li className=\"mb-1 text-slate-100\">{children}</li>,\n                              strong: ({children}) => <strong className=\"font-semibold text-white\">{children}</strong>,\n                              em: ({children}) => <em className=\"italic text-slate-200\">{children}</em>,\n                              code: ({children}) => <code className=\"bg-slate-600 text-slate-100 px-1 py-0.5 rounded text-xs\">{children}</code>\n                            }}\n                          >\n                            {message.content}\n                          </ReactMarkdown>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))}\n              \n              {techLeadChatMutation.isPending && (\n                <div className=\"flex justify-start\">\n                  <div className=\"flex items-start space-x-3 max-w-[80%]\">\n                    <div className=\"w-8 h-8 bg-slate-600 rounded-full flex items-center justify-center flex-shrink-0\">\n                      <Bot className=\"h-4 w-4 text-white animate-pulse\" />\n                    </div>\n                    <div className=\"bg-slate-700/50 rounded-lg p-3\">\n                      <div className=\"flex items-center space-x-2\">\n                        <div className=\"flex space-x-1\">\n                          <div className=\"w-2 h-2 bg-blue-400 rounded-full animate-bounce\"></div>\n                          <div className=\"w-2 h-2 bg-blue-400 rounded-full animate-bounce\" style={{animationDelay: '0.1s'}}></div>\n                          <div className=\"w-2 h-2 bg-blue-400 rounded-full animate-bounce\" style={{animationDelay: '0.2s'}}></div>\n                        </div>\n                        <span className=\"text-xs text-slate-300\">\n                          Mietin vastausta...\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </ScrollArea>\n\n          {/* Example Questions */}\n          <div className=\"border-t border-slate-600/50 pt-4 mb-4\">\n            <p className=\"text-sm font-medium mb-3 text-slate-200 flex items-center gap-2\">\n              <Star className=\"h-4 w-4 text-yellow-400\" />\n              Esimerkkikysymykset:\n            </p>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\n              {followUpSuggestions.map((suggestion, index) => (\n                <PulseButton\n                  key={index}\n                  variant=\"outline\"\n                  size=\"sm\"\n                  pulse=\"subtle\"\n                  className=\"text-left h-auto py-3 px-4 justify-start text-slate-200 bg-slate-700/30 hover:bg-slate-600/50 border-slate-600 hover:border-blue-500 transition-all duration-200\"\n                  onClick={() => handleExampleClick(suggestion)}\n                  loading={techLeadChatMutation.isPending}\n                  data-testid={`tech-lead-example-${index}`}\n                >\n                  <span className=\"text-xs\">{suggestion}</span>\n                </PulseButton>\n              ))}\n            </div>\n          </div>\n\n          {/* Chat Input */}\n          <div className=\"flex space-x-3\">\n            <Input\n              type=\"text\"\n              placeholder=\"Kysy minulta mitä tahansa Tech Lead -roolista...\"\n              value={inputValue}\n              onChange={(e) => setInputValue(e.target.value)}\n              onKeyPress={handleKeyPress}\n              disabled={techLeadChatMutation.isPending}\n              className=\"flex-1 bg-slate-700/50 border-slate-600 focus:border-blue-500 text-slate-100 placeholder:text-slate-400\"\n              data-testid=\"tech-lead-chat-input\"\n            />\n            <PulseButton\n              onClick={handleSend}\n              loading={techLeadChatMutation.isPending}\n              disabled={!inputValue.trim()}\n              pulse=\"subtle\"\n              className=\"px-4 bg-blue-600 hover:bg-blue-700\"\n              data-testid=\"tech-lead-send-button\"\n            >\n              <Send className=\"h-4 w-4\" />\n            </PulseButton>\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}","size_bytes":10563},"server/cache.ts":{"content":"import { promises as fs } from 'fs';\nimport path from 'path';\n\ninterface CacheData {\n  cases: any[];\n  trends: any[];\n  attachedAssets: string;\n  lastUpdated: number;\n}\n\nlet cache: CacheData | null = null;\n\n/**\n * Reads and caches static data from attached_assets, cases, and trends\n * This eliminates slow file I/O on each API request\n */\nexport async function initializeCache(): Promise<void> {\n  console.log(\"🚀 Initializing server-side cache...\");\n  \n  try {\n    const startTime = Date.now();\n    \n    // Read attached assets\n    const attachedAssets = await readAttachedAssets();\n    \n    // Load cases data (static for now)\n    const cases = await loadCasesData();\n    \n    // Load trends data (static for now)  \n    const trends = await loadTrendsData();\n    \n    cache = {\n      cases,\n      trends,\n      attachedAssets,\n      lastUpdated: Date.now()\n    };\n    \n    const loadTime = Date.now() - startTime;\n    console.log(`✅ Cache initialized successfully in ${loadTime}ms`);\n    console.log(`📁 Cached ${cases.length} cases, ${trends.length} trends, ${attachedAssets.length} chars of assets`);\n    \n  } catch (error) {\n    console.error(\"❌ Failed to initialize cache:\", error);\n    // Set empty cache to prevent crashes\n    cache = {\n      cases: [],\n      trends: [],\n      attachedAssets: \"\",\n      lastUpdated: Date.now()\n    };\n  }\n}\n\n/**\n * Gets cached data - much faster than file I/O\n */\nexport function getCachedData(): CacheData {\n  if (!cache) {\n    console.warn(\"⚠️ Cache not initialized, returning empty data\");\n    return {\n      cases: [],\n      trends: [],\n      attachedAssets: \"\",\n      lastUpdated: 0\n    };\n  }\n  return cache;\n}\n\n/**\n * Force refresh cache (useful for development)\n */\nexport async function refreshCache(): Promise<void> {\n  console.log(\"🔄 Refreshing cache...\");\n  await initializeCache();\n}\n\n/**\n * Read attached assets and cache them\n */\nasync function readAttachedAssets(): Promise<string> {\n  try {\n    let pdfParse: any = null;\n    try {\n      const mod = await import('pdf-parse');\n      pdfParse = (mod as any).default || (mod as any);\n      if (typeof pdfParse !== 'function') {\n        pdfParse = null;\n        console.log(\"📋 PDF-parse not a valid function, skipping PDF files\");\n      }\n    } catch (err) {\n      console.log(\"📋 PDF-parse not available, skipping PDF files\");\n    }\n    \n    const assetsDir = path.join(process.cwd(), 'attached_assets');\n    \n    try {\n      const files = await fs.readdir(assetsDir);\n      const supportedFiles = files.filter(f => \n        f.endsWith('.txt') || f.endsWith('.md') || f.endsWith('.json') || \n        f.endsWith('.csv') || f.endsWith('.xml') || f.endsWith('.yaml') ||\n        f.endsWith('.yml') || f.endsWith('.tsv') || f.endsWith('.pdf')\n      );\n      \n      if (supportedFiles.length > 0) {\n        console.log(`📁 Caching attached_assets: ${supportedFiles.length} files found (${supportedFiles.join(', ')})`);\n        \n        const contents = await Promise.all(\n          supportedFiles.slice(0, 8).map(async f => {\n            const filePath = path.join(assetsDir, f);\n            let content = \"\";\n            \n            try {\n              if (f.endsWith('.pdf') && pdfParse) {\n                // Parse PDF file\n                const buffer = await fs.readFile(filePath);\n                const pdfData = await pdfParse(buffer);\n                content = pdfData.text || \"\";\n                console.log(`📋 PDF cached: ${f} (${content.length} characters)`);\n              } else if (f.endsWith('.pdf') && !pdfParse) {\n                content = `[PDF-tiedosto ${f} - tarvitsee pdf-parse kirjastoa]`;\n                console.log(`⚠️ Skipping PDF ${f} - pdf-parse not available`);\n              } else {\n                // Read text file\n                content = await fs.readFile(filePath, 'utf-8');\n              }\n            } catch (pdfError) {\n              console.error(`❌ Failed to read ${f}:`, pdfError);\n              content = `[Virhe luettaessa tiedostoa ${f}]`;\n            }\n            \n            return `📋 **${f}**:\\n${content.substring(0, 1500)}${content.length > 1500 ? '...' : ''}`;\n          })\n        );\n        \n        return `\n\n🎯 **ENSISIJAINEN TIETOLÄHDE - Käyttäjän lataamat tiedostot:**\n\n${contents.join('\\n\\n')}\n\n⚠️ **TÄRKEÄ OHJE**: Jos yllä olevista käyttäjän lataamista tiedostoista löytyy vastaus kysymykseen, käytä ENSISIJAISESTI näitä tietoja. Nämä ovat tuoreempia ja relevantimpia kuin alla olevat yleiset tiedot.\n\n---\n\n`;\n      } else {\n        console.log(\"📁 No attached_assets files found\");\n        return \"\";\n      }\n    } catch (err) {\n      console.log(\"📁 attached_assets directory not found or empty\");\n      return \"\";\n    }\n  } catch (err) {\n    console.log(\"📁 Failed to import fs/path modules for attached_assets\");\n    return \"\";\n  }\n}\n\n/**\n * Load cases data - in production this could come from database\n */\nasync function loadCasesData(): Promise<any[]> {\n  // Static cases data with all required fields for CaseCard\n  // Restored from original storage.ts data\n  return [\n    {\n      \"id\": \"alibaba\",\n      \"company\": \"Alibaba\",\n      \"country\": \"Kiina\",\n      \"industry\": \"Verkkokauppa\",\n      \"category\": \"Maailmanluokka\",\n      \"icon\": \"🛒\",\n      \"solution_name\": \"AliMe Chatbot\",\n      \"description\": \"Tekoälypohjainen chatbot joka hoiti massiiviset volyymit Singles' Day -ostospäivän aikana. Hyödynsi puheentunnistusta, semanttista ymmärrystä ja ennakoivaa analytiikkaa.\",\n      \"key_metrics\": [\n        { \"label\": \"Kyselyistä hoidettu automaattisesti\", \"value\": \"95-97%\", \"type\": \"success\" },\n        { \"label\": \"Kysymystä päivässä\", \"value\": \"300M\", \"type\": \"efficiency\" },\n        { \"label\": \"Työntekijän kapasiteetti\", \"value\": \"85k\", \"type\": \"savings\" }\n      ],\n      \"learning_points\": [\n        \"Tunnetilan tunnistus ja eskalointi ihmiselle\",\n        \"Semanttinen ymmärrys ja kontekstin säilyttäminen\",\n        \"Ennakoiva analytiikka ruuhka-aikojen hallintaan\"\n      ],\n      \"full_text\": \"Maailman suurimpiin kuuluva verkkokauppatoimija Alibaba otti tekoälypohjaisen AliMe-chatbotin käyttöön asiakaspalvelussaan. Tekoäly hoiti massiiviset 95-97 % kaikista asiakaspalvelukyselyistä suurimman ostospäivän (Singles' Day) aikana, vastaten satoihin miljooniin asiakaskyselyihin. Esimerkiksi vuonna 2019 AliMe vastasi 300 miljoonaan kysymykseen Singles' Day -festivaalin aikana, mikä vastaa 85 000 ihmistyöntekijän kapasiteettia. Chatbot hyödynsi puheentunnistusta, semanttista ymmärrystä ja ennakoivaa analytiikkaa: se osasi jopa tunnistaa asiakkaan tunnetilan ja hälyttää ihmistyöntekijän linjoille tarvittaessa. Tuloksena Alibaba pystyi palvelemaan ostostapahtumien valtavat volyymit nopeasti, vähentämään inhimillisen työn tarvetta huippukuormituksen aikana sekä pitämään vastausajat sekunneissa - mikä parantaa asiakaskokemusta ruuhkatilanteissakin.\"\n    },\n    {\n      \"id\": \"autodesk\",\n      \"company\": \"Autodesk\",\n      \"country\": \"USA\",\n      \"industry\": \"B2B Ohjelmistotuki\",\n      \"category\": \"B2B Malli\",\n      \"icon\": \"🏗️\",\n      \"solution_name\": \"AVA Virtual Agent\",\n      \"description\": \"IBM Watson -teknologiaan perustuva virtuaalinen tukiasiantuntija tekniseen asiakastukeen. Keskittyy yleisimpien tukipyyntöjen automaattiseen ratkaisemiseen.\",\n      \"key_metrics\": [\n        { \"label\": \"Ratkaisuajan lyhentyminen\", \"value\": \"36h → 2min\", \"type\": \"success\" },\n        { \"label\": \"Tyytyväisyyden kasvu\", \"value\": \"+10pp\", \"type\": \"efficiency\" },\n        { \"label\": \"Kysymystä kuukaudessa\", \"value\": \"35k/kk\", \"type\": \"savings\" }\n      ],\n      \"learning_points\": [\n        \"Kustannustehokkuus: $15-200 → alle $1 per tapaus\",\n        \"24/7 saatavuus teknisessä tuessa\",\n        \"Ihmisten vapautuminen monimutkaisiin tehtäviin\"\n      ],\n      \"full_text\": \"Suunnittelu- ja ohjelmistoyritys Autodesk on onnistuneesti ottanut käyttöön virtuaalisen tukiasiantuntijan nimeltä AVA (Autodesk Virtual Agent) asiakkaidensa tukipalvelussa. AVA hyödyntää tekoälyä (IBM Watson -teknologiaa) vastatakseen yleisimpiin tukipyyntöihin ja ratkaistakseen ongelmia. Tulokset ovat olleet vaikuttavia: Autodeskin mukaan AVA lyhensi tukipyyntöjen ratkaisuajan keskimäärin 36 tunnista vain muutamiin minuutteihin - toisin sanoen ratkaisuajat paranivat jopa 99 %. Samalla asiakastyytyväisyys nousi 10 prosenttiyksikköä virtuaaliassistentin käyttöönoton myötä. AVA:sta on tullut Autodeskin asiakaspalvelun käytetyin kanava: se käsittelee yli 35 000 asiakaskysymystä kuukaudessa ja hoitaa näin suurimman osan kontakteista. Myös kustannustehokkuus parani dramaattisesti - yhden tukitapauksen hoitamisen kustannus laski arviolta $15-200 tasolta alle $1 tapaukseen tekoälyn ansiosta. Tämä vapauttaa ihmistukihenkilöiden aikaa vaativampiin tehtäviin ja takaa asiakkaille nopean palvelun ympäri vuorokauden.\"\n    },\n    {\n      \"id\": \"swedbank\", \n      \"company\": \"Swedbank\",\n      \"country\": \"Ruotsi\",\n      \"industry\": \"Pankkipalvelut\",\n      \"category\": \"Pankkisektori\",\n      \"icon\": \"🏦\",\n      \"solution_name\": \"Nina Virtuaalinen Asiakaspalvelija\",\n      \"description\": \"Luonnollisen kielen ymmärtämiseen perustuva chatbot pankkipalveluihin. Käyttöönotto 2010-luvun puolivälissä, vakiintunut ratkaisu.\",\n      \"key_metrics\": [\n        { \"label\": \"Ensi kontaktin ratkaisu\", \"value\": \"78%\", \"type\": \"success\" },\n        { \"label\": \"Onnistumisprosentti\", \"value\": \"8/10\", \"type\": \"metric\" },\n        { \"label\": \"Keskustelua kuukaudessa\", \"value\": \"30k/kk\", \"type\": \"efficiency\" }\n      ],\n      \"learning_points\": [\n        \"24/7 saatavuus peruspalveluille\",\n        \"Nopea käyttöönottoaika: 3 kuukautta\",\n        \"Ihmisagentit vapautuvat monimutkaisiin tapauksiin\"\n      ],\n      \"full_text\": \"Pohjoismainen pankkikonserni Swedbank otti jo 2010-luvun puolivälissä käyttöön Nina-nimisen virtuaalisen asiakaspalvelijan verkkosivuillaan. Nina-pohjautuu luonnollisen kielen ymmärtämiseen ja pystyy käymään asiakkaiden kanssa keskustelua näiden kirjoittamalla kielellä. Tulokset näkyivät nopeasti: 78 % asiakkaiden kyselyistä ratkesi ensi kontaktilla Ninan avulla jo kolmen kuukauden sisällä käyttöönotosta. Chatbot kävi keskimäärin 30 000 keskustelua kuukaudessa, ja osasi vastata 8 kysymykseen 10:stä onnistuneesti ilman ihmisagentin apua. Tämä paransi palvelun saatavuutta ja vapautti pankin asiakaspalvelijoita monimutkaisempien tapausten hoitoon. Swedbankin mukaan asiakaskokemus parani selvästi, kun yleisimpiin kysymyksiin saatiin välittömät vastaukset vuorokaudenajasta riippumatta.\"\n    },\n    {\n      \"id\": \"verkkokauppa\",\n      \"company\": \"Verkkokauppa.com\",\n      \"country\": \"Suomi\",\n      \"industry\": \"Verkkomyynti\", \n      \"category\": \"Kotimainen\",\n      \"icon\": \"🛒\",\n      \"solution_name\": \"Asiakaspalvelu Chatbot\",\n      \"description\": \"Verkkokaupan chat-kanavan automaatio. Keskittyy yleisimpien asiakaspalvelukysymysten hoitamiseen ja tilausten seurantaan.\",\n      \"key_metrics\": [\n        { \"label\": \"Chat-kyselyistä automaattisesti\", \"value\": \"77%\", \"type\": \"metric\" },\n        { \"label\": \"Kaikista kontakteista chatissa\", \"value\": \"38%\", \"type\": \"success\" },\n        { \"label\": \"Välitön vastaus\", \"value\": \"24/7\", \"type\": \"efficiency\" }\n      ],\n      \"learning_points\": [\n        \"Chat-kanavan tehokas hyödyntäminen\",\n        \"Odotusaikojen lyhentäminen\", \n        \"Rutiinitehtävien automatisointi\"\n      ],\n      \"full_text\": \"Suomen suurimpiin kuuluva elektroniikan verkkokauppa Verkkokauppa.com on hyödyntänyt chatbot-teknologiaa asiakaspalveluchatissaan tehokkaasti. Yhtiön vuoden 2021 kestävän kehityksen raportin mukaan 38 % kaikista asiakaspalvelukontakteista tapahtui chat-kanavassa, ja näistä keskusteluista peräti 77 % hoidettiin chatbotin voimin. Toisin sanoen valtaosa asiakkaiden chat-kyselyistä saatiin ratkaistua automaattisesti tekoälyn avulla, ilman että ihmistyöntekijän tarvitsi puuttua - vain noin joka neljännessä chatissa tarvittiin ihmisen apua. Tämä on tuonut huomattavaa tehokkuutta: chatbot vastaa välittömästi yleisimpiin kysymyksiin (24/7), mikä lyhentää asiakkaiden odotusaikoja ja säästää asiakaspalvelijoiden aikaa. Ihmiset voivat keskittyä monimutkaisempiin tukipyyntöihin, kun botti hoitaa rutiinikysymykset. Verkkokauppa.com onkin raportoinut asiakaskokemuksen kohentuneen chat-kanavassa, ja asiakkaat ovat omaksuneet botti-palvelun hyvin.\"\n    },\n    {\n      \"id\": \"nordea\",\n      \"company\": \"Nordea\",\n      \"country\": \"Suomi/Pohjoismaat\",\n      \"industry\": \"Pankkipalvelut\",\n      \"category\": \"Pohjoismainen\", \n      \"icon\": \"🏛️\",\n      \"solution_name\": \"Nova Virtuaalinen Asiakaspalvelija\",\n      \"description\": \"Nordean oma chatbot henkilö- ja yritysasiakkaille. Käytössä vuodesta 2017, jatkuva kehittäminen ja kouluttaminen.\",\n      \"key_metrics\": [\n        { \"label\": \"Keskustelua vuonna 2024\", \"value\": \"7M+\", \"type\": \"efficiency\" },\n        { \"label\": \"Vastausaika peruskysymyksiin\", \"value\": \"2s\", \"type\": \"success\" },\n        { \"label\": \"Käytön kasvu 2021-2023\", \"value\": \"2x\", \"type\": \"metric\" }\n      ],\n      \"learning_points\": [\n        \"Suora ohjaus tarvittaviin palveluihin (esim. PIN-koodi)\",\n        \"Jatkuva kehittäminen ja kouluttaminen\",\n        \"Maakohtaiset erot käyttöasteessa\"\n      ],\n      \"full_text\": \"Pohjoismaiden suurin pankki Nordea on kehittänyt oman virtuaalisen asiakaspalvelijansa nimeltä Nova. Nova on ollut käytössä vuodesta 2017 ja palvelee Nordean henkilö- ja yritysasiakkaita tyypillisissä pankkiasioissa. Vuosien 2021-2023 aikana Nordean chatbotin käyttö on kaksinkertaistunut, ja vuonna 2024 Nova-chatbotin odotetaan käyvän yli 7 miljoonaa asiakaskeskustelua. Nova pystyy vastaamaan yksinkertaisiin kysymyksiin noin kahdessa sekunnissa, mikä on huomattavasti nopeampaa kuin puhelinpalvelussa jonottaminen. Nordea kertoo, että chatbot vapauttaa heidän asiakasneuvojilleen aikaa keskittyä vaikeampiin tapauksiin, kun Nova hoitaa peruskysymykset reaaliajassa. Chatbotin laatu on parantunut tekoälyn kehittymisen ja jatkuvan koulutuksen myötä, ja Nova osaa nykyään viedä asiakkaan suoraan tarvitsemiinsa pankkipalveluihin (esim. unohtuneen PIN-koodin tapauksessa Nova ohjaa suoraan kortin PIN-koodin näyttötoimintoon). Tämä on parantanut käyttökokemusta: asiakkaat saavat vastaukset ja palvelun nopeasti itsepalveluna, ja palaute on ollut Nordean mukaan myönteistä. Eri Pohjoismaissa kuitenkin näkyy eroja käyttöasteessa - esimerkiksi Norjassa chatbotia käytetään suhteessa eniten ja Tanskassa ollaan varovaisimpia - mutta kokonaisuutena Nova on vakiinnuttanut paikkansa tärkeänä ensikontaktin palvelukanavana.\"\n    },\n    {\n      \"id\": \"fonecta\",\n      \"company\": \"Fonecta\",\n      \"country\": \"Suomi\",\n      \"industry\": \"Digitaaliset palvelut\",\n      \"category\": \"B2B Digitaalinen\",\n      \"icon\": \"📞\",\n      \"solution_name\": \"Aina Chatbot\",\n      \"description\": \"Digitaalisten yhteystieto- ja markkinointipalvelujen tukeen räätälöity chatbot. Integroitunut osaksi tiimikulttuuria.\",\n      \"key_metrics\": [\n        { \"label\": \"Kyselyistä itsenäisesti\", \"value\": \"60-70%\", \"type\": \"metric\" },\n        { \"label\": \"Aukioloaikojen ulkopuolella\", \"value\": \"24/7\", \"type\": \"success\" },\n        { \"label\": \"Henkilöstöpalaute\", \"value\": \"Positiivinen\", \"type\": \"efficiency\" }\n      ],\n      \"learning_points\": [\n        \"Integroituminen yrityskulttuuriin\",\n        \"Työntekijöiden toiston vähentäminen\",\n        \"Chatbot saa usein oman nimen tiimissä\"\n      ],\n      \"full_text\": \"Fonecta, joka tarjoaa digitaalisia yhteystieto- ja markkinointipalveluja, on ottanut käyttöön Aina-nimisen chatbotin asiakaspalvelussaan. Yhtiön kokemusten mukaan Aina-botti vastaa itsenäisesti 60-70 % asiakkaiden kyselyistä, jolloin inhimilliset asiakaspalvelijat voivat keskittyä vain noin kolmannekseen yhteydenotoista. Tämä on lyhentänyt ihmistyöntekijöiden vastausaikoja ja parantanut palvelun saatavuutta: botti on aina hereillä ja käytettävissä, myös aukioloaikojen ulkopuolella. Fonectan mukaan sekä asiakkaiden että työntekijöiden palaute on ollut lähes yksinomaan positiivista, koska botti ratkaisee nopeasti perustarpeet ja työntekijät säästyvät jatkuvalta toistolta. Vastaavanlaisia hyötyjä on raportoitu myös muissa suomalaisissa organisaatioissa, joissa chatbot otettiin osaksi tiimiä: botti toimii tehokkaana \\\"tiimiläisenä\\\" ja saa usein jopa leikkimielisen oman nimensä yrityskulttuurissa, mikä kuvastaa sen integroitumista osaksi arkea.\"\n    }\n  ];\n}\n\n/**\n * Load trends data - in production this could come from database\n */\nasync function loadTrendsData(): Promise<any[]> {\n  // For now, return static trends data\n  // In production, this could read from database or files\n  return [\n    {\n      \"id\": \"autonomous_agents_2024\",\n      \"title\": \"Autonomiset AI-agentit vallankumouksessaan asiakaspalvelussa\",\n      \"category\": \"autonomous_agents\",\n      \"summary\": \"AI-agentit kehittyvät itsenäisiksi ongelmanratkaisijoiksi\",\n      \"content\": \"Vuonna 2024 autonomiset AI-agentit ovat mullistamassa asiakaspalvelua...\"\n    }\n    // More trends would be loaded here...\n  ];\n}","size_bytes":17263}},"version":1}
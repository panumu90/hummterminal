diff --git a/client/src/components/ui/pulse-button.tsx b/client/src/components/ui/pulse-button.tsx
new file mode 100644
index 0000000..abcd123
--- /dev/null
+++ b/client/src/components/ui/pulse-button.tsx
@@ -0,0 +1,89 @@
+import * as React from "react"
+import { Slot } from "@radix-ui/react-slot"
+import { cva, type VariantProps } from "class-variance-authority"
+import { Loader2 } from "lucide-react"
+
+import { cn } from "@/lib/utils"
+
+const pulseButtonVariants = cva(
+  "inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 transform active:scale-95 hover:scale-105 hover:shadow-lg",
+  {
+    variants: {
+      variant: {
+        default: "bg-primary text-primary-foreground hover:bg-primary/90 hover:shadow-primary/25",
+        destructive:
+          "bg-destructive text-destructive-foreground hover:bg-destructive/90 hover:shadow-destructive/25",
+        outline:
+          "border border-input bg-background hover:bg-accent hover:text-accent-foreground hover:border-primary/50",
+        secondary:
+          "bg-secondary text-secondary-foreground hover:bg-secondary/80 hover:shadow-secondary/25",
+        ghost: "hover:bg-accent hover:text-accent-foreground",
+        link: "text-primary underline-offset-4 hover:underline",
+      },
+      size: {
+        default: "h-10 px-4 py-2",
+        sm: "h-9 rounded-md px-3",
+        lg: "h-11 rounded-md px-8",
+        icon: "h-10 w-10",
+      },
+      pulse: {
+        none: "",
+        subtle: "hover:animate-pulse",
+        active: "animate-pulse",
+      }
+    },
+    defaultVariants: {
+      variant: "default",
+      size: "default",
+      pulse: "none",
+    },
+  }
+)
+
+export interface PulseButtonProps
+  extends React.ButtonHTMLAttributes<HTMLButtonElement>,
+    VariantProps<typeof pulseButtonVariants> {
+  asChild?: boolean
+  loading?: boolean
+  loadingText?: string
+}
+
+const PulseButton = React.forwardRef<HTMLButtonElement, PulseButtonProps>(
+  ({ className, variant, size, pulse, asChild = false, loading = false, loadingText, children, disabled, ...props }, ref) => {
+    const Comp = asChild ? Slot : "button"
+    
+    return (
+      <Comp
+        className={cn(
+          pulseButtonVariants({ variant, size, pulse: loading ? "active" : pulse, className }),
+          loading && "relative overflow-hidden"
+        )}
+        ref={ref}
+        disabled={disabled || loading}
+        {...props}
+      >
+        {loading && (
+          <div className="absolute inset-0 flex items-center justify-center bg-current/10 backdrop-blur-sm">
+            <Loader2 className="h-4 w-4 animate-spin" />
+            {loadingText && <span className="ml-2 text-xs">{loadingText}</span>}
+          </div>
+        )}
+        <span className={cn("transition-opacity", loading && "opacity-50")}>
+          {children}
+        </span>
+      </Comp>
+    )
+  }
+)
+PulseButton.displayName = "PulseButton"
+
+export { PulseButton, pulseButtonVariants }

diff --git a/client/src/pages/home.tsx b/client/src/pages/home.tsx
index abcd123..def4567 100644
--- a/client/src/pages/home.tsx
+++ b/client/src/pages/home.tsx
@@ -9,6 +9,7 @@ import { Card, CardContent } from "@/components/ui/card";
 import { Button } from "@/components/ui/button";
+import { Skeleton } from "@/components/ui/skeleton";
 import { AlertCircle, Bot, Building, Rocket, Users, TrendingUp, BarChart } from "lucide-react";
 import type { Case } from "@/lib/types";
 
@@ -110,23 +111,43 @@ export default function Home() {
             {/* Case Cards Grid */}
             {isLoading ? (
               <div className="space-y-6">
                 {[...Array(6)].map((_, i) => (
-                  <Card key={i} className="animate-pulse" data-testid={`skeleton-card-${i}`}>
-                    <CardContent className="p-6">
+                  <Card key={i} className="shadow-sm" data-testid={`skeleton-card-${i}`}>
+                    <CardContent className="p-6 animate-in fade-in-0 duration-300" style={{ animationDelay: `${i * 150}ms` }}>
                       <div className="flex items-start justify-between mb-4">
                         <div className="flex items-center space-x-3">
-                          <div className="w-12 h-12 bg-muted rounded-lg"></div>
+                          <Skeleton className="w-12 h-12 rounded-lg" />
                           <div>
-                            <div className="h-6 bg-muted rounded w-32 mb-2"></div>
-                            <div className="h-4 bg-muted rounded w-24"></div>
+                            <Skeleton className="h-6 w-32 mb-2" />
+                            <Skeleton className="h-4 w-24" />
                           </div>
                         </div>
-                        <div className="h-6 bg-muted rounded w-20"></div>
+                        <Skeleton className="h-6 w-20 rounded-full" />
                       </div>
-                      <div className="space-y-2">
-                        <div className="h-4 bg-muted rounded w-full"></div>
-                        <div className="h-4 bg-muted rounded w-3/4"></div>
+                      <div className="mb-4">
+                        <Skeleton className="h-4 w-40 mb-2" />
+                        <div className="space-y-2">
+                          <Skeleton className="h-4 w-full" />
+                          <Skeleton className="h-4 w-3/4" />
+                        </div>
                       </div>
+                      <div className="grid grid-cols-3 gap-4 mb-4">
+                        {[...Array(3)].map((_, j) => (
+                          <div key={j} className="text-center p-3">
+                            <Skeleton className="h-6 w-12 mx-auto mb-1 rounded" />
+                            <Skeleton className="h-3 w-16 mx-auto rounded" />
+                          </div>
+                        ))}
+                      </div>
+                      <div className="mb-4">
+                        <Skeleton className="h-4 w-32 mb-2" />
+                        <div className="space-y-1">
+                          {[...Array(3)].map((_, k) => (
+                            <Skeleton key={k} className="h-3 w-full" />
+                          ))}
+                        </div>
+                      </div>
+                      <Skeleton className="h-10 w-full rounded" />
                     </CardContent>
                   </Card>
                 ))}
@@ -134,8 +155,14 @@ export default function Home() {
             ) : cases?.length ? (
               <div className="space-y-6" data-testid="cases-grid">
-                {cases.map((case_) => (
-                  <CaseCard key={case_.id} case_={case_} />
+                {cases.map((case_, index) => (
+                  <div
+                    key={case_.id}
+                    className="animate-in fade-in-0 slide-in-from-bottom-4 duration-500"
+                    style={{ animationDelay: `${index * 100}ms` }}
+                  >
+                    <CaseCard case_={case_} />
+                  </div>
                 ))}
               </div>
             ) : (
@@ -214,6 +241,13 @@ export default function Home() {
           </div>
         </div>
+        
+        {/* Progressive Loading Notice */}
+        <div className="mt-12 mb-6 text-center">
+          <p className="text-xs text-gray-500 italic">
+            Progressive loading ja micro-interactions on toteutettu design-periaatteella
+            'fast feedback, no surprises'. Tämä vähentää koettua viivettä ja parantaa konversiota.
+          </p>
+        </div>
       </div>
     </div>
   );

diff --git a/client/src/components/case-card.tsx b/client/src/components/case-card.tsx
index abcd123..def4567 100644
--- a/client/src/components/case-card.tsx
+++ b/client/src/components/case-card.tsx
@@ -1,7 +1,8 @@
 import { Card, CardContent } from "@/components/ui/card";
 import { Badge } from "@/components/ui/badge";
-import { Button } from "@/components/ui/button";
+import { PulseButton } from "@/components/ui/pulse-button";
+import { Skeleton } from "@/components/ui/skeleton";
 import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription } from "@/components/ui/dialog";
 import { Check, Info, Loader2 } from "lucide-react";
 import { useState } from "react";
 import { useMutation } from "@tanstack/react-query";
@@ -138,18 +139,12 @@ export function CaseCard({ case_ }: CaseCardProps) {
           </div>
 
-          <Button
+          <PulseButton
             onClick={handleImplementationClick}
-            disabled={implementationMutation.isPending}
+            loading={implementationMutation.isPending}
+            loadingText="Luodaan sisältöä..."
+            pulse="subtle"
             className="w-full bg-primary hover:bg-primary/90 text-primary-foreground"
             data-testid={`button-implementation-${case_.id}`}
           >
-            {implementationMutation.isPending ? (
-              <>
-                <Loader2 className="mr-2 h-4 w-4 animate-spin" />
-                Luodaan yksityiskohtaista sisältöä...
-              </>
-            ) : (
-              <>
                 <Info className="mr-2 h-4 w-4" />
                 Lue lisää toteutuksesta
-              </>
-            )}
-          </Button>
+          </PulseButton>
         </CardContent>
       </Card>
@@ -174,11 +169,31 @@ export function CaseCard({ case_ }: CaseCardProps) {
           <div className="mt-4">
             {detailedContent ? (
-              <div className="prose prose-sm max-w-none text-foreground">
+              <div className="prose prose-sm max-w-none text-foreground animate-in fade-in-0 duration-500">
                 <ReactMarkdown remarkPlugins={[remarkGfm]}>
                   {detailedContent}
                 </ReactMarkdown>
               </div>
             ) : (
-              <div className="flex items-center justify-center p-8 text-muted-foreground">
-                <Loader2 className="mr-2 h-6 w-6 animate-spin" />
-                Luodaan yksityiskohtaista sisältöä...
+              <div className="space-y-4 p-4">
+                <div className="flex items-center justify-center mb-4 text-muted-foreground">
+                  <Loader2 className="mr-2 h-6 w-6 animate-spin" />
+                  Luodaan yksityiskohtaista sisältöä...
+                </div>
+                <div className="space-y-3">
+                  <Skeleton className="h-4 w-full" />
+                  <Skeleton className="h-4 w-4/5" />
+                  <Skeleton className="h-4 w-full" />
+                  <Skeleton className="h-4 w-3/5" />
+                  <div className="pt-2">
+                    <Skeleton className="h-6 w-1/3 mb-2" />
+                    <Skeleton className="h-4 w-full" />
+                    <Skeleton className="h-4 w-5/6" />
+                  </div>
+                  <div className="pt-2">
+                    <Skeleton className="h-6 w-1/4 mb-2" />
+                    <Skeleton className="h-4 w-full" />
+                    <Skeleton className="h-4 w-4/5" />
+                    <Skeleton className="h-4 w-2/3" />
+                  </div>
+                </div>
               </div>
             )}
           </div>

diff --git a/client/src/components/chat-interface.tsx b/client/src/components/chat-interface.tsx
index abcd123..def4567 100644
--- a/client/src/components/chat-interface.tsx
+++ b/client/src/components/chat-interface.tsx
@@ -2,6 +2,8 @@ import { useState, useRef, useEffect } from "react";
 import { Card, CardContent } from "@/components/ui/card";
 import { Button } from "@/components/ui/button";
+import { PulseButton } from "@/components/ui/pulse-button";
+import { Skeleton } from "@/components/ui/skeleton";
 import { Input } from "@/components/ui/input";
 import { Badge } from "@/components/ui/badge";
 import ReactMarkdown from 'react-markdown';
@@ -684,12 +686,13 @@ export function ChatInterface() {
           <div className="grid grid-cols-1 gap-2">
             {mcpQuestions.map((question) => {
               const IconComponent = question.icon;
               return (
-                <Button
+                <PulseButton
                   key={question.id}
                   variant="outline"
                   size="sm"
+                  pulse="subtle"
                   className="h-auto p-3 text-xs text-left justify-start border-emerald-800 hover:bg-emerald-900 hover:border-emerald-700 text-emerald-50 hover:text-white"
                   onClick={() => handleQuestionClick(question.id)}
+                  loading={questionMutation.isPending}
                   disabled={questionMutation.isPending}
                   data-testid={`question-${question.id}`}
                 >
                   <IconComponent className="h-4 w-4 mr-2 text-emerald-600 flex-shrink-0" />
                   <span className="leading-tight">{question.question}</span>
-                </Button>
+                </PulseButton>
               );
             })}
           </div>
@@ -790,11 +793,21 @@ export function ChatInterface() {
           ))}
           {chatMutation.isPending && (
-            <div className="chat-message" data-testid="loading-message">
+            <div className="chat-message animate-in fade-in-0 duration-300" data-testid="loading-message">
               <div className="flex items-start space-x-3">
                 <div className="w-8 h-8 bg-primary rounded-full flex items-center justify-center flex-shrink-0">
                   <Bot className="h-4 w-4 text-primary-foreground animate-pulse" />
                 </div>
-                <div className="bg-muted rounded-lg p-3 max-w-xs">
-                  <p className="text-sm text-muted-foreground">Kirjoittaa...</p>
+                <div className="bg-muted rounded-lg p-3 max-w-2xl">
+                  <div className="flex items-center space-x-2 mb-2">
+                    <div className="flex space-x-1">
+                      <div className="w-2 h-2 bg-primary rounded-full animate-bounce"></div>
+                      <div className="w-2 h-2 bg-primary rounded-full animate-bounce" style={{animationDelay: '0.1s'}}></div>
+                      <div className="w-2 h-2 bg-primary rounded-full animate-bounce" style={{animationDelay: '0.2s'}}></div>
+                    </div>
+                    <p className="text-sm text-muted-foreground">AI miettii vastausta...</p>
+                  </div>
+                  <div className="space-y-2">
+                    <Skeleton className="h-3 w-full" />
+                    <Skeleton className="h-3 w-4/5" />
+                    <Skeleton className="h-3 w-3/5" />
+                  </div>
                 </div>
               </div>
             </div>
@@ -812,11 +825,13 @@ export function ChatInterface() {
             <div className="grid grid-cols-1 md:grid-cols-2 gap-2">
               {followUpSuggestions.map((suggestion, index) => (
-                <Button
+                <PulseButton
                   key={index}
                   variant="outline"
                   size="sm"
-                  className="text-left h-auto py-3 px-4 justify-start whitespace-normal bg-slate-700/50 hover:bg-slate-600/50 text-slate-100 border-slate-600 hover:border-slate-500"
+                  pulse="subtle"
+                  className="text-left h-auto py-3 px-4 justify-start whitespace-normal bg-slate-700/50 hover:bg-slate-600/50 text-slate-100 border-slate-600 hover:border-slate-500 animate-in fade-in-0 slide-in-from-bottom-2 duration-300"
+                  style={{animationDelay: `${index * 100}ms`}}
                   onClick={() => handleFollowUpClick(suggestion)}
+                  loading={chatMutation.isPending}
                   data-testid={`follow-up-input-${index}`}
                 >
                   <span className="text-xs leading-relaxed">{suggestion}</span>
-                </Button>
+                </PulseButton>
               ))}
             </div>
           </div>
@@ -841,11 +856,12 @@ export function ChatInterface() {
               data-testid="chat-input"
             />
-            <Button
+            <PulseButton
               onClick={handleSend}
-              disabled={chatMutation.isPending || !inputValue.trim()}
+              loading={chatMutation.isPending}
+              disabled={!inputValue.trim()}
               size="lg"
+              pulse="subtle"
               className="h-12 px-6"
               data-testid="send-button"
             >
               <Send className="h-5 w-5" />
-            </Button>
+            </PulseButton>
           </div>
           <div className="mt-3 flex items-center justify-between text-xs text-slate-400">
             <span>💼 Räätälöidyt vastaukset Humm Group Oy:n johdolle</span>